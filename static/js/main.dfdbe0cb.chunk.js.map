{"version":3,"sources":["App.module.css","pages/Page.module.css","pages/validation-rules-analysis/validation-rules-analysis-table/ValidationRulesAnalysisTable.module.css","components/available-datasets-select/AvailableDatasetsSelect.module.css","pages/home/Home.module.css","components/alert-bar/AlertBar.module.css","components/available-organisation-units-tree/AvailableOrganisationUnitsTree.module.css","components/download-as/DownloadAs.module.css","components/outlier-analysis-table/OutlierAnalysisTable.module.css","pages/follow-up-analysis/follow-up-analysis-table/FollowUpAnalysisTable.module.css","pages/validation-rules-analysis/validation-rules-details/ValidationRulesDetails.module.css","locales/index.js","configI18n.js","pages/home/grid-section/GridSection.js","pages/Page.js","components/alert-bar/AlertBar.js","components/validation-rule-groups-select/ValidationRuleGroupsSelect.js","components/available-organisation-units-tree/AvailableOrganisationUnitsTree.js","helpers/docs.js","components/page-helper/PageHelper.js","pages/PageStyles.js","components/formatters/FormattedNumber.js","components/download-as/DownloadAs.js","server.conf.js","pages/validation-rules-analysis/validation-rules-details/ValidationRulesDetails.js","pages/validation-rules-analysis/validation-rules-analysis-table/ValidationRulesAnalysisTable.js","helpers/dates.js","pages/validation-rules-analysis/ValidationRulesAnalysis.js","components/available-datasets-select/AvailableDatasetsSelect.js","components/outlier-analysis-table/OutlierAnalysisTable.js","pages/std-dev-outlier-analysis/StdDevOutlierAnalysis.js","pages/min-max-outlier-analysis/MinMaxOutlierAnalysis.js","pages/follow-up-analysis/follow-up-analysis-table/FollowUpAnalysisTable.js","pages/follow-up-analysis/FollowUpAnalysis.js","pages/sections.conf.js","pages/home/Home.js","components/app-router/NoMatch.js","components/app-router/AppRouter.js","App.js","theme.js","serviceWorker.js","index.js","pages/home/grid-section/GridSection.module.css"],"names":["module","exports","namespace","moment","locale","i18n","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","configI18n","userSettings","lang","keyUiLocale","code","langs","prefixed","map","c","includes","filter","startsWith","length","isLangRTL","document","body","setAttribute","GridSection","className","to","this","props","section","path","key","classNames","styles","gridElement","gridTitleBar","gridTitleDescription","info","label","gridIcon","icon","gridDescription","t","description","gridActionText","actionText","PureComponent","Page","pageMounted","context","currentSection","sectionKey","updateAppState","error","isPageMounted","messageError","message","showSnackbar","snackbarConf","type","ERROR","pageState","loading","Component","contextTypes","d2","PropTypes","object","string","func","AlertBar","alertBar","style","display","show","ALL_VALIDATION_RULE_GROUPS_OPTION","id","displayName","ValidationRuleGroupsSelect","state","validationRuleGroups","selected","onChange","bind","translatedAllValidationRulesOption","models","validationRuleGroup","list","paging","fields","then","validationRuleGroupsResponse","setState","toArray","catch","manageError","event","index","value","selectedName","floatingLabelText","item","primaryText","defaultProps","AvailableOrganisationUnitsTree","rootWithMember","handleOrgUnitClick","organisationUnits","level","organisationUnitsResponse","rootWithMembers","orgUnit","selectedOrganisationUnitSplitted","split","selectedOrganisationUnitId","tree","hideMemberCount","Boolean","root","initiallyExpanded","onSelectClick","getDocsVersion","major","minor","snapshot","PageHelper","lng","sectionDocsKey","iconStyle","color","href","system","version","target","rel","tooltip","tooltipPosition","iconClassName","pageStyles","inputForm","width","iconColor","fill","cursorStyle","cursor","FormattedNumber","Intl","NumberFormat","sessionStorage","getItem","minimumFractionDigits","maximumFractionDigits","format","DownloadAs","api","Api","getApi","timestamp","Date","now","downloadAs","baseUrl","endpoint","download","apiConf","endpoints","validationRulesAnalysis","validationRulesExpression","validationRulesReport","validationRules","minMaxOutliersAnalysis","standardDeviationOutliersAnalysis","folloupAnalysis","markDataValue","reportAnalysis","results","analysis","limit","ValidationRulesDetails","openDetails","rule","expression","leftSide","rightSide","loadDetails","handleClose","nextProps","nextState","Object","keys","forEach","property","hasOwnProperty","ValidationRulesAnalysis","STATE_PROPERTIES","requestRule","validationRuleId","requestExpression","periodId","organisationUnitId","Promise","all","get","dialogActions","primary","onClick","result","sectionBox","sectionTitle","sectionSubTitle","displayDescription","showNoData","side","cssPageStyles","center","noData","buildSection","elements","classNameRow","right","element","name","Number","jsPageStyles","autoScrollBodyContent","title","actions","modal","open","onRequestClose","propTypes","isRequired","ValidationRulesAnalysisTable","rows","organisation","period","importance","validationRule","leftValue","operator","rightValue","cardHeader","selectable","appTable","validationTable","displaySelectAll","adjustForCheckbox","enableSelectAll","displayRowCheckbox","stripedRows","cardFooter","end","convertDateToApiDateFormat","date","toISOString","showTable","startDate","endDate","validationRuleGroupId","notification","persist","validate","back","startDateOnChange","endDateOnChange","organisationUnitOnChange","validationRuleGroupOnChange","updateSendNotifications","updatePersistNewResults","isFormValid","request","ou","vrg","post","response","convertElementFromApiResponse","feedback","SUCCESS","checked","pageHeader","getDocsKeyForSection","showAlertBar","Card","formLabel","textFieldStyle","defaultDate","maxDate","minDate","labelPosition","onCheck","mainButton","disabled","isActionDisabled","generateElementKey","e","organisationUnitDisplayName","periodDisplayName","validationRuleDescription","leftSideValue","rightSideValue","AvailableDatasetsSelect","dataSets","dataSet","dataSetsResponse","multiple","select","options","OutlierAnalyisTable","parentToggleCheckbox","toggleCheckbox","dataElement","min","max","centerFlex","checkboxWrapper","marked","outlierAnalysisTable","attributeOptionComboId","categoryOptionComboId","sourceId","dataElementId","dataElementName","sourceName","parseFloat","followup","convertElementToToggleFollowupRequest","StdDevOutlierAnalysis","dataSetIds","standardDeviation","start","dataSetsOnChange","standardDeviationOnChange","ds","selectedOptions","i","push","currentElement","followups","MinMaxOutlierAnalysis","FollowUpAnalysisTable","showComment","comment","unfollow","closeCommentDialog","element1","element2","unfollowups","convertElementToUnFollowupRequest","oneChecked","commentDialogActions","updateCheckbox","followUpAnalysisTable","spaceBetween","FollowUpAnalysis","getFollowUpList","j","areElementsTheSame","sections","component","docs","Home","gridElements","gridContainer","NoMatch","location","pathname","AppRouter","routes","exact","render","App","translations","settings","app_search_placeholder","profile","account","help","log_out","about_dhis2","manage_my_apps","no_results_found","interpretations","messages","assign","injectTranslationsToD2","appState","translatedSections","containerElement","feedbackElement","centered","CircularProgress","conf","HeaderBar","appName","onChangeSection","contentWrapper","contentArea","childContextTypes","bool","shape","theme","spacing","Spacing","fontFamily","palette","primary1Color","primary2Color","blue700","primary3Color","blue100","accent1Color","orange500","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","setLevel","levels","INFO","AppComponent","withRouter","process","ReactDOM","apiVersion","CssReset","D2UIApp","appTheme","initConfig","schemas","getElementById","getUserSettings","uiLocale","setItem","URL","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dfdbe0cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"App_contentArea__Y_GhT\",\"contentWrapper\":\"App_contentWrapper__32IM7\",\"leftBar\":\"App_leftBar__1mpSD\",\"centered\":\"App_centered__2lsYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Page_section__48ljQ\",\"mainButton\":\"Page_mainButton__38d7P\",\"appTable\":\"Page_appTable__3ksZt\",\"right\":\"Page_right__oLgt0\",\"center\":\"Page_center__120Pl\",\"centerFlex\":\"Page_centerFlex__3KXC0\",\"pageHeader\":\"Page_pageHeader__1NFoO\",\"cardHeader\":\"Page_cardHeader__xj55q\",\"cardFooter\":\"Page_cardFooter__RiSMS\",\"spaceBetween\":\"Page_spaceBetween__2b-hs\",\"end\":\"Page_end__3xjyQ\",\"formLabel\":\"Page_formLabel__22ela\",\"checkboxWrapper\":\"Page_checkboxWrapper__1ypbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"validationTable\":\"ValidationRulesAnalysisTable_validationTable__IZ4f8\",\"operator\":\"ValidationRulesAnalysisTable_operator__1yruT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"AvailableDatasetsSelect_select__2RJaO\",\"options\":\"AvailableDatasetsSelect_options__2nV_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"Home_gridContainer__2RzmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBar\":\"AlertBar_alertBar__1nykA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tree\":\"AvailableOrganisationUnitsTree_tree__36zmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"downloadAs\":\"DownloadAs_downloadAs__EXpfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outlierAnalysisTable\":\"OutlierAnalysisTable_outlierAnalysisTable__eaMyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followUpAnalysisTable\":\"FollowUpAnalysisTable_followUpAnalysisTable__plQH2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionBox\":\"ValidationRulesDetails_sectionBox__3I79x\",\"sectionTitle\":\"ValidationRulesDetails_sectionTitle__j-YIb\",\"sectionSubTitle\":\"ValidationRulesDetails_sectionSubTitle__3oXtg\",\"noData\":\"ValidationRulesDetails_noData__csWGG\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'data-quality-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","import i18n from './locales'\n\nconst isLangRTL = code => {\n    const langs = ['ar', 'fa', 'ur']\n    const prefixed = langs.map(c => `${c}-`)\n\n    return (\n        langs.includes(code) ||\n        prefixed.filter(c => code.startsWith(c)).length > 0\n    )\n}\n\nexport const configI18n = userSettings => {\n    const lang = userSettings.keyUiLocale\n\n    if (isLangRTL(lang)) {\n        document.body.setAttribute('dir', 'rtl')\n    }\n\n    i18n.changeLanguage(lang)\n}\n\nexport const injectTranslationsToD2 = d2 => {\n    if (d2) {\n        const translations = {\n            settings: 'Settings',\n            app_search_placeholder: 'Search apps',\n            profile: 'Profile',\n            account: 'Account',\n            help: 'Help',\n            log_out: 'Log out',\n            about_dhis2: 'About DHIS 2',\n            manage_my_apps: 'Manage my apps',\n            no_results_found: 'No results found',\n            interpretations: 'Interpretations',\n            messages: 'Messages',\n        }\n        const translationKeys = Object.keys(translations)\n\n        translationKeys.forEach(key => {\n            translations[key] = i18n.t(translations[key])\n        })\n\n        Object.assign(d2.i18n.translations, translations)\n    }\n}\n\nexport default configI18n\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { GridTile } from 'material-ui/GridList'\nimport FontIcon from 'material-ui/FontIcon'\nimport classNames from 'classnames'\nimport i18n from '../../../locales'\nimport styles from './GridSection.module.css'\n\nclass GridSection extends PureComponent {\n    static propTypes = {\n        section: PropTypes.shape({\n            key: PropTypes.string,\n            path: PropTypes.string,\n            info: PropTypes.shape({\n                label: PropTypes.string,\n                description: PropTypes.string,\n                icon: PropTypes.string,\n                actionText: PropTypes.string,\n            }),\n        }).isRequired,\n    }\n\n    render() {\n        return (\n            <Link className=\"link\" to={this.props.section.path}>\n                <GridTile\n                    key={this.props.section.key}\n                    className={classNames('section', styles.gridElement)}\n                >\n                    <div className={classNames('row', styles.gridTitleBar)}>\n                        <span\n                            className={classNames(\n                                'section-title',\n                                styles.gridTitleDescription\n                            )}\n                        >\n                            {this.props.section.info.label}\n                        </span>\n                        <FontIcon\n                            className={classNames(\n                                'material-icons',\n                                'icon',\n                                styles.gridIcon\n                            )}\n                        >\n                            {this.props.section.info.icon}\n                        </FontIcon>\n                    </div>\n                    <span\n                        className={classNames(\n                            'section-description',\n                            'row',\n                            styles.gridDescription\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.description)}\n                    </span>\n                    <span\n                        className={classNames(\n                            'section-action-text',\n                            'row',\n                            styles.gridActionText\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.actionText)}\n                    </span>\n                </GridTile>\n            </Link>\n        )\n    }\n}\n\nexport default GridSection\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ERROR } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport i18n from '../locales'\n\nclass Page extends Component {\n    static propTypes = {\n        sectionKey: PropTypes.string.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    componentWillMount() {\n        this.pageMounted = true\n\n        // update section on side bar\n        if (this.context.currentSection !== this.props.sectionKey) {\n            this.context.updateAppState({\n                currentSection: this.props.sectionKey,\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this.pageMounted = false\n    }\n\n    isPageMounted() {\n        return this.pageMounted\n    }\n\n    manageError(error) {\n        if (this.isPageMounted()) {\n            const messageError =\n                error && error.message\n                    ? error.message\n                    : i18n.t('An unexpected error happened during analysis')\n\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: ERROR,\n                    message: messageError,\n                },\n                pageState: {\n                    loading: false,\n                },\n            })\n        }\n    }\n}\n\nexport default Page\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Paper } from 'material-ui'\nimport styles from './AlertBar.module.css'\nimport i18n from '../../locales'\n\nclass AlertBar extends PureComponent {\n    static propTypes = {\n        show: PropTypes.bool.isRequired,\n    }\n\n    render() {\n        return (\n            <Paper>\n                <div\n                    className={styles.alertBar}\n                    style={{ display: this.props.show ? 'flex' : 'none' }}\n                >\n                    {i18n.t(\n                        'More than 500 values found, please narrow the search to see all'\n                    )}\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default AlertBar\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport i18n from '../../locales'\n\nexport const ALL_VALIDATION_RULE_GROUPS_ID = -1\nexport const ALL_VALIDATION_RULE_GROUPS_OPTION = {\n    id: ALL_VALIDATION_RULE_GROUPS_ID,\n    displayName: '[All Validation Rules]',\n}\n\nclass ValidationRuleGroupsSelect extends PureComponent {\n    static propTypes = {\n        style: PropTypes.object,\n        onChange: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        style: {},\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            validationRuleGroups: [ALL_VALIDATION_RULE_GROUPS_OPTION],\n            selected: ALL_VALIDATION_RULE_GROUPS_ID,\n        }\n\n        this.onChange = this.onChange.bind(this)\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        const translatedAllValidationRulesOption = ALL_VALIDATION_RULE_GROUPS_OPTION\n        translatedAllValidationRulesOption.displayName = i18n.t(\n            ALL_VALIDATION_RULE_GROUPS_OPTION.displayName\n        )\n        d2.models.validationRuleGroup\n            .list({\n                paging: false,\n                fields: 'id,displayName',\n            })\n            .then(validationRuleGroupsResponse => {\n                this.setState({\n                    validationRuleGroups: [\n                        translatedAllValidationRulesOption,\n                        ...validationRuleGroupsResponse.toArray(),\n                    ],\n                })\n            })\n            .catch(() => {\n                this.manageError()\n            })\n    }\n\n    onChange(event, index, value) {\n        this.setState({\n            selected: value,\n            selectedName:\n                value === ALL_VALIDATION_RULE_GROUPS_ID\n                    ? '[All Validation Rules]'\n                    : this.state.validationRuleGroups[index].displayName,\n        })\n\n        this.props.onChange(event, index, value)\n    }\n\n    render() {\n        return (\n            <SelectField\n                style={this.props.style}\n                floatingLabelText={i18n.t('Validation Rule Group')}\n                onChange={this.onChange}\n                value={this.state.selected}\n            >\n                {this.state.validationRuleGroups.map(item => (\n                    <MenuItem\n                        key={item.id}\n                        value={item.id}\n                        primaryText={item.displayName}\n                    />\n                ))}\n            </SelectField>\n        )\n    }\n}\n\nexport default ValidationRuleGroupsSelect\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component'\nimport i18n from '../../locales'\nimport styles from './AvailableOrganisationUnitsTree.module.css'\n\nclass AvailableOrganisationUnitsTree extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        onChange: PropTypes.func,\n    }\n\n    static defaultProps = {\n        onChange: null,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            selected: [],\n            rootWithMember: null,\n        }\n\n        this.handleOrgUnitClick = this.handleOrgUnitClick.bind(this)\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        if (this.state.rootWithMember == null) {\n            d2.models.organisationUnits\n                .list({\n                    paging: false,\n                    level: 1,\n                    fields:\n                        'id,displayName,path,children::isNotEmpty,memberCount',\n                })\n                .then(organisationUnitsResponse => {\n                    const organisationUnits = organisationUnitsResponse.toArray()\n                    this.setState({\n                        rootWithMembers: organisationUnits[0],\n                    })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    handleOrgUnitClick(event, orgUnit) {\n        if (!this.state.selected.includes(orgUnit.path)) {\n            this.setState({ selected: [orgUnit.path] })\n            if (this.props.onChange) {\n                const selectedOrganisationUnitSplitted = orgUnit.path.split('/')\n                const selectedOrganisationUnitId =\n                    selectedOrganisationUnitSplitted[\n                        selectedOrganisationUnitSplitted.length - 1\n                    ]\n                this.props.onChange(selectedOrganisationUnitId)\n            }\n        }\n    }\n\n    render() {\n        if (this.state.rootWithMembers) {\n            return (\n                <div className={styles.tree}>\n                    <OrgUnitTree\n                        hideMemberCount={Boolean(true)}\n                        root={this.state.rootWithMembers}\n                        selected={this.state.selected}\n                        initiallyExpanded={[\n                            `/${this.state.rootWithMembers.id}`,\n                        ]}\n                        onSelectClick={this.handleOrgUnitClick}\n                    />\n                </div>\n            )\n        }\n\n        return <span>{i18n.t('Updating Organisation Units Tree...')}</span>\n    }\n}\n\nexport default AvailableOrganisationUnitsTree\n","export const DOCS_LINK = 'https://docs.dhis2.org'\nexport const DOCS_TOOLTIP_LABEL = 'Open user guide'\n\n/**\n * Returns the \"version\" of the documentation that corresponds with the current dhis2 version.\n *\n * @param {Object} version - The version definition as provided by d2.system.version.\n * @param {number} version.minor - The minor dhis2 version. e.g. The 25 in 2.25.\n * @param {boolean} version.snapshot - True when the current version is the snapshot(master/development) branch.\n *\n * @returns {string} `master` for a snapshot branch. `25` for 2.25 etc.\n */\nexport const getDocsVersion = ({ major, minor, snapshot }) => {\n    if (snapshot) {\n        return 'master'\n    }\n    return `${major}.${minor}`\n}\n\nexport default getDocsVersion\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { IconButton } from 'material-ui'\nimport i18n from '../../locales'\nimport {\n    getDocsVersion,\n    DOCS_LINK,\n    DOCS_TOOLTIP_LABEL,\n} from '../../helpers/docs'\n\nclass PageHelper extends PureComponent {\n    static propTypes = {\n        lng: PropTypes.string,\n        sectionDocsKey: PropTypes.string.isRequired,\n    }\n\n    static defaultProps = {\n        lng: 'en',\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    render() {\n        const { d2 } = this.context\n        const { lng, sectionDocsKey } = this.props\n        return (\n            <IconButton\n                className=\"helper-icon\"\n                iconStyle={{ color: '#276696' }}\n                href={`${DOCS_LINK}/${getDocsVersion(\n                    d2.system.version\n                )}/${lng}/user/html/${sectionDocsKey}.html`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                tooltip={i18n.t(DOCS_TOOLTIP_LABEL)}\n                tooltipPosition=\"bottom-center\"\n                iconClassName=\"material-icons\"\n            >\n                help\n            </IconButton>\n        )\n    }\n}\n\nexport default PageHelper\n","const pageStyles = {\n    inputForm: {\n        width: '100%',\n    },\n    iconColor: {\n        fill: '#ff9900',\n    },\n    cursorStyle: {\n        cursor: 'pointer',\n    },\n}\n\nexport default pageStyles\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FormattedNumber = props => (\n    <span>\n        {new Intl.NumberFormat(sessionStorage.getItem('uiLocale'), {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n        }).format(props.value)}\n    </span>\n)\n\nFormattedNumber.propTypes = {\n    value: PropTypes.number.isRequired,\n}\n\nexport default FormattedNumber\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '../../locales'\nimport styles from './DownloadAs.module.css'\n\nclass DownloadAs extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        endpoint: PropTypes.string.isRequired,\n    }\n\n    render() {\n        const api = this.context.d2.Api.getApi()\n        const timestamp = Date.now()\n        return (\n            <div className={styles.downloadAs}>\n                <a\n                    className=\"export-pdf-action\"\n                    href={`${api.baseUrl}${\n                        this.props.endpoint\n                    }.pdf?t=${timestamp}`}\n                    download\n                >\n                    {i18n.t('DOWNLOAD AS PDF')}\n                </a>\n                <a\n                    className=\"export-xls-action\"\n                    href={`${api.baseUrl}${\n                        this.props.endpoint\n                    }.xls?t=${timestamp}`}\n                    download\n                >\n                    {i18n.t('DOWNLOAD AS XLS')}\n                </a>\n                <a\n                    className=\"export-csv-action\"\n                    href={`${api.baseUrl}${\n                        this.props.endpoint\n                    }.csv?t=${timestamp}`}\n                    download\n                >\n                    {i18n.t('DOWNLOAD AS CSV')}\n                </a>\n            </div>\n        )\n    }\n}\n\nexport default DownloadAs\n","export const apiConf = {\n    endpoints: {\n        validationRulesAnalysis: '/dataAnalysis/validationRules',\n        validationRulesExpression: '/dataAnalysis/validationRulesExpression',\n        validationRulesReport: '/dataAnalysis/validationRules/report',\n        validationRules: '/validationRules',\n        minMaxOutliersAnalysis: '/dataAnalysis/minMaxOutlier',\n        standardDeviationOutliersAnalysis: '/dataAnalysis/stdDevOutlier',\n        folloupAnalysis: '/dataAnalysis/followup',\n        markDataValue: '/dataAnalysis/followup/mark',\n        reportAnalysis: '/dataAnalysis/report',\n    },\n    results: {\n        analysis: {\n            limit: 500,\n        },\n    },\n}\n\nexport default apiConf\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dialog, FlatButton, FontIcon } from 'material-ui'\nimport classNames from 'classnames'\nimport i18n from '../../../locales'\nimport Page from '../../Page'\nimport jsPageStyles from '../../PageStyles'\nimport cssPageStyles from '../../Page.module.css'\nimport styles from './ValidationRulesDetails.module.css'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport { apiConf } from '../../../server.conf'\nimport ValidationRulesAnalysis from '../ValidationRulesAnalysis'\n\nclass ValidationRulesDetails extends Page {\n    static STATE_PROPERTIES = ['loading']\n\n    static propTypes = {\n        validationRuleId: PropTypes.string.isRequired,\n        periodId: PropTypes.string.isRequired,\n        organisationUnitId: PropTypes.string.isRequired,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            loading: false,\n            openDetails: false,\n            rule: {},\n            expression: {\n                leftSide: [],\n                rightSide: [],\n            },\n        }\n\n        this.loadDetails = this.loadDetails.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ValidationRulesAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    loadDetails() {\n        if (!this.state.loading) {\n            const api = this.context.d2.Api.getApi()\n            const requestRule = `${apiConf.endpoints.validationRules}/${\n                this.props.validationRuleId\n            }`\n            const requestExpression =\n                `${apiConf.endpoints.validationRulesExpression}` +\n                `?validationRuleId=${this.props.validationRuleId}` +\n                `&periodId=${this.props.periodId}` +\n                `&organisationUnitId=${this.props.organisationUnitId}`\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n            Promise.all([api.get(requestRule), api.get(requestExpression)])\n                .then(([rule, expression]) => {\n                    this.context.updateAppState({\n                        pageState: {\n                            loading: false,\n                        },\n                    })\n                    this.setState({ openDetails: true, rule, expression })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    handleClose() {\n        this.setState({ openDetails: false })\n    }\n\n    render() {\n        // Details Actions\n        const dialogActions = [\n            <FlatButton\n                className=\"close-action\"\n                key={`FB${this.props.organisationUnitId}-${\n                    this.props.periodId\n                }-${this.props.validationRuleId}`}\n                label={i18n.t('Close')}\n                primary={Boolean(true)}\n                onClick={this.handleClose}\n            />,\n        ]\n\n        const result = (\n            <div\n                className={classNames('row', 'results-row', styles.sectionBox)}\n            >\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {i18n.t('VALIDATIONS RESULT DETAILS')}\n                </div>\n                <div\n                    className={classNames('col-xs-12', styles.sectionSubTitle)}\n                >\n                    {i18n.t('VALIDATION RULE')}\n                </div>\n                <div className={'col-xs-3'}>{i18n.t('Name')}</div>\n                <div className={'col-xs-9'}>{this.state.rule.displayName}</div>\n                <div className={'col-xs-3'}>{i18n.t('Description')}</div>\n                <div className={'col-xs-9'}>\n                    {this.state.rule.displayDescription}\n                </div>\n            </div>\n        )\n\n        const showNoData = side => (\n            <div className={classNames('row', styles.sectionBox)}>\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {side}\n                </div>\n                <div className={classNames('col-xs-12', cssPageStyles.center)}>\n                    <div className={styles.noData}>\n                        {i18n.t('no data available')}\n                    </div>\n                </div>\n            </div>\n        )\n\n        const buildSection = (side, elements, classNameRow) => (\n            <div className={classNames('row', classNameRow, styles.sectionBox)}>\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {side}\n                </div>\n                <div\n                    className={classNames('col-xs-10', styles.sectionSubTitle)}\n                >\n                    {i18n.t('DATA ELEMENT')}\n                </div>\n                <div\n                    className={classNames(\n                        'col-xs-2',\n                        styles.sectionSubTitle,\n                        cssPageStyles.right\n                    )}\n                >\n                    {i18n.t('VALUE')}\n                </div>\n                {elements.map(element => (\n                    <div key={element.name} className={'col-xs-12'}>\n                        <div className={'row'}>\n                            <div className={'col-xs-10'}>{element.name}</div>\n                            <div\n                                className={classNames(\n                                    'col-xs-2',\n                                    cssPageStyles.right\n                                )}\n                            >\n                                {element.value ? (\n                                    <FormattedNumber\n                                        value={Number(element.value)}\n                                    />\n                                ) : (\n                                    '-'\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        )\n\n        return (\n            <div>\n                <FontIcon\n                    key={`FI|${this.props.organisationUnitId}-${\n                        this.props.periodId\n                    }-${this.props.validationRuleId}`}\n                    className={\n                        'validation-rules-show-details-action material-icons'\n                    }\n                    style={jsPageStyles.cursorStyle}\n                    onClick={this.loadDetails}\n                >\n                    info\n                </FontIcon>\n                <Dialog\n                    className=\"validation-rules-details-dialog\"\n                    key={`D${this.props.organisationUnitId}-${\n                        this.props.periodId\n                    }-${this.props.validationRuleId}`}\n                    autoScrollBodyContent={Boolean(true)}\n                    title={i18n.t('Validation Details')}\n                    actions={dialogActions}\n                    modal={Boolean(true)}\n                    open={this.state.openDetails}\n                    onRequestClose={this.handleClose}\n                >\n                    {/* Result */}\n                    {result}\n                    {/* Left Side */}\n                    {this.state.expression.leftSide &&\n                    this.state.expression.leftSide.length > 0\n                        ? buildSection(\n                              i18n.t('LEFT SIDE'),\n                              this.state.expression.leftSide,\n                              'left-side-row'\n                          )\n                        : showNoData(i18n.t('LEFT SIDE'))}\n                    {/* Right Side */}\n                    {this.state.expression.rightSide &&\n                    this.state.expression.rightSide.length > 0\n                        ? buildSection(\n                              i18n.t('RIGHT SIDE'),\n                              this.state.expression.rightSide,\n                              'right-side-row'\n                          )\n                        : showNoData(i18n.t('RIGHT SIDE'))}\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesDetails\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../../components/download-as/DownloadAs'\nimport cssPageStyles from '../../Page.module.css'\nimport styles from './ValidationRulesAnalysisTable.module.css'\nimport i18n from '../../../locales'\nimport ValidationRulesDetails from '../validation-rules-details/ValidationRulesDetails'\nimport { apiConf } from '../../../server.conf'\n\nclass ValidationRulesAnalysisTable extends PureComponent {\n    static propTypes = {\n        elements: PropTypes.array.isRequired,\n    }\n\n    render() {\n        const elements = this.props.elements\n\n        // Table Rows\n        const rows = elements.map(element => (\n            <TableRow key={element.key}>\n                <TableRowColumn>{element.organisation}</TableRowColumn>\n                <TableRowColumn>{element.period}</TableRowColumn>\n                <TableRowColumn>{element.importance}</TableRowColumn>\n                <TableRowColumn>{element.validationRule}</TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.leftValue} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <span className={styles.operator}>{element.operator}</span>\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.rightValue} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.center}>\n                    <ValidationRulesDetails\n                        validationRuleId={element.validationRuleId}\n                        periodId={element.periodId}\n                        organisationUnitId={element.organisationUnitId}\n                    />\n                </TableRowColumn>\n            </TableRow>\n        ))\n\n        return (\n            <div>\n                <div className={cssPageStyles.cardHeader}>\n                    <DownloadAs\n                        endpoint={apiConf.endpoints.validationRulesReport}\n                    />\n                </div>\n                <Table\n                    selectable={false}\n                    className={classNames(\n                        cssPageStyles.appTable,\n                        styles.validationTable\n                    )}\n                >\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                    >\n                        <TableRow>\n                            <TableHeaderColumn>\n                                {i18n.t('Organisation Unit')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Period')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Importance')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Validation Rule')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Operator')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Details')}\n                            </TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody displayRowCheckbox={false} stripedRows={false}>\n                        {rows}\n                    </TableBody>\n                </Table>\n                <div\n                    className={classNames(\n                        cssPageStyles.cardFooter,\n                        cssPageStyles.end\n                    )}\n                >\n                    <DownloadAs\n                        endpoint={apiConf.endpoints.validationRulesReport}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesAnalysisTable\n","// get Date from YYYY-MM-DDTHH:mm:ss.mmmm\nexport const convertDateToApiDateFormat = date =>\n    date.toISOString().split('T')[0]\n\nexport default convertDateToApiDateFormat\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport Checkbox from 'material-ui/Checkbox'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport Page from '../Page'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport ValidationRuleGroupsSelect, {\n    ALL_VALIDATION_RULE_GROUPS_ID,\n} from '../../components/validation-rule-groups-select/ValidationRuleGroupsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport i18n from '../../locales'\nimport jsPageStyles from '../PageStyles'\nimport cssPageStyles from '../Page.module.css'\nimport ValidationRulesAnalysisTable from './validation-rules-analysis-table/ValidationRulesAnalysisTable'\nimport { apiConf } from '../../server.conf'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\n\nclass ValidationRulesAnalysis extends Page {\n    static STATE_PROPERTIES = ['loading', 'elements', 'showTable']\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            validationRuleGroupId: ALL_VALIDATION_RULE_GROUPS_ID,\n            notification: false,\n            persist: false,\n            elements: [],\n            loading: false,\n        }\n\n        this.validate = this.validate.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.validationRuleGroupOnChange = this.validationRuleGroupOnChange.bind(\n            this\n        )\n        this.updateSendNotifications = this.updateSendNotifications.bind(this)\n        this.updatePersistNewResults = this.updatePersistNewResults.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ValidationRulesAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    static generateElementKey = e =>\n        `${e.validationRuleId}-${e.periodId}-${e.organisationUnitId}`\n\n    static convertElementFromApiResponse = e => ({\n        key: ValidationRulesAnalysis.generateElementKey(e),\n        validationRuleId: e.validationRuleId,\n        organisation: e.organisationUnitDisplayName,\n        organisationUnitId: e.organisationUnitId,\n        period: e.periodDisplayName,\n        periodId: e.periodId,\n        importance: e.importance,\n        validationRule: e.validationRuleDescription,\n        leftValue: e.leftSideValue,\n        operator: e.operator,\n        rightValue: e.rightSideValue,\n    })\n\n    validate() {\n        const api = this.context.d2.Api.getApi()\n\n        if (this.isFormValid()) {\n            const request = {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                notification: this.state.notification,\n                persist: this.state.persist,\n            }\n\n            if (\n                this.state.validationRuleGroupId !==\n                ALL_VALIDATION_RULE_GROUPS_ID\n            ) {\n                request.vrg = this.state.validationRuleGroupId\n            }\n\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.validationRulesAnalysis, { ...request })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            ValidationRulesAnalysis.convertElementFromApiResponse\n                        )\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t(\n                                              'Validation passed successfully'\n                                          ),\n                                      },\n                                  }\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    validationRuleGroupOnChange(event, index, value) {\n        this.setState({ validationRuleGroupId: value })\n    }\n\n    updateSendNotifications(event, checked) {\n        this.setState({ notification: checked })\n    }\n\n    updatePersistNewResults(event, checked) {\n        this.setState({ persist: checked })\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Validation Rule Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                className={classNames(\n                                    'col-md-6',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-6',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    value={this.state.startDate}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    value={this.state.endDate}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                />\n                                <div id=\"validation-rule-groups\">\n                                    <ValidationRuleGroupsSelect\n                                        style={jsPageStyles.inputForm}\n                                        onChange={\n                                            this.validationRuleGroupOnChange\n                                        }\n                                    />\n                                </div>\n                                <div id=\"send-notifications-option\">\n                                    <Checkbox\n                                        label={i18n.t('Send Notifications')}\n                                        labelPosition=\"left\"\n                                        checked={this.state.notification}\n                                        onCheck={this.updateSendNotifications}\n                                    />\n                                </div>\n                                <div id=\"persist-results-option\">\n                                    <Checkbox\n                                        label={i18n.t('Persist new results')}\n                                        labelPosition=\"left\"\n                                        checked={this.state.persist}\n                                        onCheck={this.updatePersistNewResults}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            label={i18n.t('validate')}\n                            primary\n                            disabled={this.isActionDisabled()}\n                            onClick={this.validate}\n                        />\n                    </CardText>\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <ValidationRulesAnalysisTable\n                            elements={this.state.elements}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesAnalysis\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './AvailableDatasetsSelect.module.css'\n\nclass AvailableDatasetsSelect extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        onChange: PropTypes.func,\n    }\n\n    static defaultProps = {\n        onChange: null,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            dataSets: null,\n        }\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        if (this.state.dataSets == null) {\n            d2.models.dataSet\n                .list({\n                    paging: false,\n                    fields: 'id,displayName',\n                })\n                .then(dataSetsResponse => {\n                    this.setState({\n                        dataSets: dataSetsResponse.toArray(),\n                    })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    render() {\n        return (\n            <select\n                multiple\n                className={styles.select}\n                onChange={this.props.onChange}\n            >\n                {(this.state.dataSets || []).map(item => (\n                    <option\n                        key={item.id}\n                        value={item.id}\n                        className={styles.options}\n                    >\n                        {item.displayName}\n                    </option>\n                ))}\n            </select>\n        )\n    }\n}\n\nexport default AvailableDatasetsSelect\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Checkbox,\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui'\nimport FormattedNumber from '../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../components/download-as/DownloadAs'\nimport i18n from '../../locales'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../../pages/Page.module.css'\nimport jsPageStyles from '../../pages/PageStyles'\nimport styles from './OutlierAnalysisTable.module.css'\n\nconst OutlierAnalyisTable = props => {\n    const elements = props.elements\n    const parentToggleCheckbox = props.toggleCheckbox\n\n    // Table Rows\n    const rows = elements.map(element => {\n        const updateCheckbox = () => {\n            parentToggleCheckbox(element)\n        }\n\n        return (\n            <TableRow key={element.key}>\n                <TableRowColumn>{element.dataElement}</TableRowColumn>\n                <TableRowColumn>{element.organisation}</TableRowColumn>\n                <TableRowColumn>{element.period}</TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.min} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.value} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.max} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.centerFlex}>\n                    <span className={cssPageStyles.checkboxWrapper}>\n                        <Checkbox\n                            checked={element.marked}\n                            onCheck={updateCheckbox}\n                            iconStyle={jsPageStyles.iconColor}\n                        />\n                    </span>\n                </TableRowColumn>\n            </TableRow>\n        )\n    })\n\n    return (\n        <div>\n            <div className={cssPageStyles.cardHeader}>\n                <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n            </div>\n            <Table\n                selectable={false}\n                className={classNames(\n                    cssPageStyles.appTable,\n                    styles.outlierAnalysisTable\n                )}\n            >\n                <TableHeader\n                    displaySelectAll={false}\n                    adjustForCheckbox={false}\n                    enableSelectAll={false}\n                >\n                    <TableRow>\n                        <TableHeaderColumn>\n                            {i18n.t('Data Element')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn>\n                            {i18n.t('Organisation Unit')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn>\n                            {i18n.t('Period')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Min')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Value')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Max')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.center}>\n                            {i18n.t('Mark')}\n                        </TableHeaderColumn>\n                    </TableRow>\n                </TableHeader>\n                <TableBody displayRowCheckbox={false} stripedRows={false}>\n                    {rows}\n                </TableBody>\n            </Table>\n            <div\n                className={classNames(\n                    cssPageStyles.cardFooter,\n                    cssPageStyles.end\n                )}\n            >\n                <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n            </div>\n        </div>\n    )\n}\n\nOutlierAnalyisTable.generateElementKey = e =>\n    `${e.attributeOptionComboId}-${e.categoryOptionComboId}-${e.periodId}-${\n        e.sourceId\n    }-${e.dataElementId}`\n\nOutlierAnalyisTable.convertElementFromApiResponse = e => ({\n    key: OutlierAnalyisTable.generateElementKey(e),\n    attributeOptionComboId: e.attributeOptionComboId,\n    categoryOptionComboId: e.categoryOptionComboId,\n    periodId: e.periodId,\n    organisationUnitId: e.sourceId,\n    dataElementId: e.dataElementId,\n    dataElement: e.dataElementName,\n    organisation: e.sourceName,\n    period: e.period.name,\n    min: e.min,\n    max: e.max,\n    value: Number.parseFloat(e.value),\n    marked: e.followup,\n})\n\nOutlierAnalyisTable.convertElementToToggleFollowupRequest = e => ({\n    dataElementId: e.dataElementId,\n    periodId: e.periodId,\n    organisationUnitId: e.organisationUnitId,\n    categoryOptionComboId: e.categoryOptionComboId,\n    attributeOptionComboId: e.attributeOptionComboId,\n    followup: !e.marked,\n})\n\nOutlierAnalyisTable.propTypes = {\n    elements: PropTypes.array.isRequired,\n    toggleCheckbox: PropTypes.func.isRequired,\n}\n\nOutlierAnalyisTable.contextTypes = {\n    d2: PropTypes.object,\n}\n\nexport default OutlierAnalyisTable\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport OutlierAnalyisTable from '../../components/outlier-analysis-table/OutlierAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '../../locales'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nexport const DEFAULT_STANDARD_DEVIATION = 3.0\n\nclass StdDevOutlierAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'standardDeviation',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            standardDeviation: DEFAULT_STANDARD_DEVIATION,\n        }\n\n        this.start = this.start.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.standardDeviationOnChange = this.standardDeviationOnChange.bind(\n            this\n        )\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                StdDevOutlierAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    start() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.standardDeviationOutliersAnalysis, {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n                standardDeviation: this.state.standardDeviation,\n            })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            OutlierAnalyisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    standardDeviationOnChange(event, index, value) {\n        this.setState({ standardDeviation: value })\n    }\n\n    toggleCheckbox(element) {\n        const api = this.context.d2.Api.getApi()\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                this.context.updateAppState({\n                    pageState: {\n                        loading: true,\n                    },\n                })\n                api.post(apiConf.endpoints.markDataValue, {\n                    followups: [\n                        OutlierAnalyisTable.convertElementToToggleFollowupRequest(\n                            currentElement\n                        ),\n                    ],\n                })\n                    .then(() => {\n                        if (this.isPageMounted()) {\n                            currentElement.marked = !currentElement.marked\n                            elements[i] = currentElement\n\n                            this.context.updateAppState({\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(\n                                        currentElement.marked\n                                            ? 'Marked'\n                                            : 'Unmarked'\n                                    ),\n                                },\n                                pageState: {\n                                    elements,\n                                    loading: false,\n                                },\n                            })\n                        }\n                    })\n                    .catch(() => {\n                        this.manageError()\n                    })\n                break\n            }\n        }\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.standardDeviation &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Std Dev Outlier Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                                <SelectField\n                                    id=\"standard-deviation\"\n                                    style={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t(\n                                        'Select number of standard deviations'\n                                    )}\n                                    onChange={this.standardDeviationOnChange}\n                                    value={this.state.standardDeviation}\n                                >\n                                    <MenuItem value={1.0} primaryText=\"1.0\" />\n                                    <MenuItem value={1.5} primaryText=\"1.5\" />\n                                    <MenuItem value={2.0} primaryText=\"2.0\" />\n                                    <MenuItem value={2.5} primaryText=\"2.5\" />\n                                    <MenuItem value={3} primaryText=\"3.0\" />\n                                    <MenuItem value={3.5} primaryText=\"3.5\" />\n                                    <MenuItem value={4} primaryText=\"4.0\" />\n                                    <MenuItem value={4.5} primaryText=\"4.5\" />\n                                    <MenuItem value={5} primaryText=\"5.0\" />\n                                </SelectField>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('start')}\n                            onClick={this.start}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <OutlierAnalyisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default StdDevOutlierAnalysis\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport OutlierAnalyisTable from '../../components/outlier-analysis-table/OutlierAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '../../locales'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nclass MinMaxOutlierAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            loading: false,\n        }\n\n        this.start = this.start.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                MinMaxOutlierAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    start() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.minMaxOutliersAnalysis, {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n            })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            OutlierAnalyisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    toggleCheckbox(element) {\n        const api = this.context.d2.Api.getApi()\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                this.context.updateAppState({\n                    pageState: {\n                        loading: true,\n                    },\n                })\n                api.post(apiConf.endpoints.markDataValue, {\n                    followups: [\n                        OutlierAnalyisTable.convertElementToToggleFollowupRequest(\n                            currentElement\n                        ),\n                    ],\n                })\n                    .then(() => {\n                        if (this.isPageMounted()) {\n                            currentElement.marked = !currentElement.marked\n                            elements[i] = currentElement\n\n                            this.context.updateAppState({\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(\n                                        currentElement.marked\n                                            ? 'Marked'\n                                            : 'Unmarked'\n                                    ),\n                                },\n                                pageState: {\n                                    elements,\n                                    loading: false,\n                                },\n                            })\n                        }\n                    })\n                    .catch(() => {\n                        this.manageError()\n                    })\n                break\n            }\n        }\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Min-Max Outlier Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('start')}\n                            onClick={this.start}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <OutlierAnalyisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default MinMaxOutlierAnalysis\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Checkbox,\n    FontIcon,\n    RaisedButton,\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n    IconButton,\n    Dialog,\n    FlatButton,\n} from 'material-ui'\nimport i18n from '../../../locales'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../../components/download-as/DownloadAs'\nimport cssPageStyles from '../../Page.module.css'\nimport jsPageStyles from '../../PageStyles'\nimport styles from './FollowUpAnalysisTable.module.css'\nimport { apiConf } from '../../../server.conf'\n\nclass FollowUpAnalysisTable extends Component {\n    static propTypes = {\n        elements: PropTypes.array.isRequired,\n        toggleCheckbox: PropTypes.func.isRequired,\n        unfollow: PropTypes.func.isRequired,\n        loading: PropTypes.bool.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static generateElementKey = e =>\n        `${e.attributeOptionComboId}-${e.categoryOptionComboId}-${e.periodId}-${\n            e.sourceId\n        }-${e.dataElementId}`\n\n    static convertElementFromApiResponse = e => ({\n        key: FollowUpAnalysisTable.generateElementKey(e),\n        attributeOptionComboId: e.attributeOptionComboId,\n        categoryOptionComboId: e.categoryOptionComboId,\n        periodId: e.periodId,\n        organisationUnitId: e.sourceId,\n        dataElementId: e.dataElementId,\n        dataElement: e.dataElementName,\n        organisation: e.sourceName,\n        period: e.period.name,\n        min: e.min,\n        max: e.max,\n        value: Number.parseFloat(e.value, 10),\n        marked: !e.followup,\n        comment: e.comment,\n    })\n\n    static convertElementToUnFollowupRequest = e => ({\n        dataElementId: e.dataElementId,\n        periodId: e.periodId,\n        organisationUnitId: e.organisationUnitId,\n        categoryOptionComboId: e.categoryOptionComboId,\n        attributeOptionComboId: e.attributeOptionComboId,\n        followup: false,\n    })\n\n    static areElementsTheSame(element1, element2) {\n        return (\n            element1.attributeOptionComboId ===\n                element2.attributeOptionComboId &&\n            element1.categoryOptionComboId === element2.categoryOptionComboId &&\n            element1.periodId === element2.periodId &&\n            element1.organisationUnitId === element2.organisationUnitId &&\n            element1.dataElementId === element2.dataElementId\n        )\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            showComment: false,\n            comment: null,\n        }\n\n        this.unfollow = this.unfollow.bind(this)\n        this.closeCommentDialog = this.closeCommentDialog.bind(this)\n    }\n\n    unfollow() {\n        const unfollowups = []\n        for (let i = 0; i < this.props.elements.length; i++) {\n            const e = this.props.elements[i]\n            if (e.marked) {\n                unfollowups.push(\n                    FollowUpAnalysisTable.convertElementToUnFollowupRequest(e)\n                )\n            }\n        }\n\n        this.props.unfollow(unfollowups)\n    }\n\n    closeCommentDialog() {\n        this.setState({ showComment: false })\n    }\n\n    updateCheckbox(element) {\n        this.props.toggleCheckbox(element)\n    }\n\n    showComment(element) {\n        if (element.comment) {\n            this.setState({\n                showComment: true,\n                comment: element.comment,\n            })\n        }\n    }\n\n    render() {\n        let oneChecked = false\n\n        const commentDialogActions = [\n            <FlatButton\n                label={i18n.t('Close')}\n                primary\n                onClick={this.closeCommentDialog}\n            />,\n        ]\n\n        // Table Rows\n        const rows = this.props.elements.map(element => {\n            const updateCheckbox = () => {\n                this.updateCheckbox(element)\n            }\n\n            const showComment = () => {\n                this.showComment(element)\n            }\n\n            oneChecked = element.marked ? true : oneChecked\n\n            return (\n                <TableRow key={element.key}>\n                    <TableRowColumn>{element.dataElement}</TableRowColumn>\n                    <TableRowColumn>{element.organisation}</TableRowColumn>\n                    <TableRowColumn>{element.period}</TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.min} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.value} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.max} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.centerFlex}>\n                        <span className={cssPageStyles.checkboxWrapper}>\n                            <Checkbox\n                                checked={element.marked}\n                                onCheck={updateCheckbox}\n                                iconStyle={jsPageStyles.iconColor}\n                            />\n                        </span>\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.center}>\n                        {element.comment && (\n                            <IconButton key={element.key} onClick={showComment}>\n                                <FontIcon\n                                    className={'material-icons'}\n                                    style={jsPageStyles.cursorStyle}\n                                >\n                                    speaker_notes\n                                </FontIcon>\n                            </IconButton>\n                        )}\n                    </TableRowColumn>\n                </TableRow>\n            )\n        })\n\n        return (\n            <div>\n                <Dialog\n                    title={i18n.t('Comment')}\n                    actions={commentDialogActions}\n                    modal={false}\n                    open={this.state.showComment}\n                    onRequestClose={this.closeCommentDialog}\n                >\n                    <div id={'comment-content'}>{this.state.comment}</div>\n                </Dialog>\n                <div className={cssPageStyles.cardHeader}>\n                    <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n                </div>\n                <Table\n                    selectable={false}\n                    className={classNames(\n                        cssPageStyles.appTable,\n                        styles.followUpAnalysisTable\n                    )}\n                >\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                    >\n                        <TableRow>\n                            <TableHeaderColumn>\n                                {i18n.t('Data Element')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Organisation Unit')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Period')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Min')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Max')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Unfollow')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Comment')}\n                            </TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody displayRowCheckbox={false} stripedRows={false}>\n                        {rows}\n                    </TableBody>\n                </Table>\n                <div\n                    className={classNames(\n                        cssPageStyles.cardFooter,\n                        cssPageStyles.spaceBetween\n                    )}\n                >\n                    <RaisedButton\n                        id=\"unfollow-action\"\n                        primary\n                        disabled={this.props.loading || !oneChecked}\n                        label={i18n.t('unfollow')}\n                        onClick={this.unfollow}\n                    />\n                    <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FollowUpAnalysisTable\n","import React from 'react'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport FollowUpAnalysisTable from './follow-up-analysis-table/FollowUpAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '../../locales'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nclass FollowUpAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            loading: false,\n        }\n\n        this.getFollowUpList = this.getFollowUpList.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n        this.unfollow = this.unfollow.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                FollowUpAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    getFollowUpList() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            const request = {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n            }\n\n            api.post(apiConf.endpoints.folloupAnalysis, request)\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            FollowUpAnalysisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    toggleCheckbox(element) {\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                currentElement.marked = !currentElement.marked\n                elements[i] = currentElement\n                this.setState({ elements })\n                break\n            }\n        }\n    }\n\n    unfollow(unfollowups) {\n        const api = this.context.d2.Api.getApi()\n        this.context.updateAppState({\n            pageState: {\n                loading: true,\n            },\n        })\n\n        api.post(apiConf.endpoints.markDataValue, {\n            followups: unfollowups,\n        })\n            .then(() => {\n                if (this.isPageMounted()) {\n                    // remove unfollowed elements\n                    const elements = this.state.elements.filter(element => {\n                        for (let j = 0; j < unfollowups.length; j++) {\n                            const unfollow = unfollowups[j]\n                            if (\n                                FollowUpAnalysisTable.areElementsTheSame(\n                                    element,\n                                    unfollow\n                                )\n                            ) {\n                                return false\n                            }\n                        }\n\n                        return true\n                    })\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: i18n.t('Unfollow done'),\n                        },\n                        pageState: {\n                            loading: false,\n                            elements,\n                        },\n                    })\n                }\n            })\n            .catch(() => {\n                this.manageError()\n            })\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    <span>{i18n.t('Follow-Up Analysis')}</span>\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('follow up')}\n                            onClick={this.getFollowUpList}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <FollowUpAnalysisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                            unfollow={this.unfollow}\n                            loading={this.state.loading}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default FollowUpAnalysis\n","import ValidationRulesAnalysis from './validation-rules-analysis/ValidationRulesAnalysis'\nimport StdDevOutlierAnalysis from './std-dev-outlier-analysis/StdDevOutlierAnalysis'\nimport MinMaxOutlierAnalysis from './min-max-outlier-analysis/MinMaxOutlierAnalysis'\nimport FollowUpAnalysis from './follow-up-analysis/FollowUpAnalysis'\n\nexport const VALIDATION_RULES_ANALYSIS_SECTION_KEY = 'validationRulesAnalysis'\nexport const STD_DEV_OUTLIER_ANALYSIS_SECTION_KEY = 'stdDevOutlierAnalysis'\nexport const MIN_MAX_OUTLIER_ANALYSIS_SECTION_KEY = 'minMaxOutlierAnalysis'\nexport const FOLLOW_UP_ANALYSIS_SECTION_KEY = 'followUpAnalysis'\n\nexport const sections = [\n    {\n        key: VALIDATION_RULES_ANALYSIS_SECTION_KEY,\n        path: '/validation-rules-analysis',\n        component: ValidationRulesAnalysis,\n        info: {\n            label: 'Validation Rule Analysis',\n            icon: 'done_all',\n            description:\n                'Run validation rules in order to unveil anomalies and errors in the data in the database.',\n            actionText: 'Run Validation',\n            docs: 'validation_rule_analysis',\n        },\n    },\n    {\n        key: STD_DEV_OUTLIER_ANALYSIS_SECTION_KEY,\n        path: '/std-dev-outlier-analysis',\n        component: StdDevOutlierAnalysis,\n        info: {\n            label: 'Std Dev Outlier Analysis',\n            icon: 'show_chart',\n            description:\n                'Analyze potential outlier values based on standard deviations. Outlier values can be examined and marked for follow-up.',\n            actionText: 'Analyze',\n            docs: 'standard_deviation_analysis',\n        },\n    },\n    {\n        key: MIN_MAX_OUTLIER_ANALYSIS_SECTION_KEY,\n        path: '/min-max-outlier-analysis',\n        component: MinMaxOutlierAnalysis,\n        info: {\n            label: 'Min-Max Outlier Analysis',\n            icon: 'compare_arrows',\n            description:\n                'Analyze potential outlier values based on min and max values. Outlier values can be examined and marked for follow-up.',\n            actionText: 'Analyze',\n            docs: 'min_max_analysis',\n        },\n    },\n    {\n        key: FOLLOW_UP_ANALYSIS_SECTION_KEY,\n        path: '/follow-up-analysis',\n        component: FollowUpAnalysis,\n        info: {\n            label: 'Follow-Up Analysis',\n            icon: 'description',\n            description:\n                'View or edit data values marked for further follow-up during data entry or analysis.',\n            actionText: 'View Data Values',\n            docs: 'follow_up_analysis',\n        },\n    },\n]\n\nexport const getDocsKeyForSection = sectionKey => {\n    for (let i = 0; i < sections.length; i++) {\n        const section = sections[i]\n        if (section.key === sectionKey) {\n            return section.info.docs\n        }\n    }\n\n    return ''\n}\n\nexport default sections\n","import React from 'react'\nimport classNames from 'classnames'\nimport GridSection from './grid-section/GridSection'\nimport styles from './Home.module.css'\nimport { sections } from '../sections.conf'\n\nconst Home = () => {\n    const gridElements = sections.map(section => (\n        <div\n            key={section.key}\n            className={classNames(\n                'col-sm-12 col-md-6 col-lg-4',\n                styles.gridContainer\n            )}\n        >\n            <GridSection key={section.key} section={section} />\n        </div>\n    ))\n\n    return (\n        <div id=\"grid-list-id\" className=\"row\">\n            {gridElements}\n        </div>\n    )\n}\n\nexport default Home\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nclass NoMatch extends PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>\n                    No match for <code>{this.props.location.pathname}</code>\n                </h3>\n            </div>\n        )\n    }\n}\n\nexport default NoMatch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from '../../pages/home/Home'\nimport NoMatch from './NoMatch'\nimport { sections } from '../../pages/sections.conf'\n\nconst AppRouter = ({ pageState }) => {\n    const routes = sections.map(section => {\n        const routeRender = () => {\n            const Page = section.component\n            return <Page sectionKey={section.key} {...pageState} />\n        }\n        return (\n            <Route\n                key={section.key}\n                exact\n                path={section.path}\n                render={routeRender}\n            />\n        )\n    })\n\n    /* Home route */\n    const homeRouteRender = () => <Home sectionKey=\"home\" />\n\n    routes.push(<Route key=\"home\" exact path=\"/\" render={homeRouteRender} />)\n\n    /* No Match Route */\n    routes.push(<Route key=\"no-match-route\" component={NoMatch} />)\n\n    return (\n        <main>\n            <Switch>{routes}</Switch>\n        </main>\n    )\n}\n\nAppRouter.propTypes = {\n    pageState: PropTypes.object,\n}\n\nAppRouter.defaultProps = {\n    pageState: {},\n}\n\nexport default AppRouter\n","import 'typeface-roboto'\nimport 'material-design-icons-iconfont'\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { HeaderBar } from '@dhis2/ui-widgets'\nimport Sidebar from 'd2-ui/lib/sidebar/Sidebar.component'\nimport CircularProgress from 'd2-ui/lib/circular-progress/CircularProgress'\nimport FeedbackSnackbar from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbar.component'\nimport './custom-css/D2UISidebarOverrides.css'\nimport i18n from './locales'\nimport { injectTranslationsToD2 } from './configI18n'\nimport AppRouter from './components/app-router/AppRouter'\nimport styles from './App.module.css'\nimport { sections } from './pages/sections.conf'\n\nclass App extends PureComponent {\n    static childContextTypes = {\n        showSnackbar: PropTypes.bool,\n        snackbarConf: PropTypes.shape({\n            type: PropTypes.string,\n            message: PropTypes.string,\n        }),\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor(props, context) {\n        super(props)\n\n        injectTranslationsToD2(context.d2)\n\n        this.state = {\n            currentSection: '',\n            showSnackbar: false,\n            snackbarConf: {\n                type: '',\n                message: '',\n            },\n            pageState: {},\n        }\n\n        this.updateAppState = this.updateAppState.bind(this)\n    }\n\n    getChildContext() {\n        return {\n            showSnackbar: this.state.showSnackbar,\n            snackbarConf: this.state.snackbarConf,\n            currentSection: this.state.currentSection,\n            updateAppState: this.updateAppState,\n        }\n    }\n\n    updateAppState(appState) {\n        if (\n            appState.currentSection &&\n            !appState.pageState &&\n            this.state.currentSection !== appState.currentSection\n        ) {\n            // clear page state because we are updating page\n            this.setState({ ...appState, pageState: {}, showSnackbar: false })\n        } else {\n            this.setState(appState)\n        }\n    }\n\n    render() {\n        const nonOnChangeSection = () => null\n        const translatedSections = sections.map(section =>\n            Object.assign(section, {\n                icon: section.info.icon,\n                label: i18n.t(section.info.label),\n                containerElement: <Link to={section.path} />,\n            })\n        )\n\n        const feedbackElement = this.state.pageState.loading ? (\n            <div className={styles.centered}>\n                <CircularProgress />\n            </div>\n        ) : (\n            <FeedbackSnackbar\n                show={this.state.showSnackbar}\n                conf={this.state.snackbarConf}\n            />\n        )\n\n        return (\n            <div>\n                <HeaderBar appName={i18n.t('Data Quality')} />\n                <Sidebar\n                    sections={translatedSections}\n                    currentSection={this.state.currentSection}\n                    onChangeSection={nonOnChangeSection}\n                />\n                <div className={styles.contentWrapper}>\n                    <div className={styles.contentArea}>\n                        <AppRouter pageState={this.state.pageState} />\n                    </div>\n                </div>\n                <div id=\"feedback-snackbar\">{feedbackElement}</div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import Spacing from 'material-ui/styles/spacing'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport {\n    blue100,\n    blue700,\n    grey100,\n    grey400,\n    orange500,\n    orangeA200,\n    darkBlack,\n    white,\n} from 'material-ui/styles/colors'\nimport { fade } from 'material-ui/utils/colorManipulator'\n\nconst theme = {\n    spacing: Spacing,\n    fontFamily: 'Roboto, sans-serif',\n    palette: {\n        primary1Color: '#004ba0',\n        primary2Color: blue700,\n        primary3Color: blue100,\n        accent1Color: orange500,\n        accent2Color: grey100,\n        accent3Color: orangeA200,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey400,\n        disabledColor: fade(darkBlack, 0.3),\n    },\n}\n\nconst muiTheme = getMuiTheme(theme)\n\nexport default muiTheme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, withRouter } from 'react-router-dom'\nimport { getUserSettings } from 'd2/lib/d2'\nimport D2UIApp from 'd2-ui/lib/app/D2UIApp'\nimport log from 'loglevel'\nimport { configI18n } from './configI18n'\nimport './index.css'\nimport App from './App'\nimport appTheme from './theme'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from '@dhis2/app-runtime'\nimport { CssReset } from '@dhis2/ui-core'\n\nlog.setLevel(\n    process.env.NODE_ENV === 'production' ? log.levels.INFO : log.levels.DEBUG\n)\n\nconst AppComponent = withRouter(App)\nconst baseUrl = `${process.env.REACT_APP_DHIS2_BASE_URL}/api/${\n    process.env.REACT_APP_DHIS2_API_VERSION\n}`\n\nconst config = {\n    baseUrl: process.env.REACT_APP_DHIS2_BASE_URL,\n    apiVersion: process.env.REACT_APP_DHIS2_API_VERSION,\n}\n\nReactDOM.render(\n    <Provider config={config}>\n        <CssReset />\n        <D2UIApp\n            muiTheme={appTheme}\n            initConfig={{\n                baseUrl,\n                schemas: ['organisationUnit', 'dataSet', 'validationRuleGroup'],\n            }}\n        >\n            <HashRouter>\n                <AppComponent />\n            </HashRouter>\n        </D2UIApp>\n    </Provider>,\n    document.getElementById('root')\n)\n\ngetUserSettings().then(userSettings => {\n    const uiLocale = userSettings.keyUiLocale\n    sessionStorage.setItem('uiLocale', uiLocale || 'en')\n\n    configI18n(userSettings)\n})\n\nserviceWorker.register()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridElement\":\"GridSection_gridElement__3DOqL\",\"gridTitleBar\":\"GridSection_gridTitleBar__2-OEV\",\"gridTitleDescription\":\"GridSection_gridTitleDescription__1jy96\",\"gridIcon\":\"GridSection_gridIcon__1INTx\",\"gridDescription\":\"GridSection_gridDescription__1NNso\",\"gridActionText\":\"GridSection_gridActionText__1S-Gc\"};"],"sourceRoot":""}