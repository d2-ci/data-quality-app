{"version":3,"sources":["pages/Page.module.css","pages/validation-rules-analysis/validation-rules-analysis-table/ValidationRulesAnalysisTable.module.css","components/table/TableCellContent.module.css","components/available-datasets-select/AvailableDatasetsSelect.module.css","pages/home/Home.module.css","components/alert-bar/AlertBar.module.css","components/available-organisation-units-tree/AvailableOrganisationUnitsTree.module.css","components/download-as/DownloadAs.module.css","components/outlier-analysis-table/OutlierAnalysisTable.module.css","pages/follow-up-analysis/follow-up-analysis-table/FollowUpAnalysisTable.module.css","pages/validation-rules-analysis/validation-rules-details/ValidationRulesDetails.module.css","configI18n.js","locales/index.js","pages/home/grid-section/GridSection.js","pages/Page.js","components/alert-bar/AlertBar.js","components/validation-rule-groups-select/ValidationRuleGroupsSelect.js","components/available-organisation-units-tree/AvailableOrganisationUnitsTree.js","helpers/docs.js","components/page-helper/PageHelper.js","pages/PageStyles.js","components/formatters/FormattedNumber.js","components/download-as/DownloadAs.js","server.conf.js","pages/validation-rules-analysis/validation-rules-details/ValidationRulesDetails.js","components/table/TableCellContent.js","pages/validation-rules-analysis/validation-rules-analysis-table/ValidationRulesAnalysisTable.js","helpers/dates.js","pages/validation-rules-analysis/ValidationRulesAnalysis.js","components/available-datasets-select/AvailableDatasetsSelect.js","components/outlier-analysis-table/OutlierAnalysisTable.js","pages/outlier-detection/OutlierDetection.js","pages/follow-up-analysis/follow-up-analysis-table/FollowUpAnalysisTable.js","pages/follow-up-analysis/FollowUpAnalysis.js","pages/sections.conf.js","pages/home/Home.js","components/app-router/NoMatch.js","components/app-router/AppRouter.js","App.js","theme.js","serviceWorker.js","index.js","pages/home/grid-section/GridSection.module.css","App.module.css"],"names":["module","exports","section","mainButton","appTable","right","center","centerFlex","pageHeader","cardHeader","cardFooter","spaceBetween","end","formLabel","checkboxWrapper","validationTable","operator","tableCellContent","tableCellContent-narrow","tableCellContent-medium","tableCellContent-wide","select","options","gridContainer","alertBar","tree","downloadAs","outlierAnalysisTable","followUpAnalysisTable","sectionBox","sectionTitle","sectionSubTitle","noData","configI18n","userSettings","lang","keyUiLocale","code","langs","prefixed","map","c","concat","includes","filter","startsWith","length","isLangRTL","document","body","setAttribute","i18n","changeLanguage","moment","locale","injectTranslationsToD2","d2","translations","settings","app_search_placeholder","profile","account","help","log_out","about_dhis2","manage_my_apps","no_results_found","interpretations","messages","Object","keys","forEach","key","t","assign","namespace","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","GridSection","react_default","a","createElement","react_router_dom","className","to","this","props","path","GridList","classNames","styles","gridElement","gridTitleBar","gridTitleDescription","info","label","FontIcon_default","gridIcon","icon","gridDescription","description","gridActionText","actionText","PureComponent","Page","pageMounted","context","currentSection","sectionKey","updateAppState","error","isPageMounted","messageError","message","showSnackbar","snackbarConf","type","ERROR","pageState","loading","Component","contextTypes","PropTypes","object","string","func","AlertBar","index_es","style","display","show","ALL_VALIDATION_RULE_GROUPS_ID","ALL_VALIDATION_RULE_GROUPS_OPTION","id","displayName","ValidationRuleGroupsSelect","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","validationRuleGroups","selected","onChange","bind","assertThisInitialized","_this2","translatedAllValidationRulesOption","models","validationRuleGroup","list","paging","fields","then","validationRuleGroupsResponse","setState","toConsumableArray","toArray","catch","manageError","event","index","value","selectedName","SelectField_default","floatingLabelText","item","MenuItem_default","primaryText","defaultProps","AvailableOrganisationUnitsTree","rootsWithMembers","getOrgUnitIdFromPath","handleOrgUnitClickSingle","handleOrgUnitClickMulti","loadAvailableOrgUnits","organisationUnitsResponse","organisationUnits","currentUser","getOrganisationUnits","orgUnits","size","authorities","has","level","split","pop","orgUnit","_ref","paths","selectedPath","_this3","onSelectClick","multiselect","rootOrgUnit","OrgUnitTree_component","hideMemberCount","Boolean","root","initiallyExpanded","getDocsVersion","major","minor","snapshot","PageHelper","_this$props","lng","sectionDocsKey","iconStyle","color","href","system","version","target","rel","tooltip","tooltipPosition","iconClassName","pageStyles","inputForm","width","iconColor","fill","cursorStyle","cursor","FormattedNumber","minimumFractionDigits","maximumFractionDigits","Intl","NumberFormat","sessionStorage","getItem","format","DownloadAs","baseUrl","Api","getApi","endpoint","fileTypes","timestamp","Date","now","queryStr","reduce","acc","hrefs","getHrefs","pdf","download","xls","csv","apiConf","endpoints","validationRulesAnalysis","validationRulesExpression","validationRulesReport","validationRules","outlierDetection","folloupAnalysis","markDataValue","reportAnalysis","results","analysis","limit","ValidationRulesDetails","openDetails","rule","expression","leftSide","rightSide","loadDetails","handleClose","nextProps","nextState","property","hasOwnProperty","ValidationRulesAnalysis","STATE_PROPERTIES","api","requestRule","validationRuleId","requestExpression","periodId","organisationUnitId","attributeOptionComboId","Promise","all","get","_ref2","slicedToArray","dialogActions","primary","onClick","result","displayDescription","showNoData","side","cssPageStyles","buildSection","elements","classNameRow","element","name","formatters_FormattedNumber","Number","jsPageStyles","autoScrollBodyContent","title","actions","modal","open","onRequestClose","propTypes","isRequired","TableCellContent","cx","defineProperty","children","ValidationRulesAnalysisTable","shouldDisplayAttributeOptionCombo","some","e","attributeOptionCombo","rows","organisation","table_TableCellContent","period","importance","validationRule","leftValue","rightValue","validation_rules_details_ValidationRulesDetails","download_as_DownloadAs","selectable","fixedHeader","bodyStyle","overflowX","displaySelectAll","adjustForCheckbox","enableSelectAll","displayRowCheckbox","stripedRows","convertDateToApiDateFormat","date","toISOString","showTable","startDate","endDate","validationRuleGroupId","notification","persist","validate","back","startDateOnChange","endDateOnChange","organisationUnitOnChange","validationRuleGroupOnChange","updateSendNotifications","updatePersistNewResults","isFormValid","request","ou","vrg","post","objectSpread","response","convertElementFromApiResponse","feedback","SUCCESS","checked","page_helper_PageHelper","getDocsKeyForSection","alert_bar_AlertBar","showAlertBar","Card","available_organisation_units_tree_AvailableOrganisationUnitsTree","DatePicker_default","textFieldStyle","defaultDate","maxDate","minDate","validation_rule_groups_select_ValidationRuleGroupsSelect","Checkbox_default","labelPosition","onCheck","RaisedButton_default","disabled","isActionDisabled","validation_rules_analysis_table_ValidationRulesAnalysisTable","generateElementKey","attributeOptionComboDisplayName","organisationUnitDisplayName","periodDisplayName","validationRuleDescription","leftSideValue","rightSideValue","AvailableDatasetsSelect","dataSets","dataSet","dataSetsResponse","multiple","OutlierAnalyisTable","csvQueryStr","isZScoreAlgorithm","algorithm","downloadLink","pe","ouName","zScore","absDev","stdDev","mean","lowerBound","upperBound","getDisplayName","str","deName","cocName","aocName","categoryOptionComboId","sourceId","dataElementId","aoc","coc","de","marked","followUp","DEFAULT_THRESHOLD","DEFAULT_ALGORITHM","DEFAULT_MAX_RESULTS","OutlierDetection","organisationUnitIds","dataSetIds","threshold","showAdvancedZScoreFields","dataStartDate","dataEndDate","maxResults","start","dataSetsOnChange","thresholdOnChange","algorithmOnChange","dataStartDateOnChange","dataEndDateOnChange","maxResultsOnChange","toggleShowAdvancedZScoreFields","createQueryString","outlierValues","querySegments","push","join","selectedOptions","i","buttonLabel","Fragment","FlatButton_default","fullWidth","marginTop","available_datasets_select_AvailableDatasetsSelect","renderThresholdField","renderZScoreFields","OutlierAnalysisTable","FollowUpAnalysisTable","showComment","comment","unfollow","closeCommentDialog","element1","element2","unfollowups","convertElementToUnFollowupRequest","toggleCheckbox","oneChecked","commentDialogActions","dataElement","min","max","updateCheckbox","dataElementName","sourceName","parseFloat","followup","FollowUpAnalysis","getFollowUpList","ds","currentElement","followups","j","areElementsTheSame","follow_up_analysis_table_FollowUpAnalysisTable","sections","component","docs","Home","gridElements","grid_section_GridSection","NoMatch","location","pathname","AppRouter","routes","react_router","exact","render","home_Home","App","appState","translatedSections","containerElement","feedbackElement","centered","CircularProgress","FeedbackSnackbar_component","conf","hideSidebar","contentWrapperClassName","contentWrapperNoMargin","contentWrapper","HeaderBar","appName","Sidebar_component","onChangeSection","contentArea","app_router_AppRouter","childContextTypes","bool","shape","theme","spacing","Spacing","fontFamily","palette","primary1Color","primary2Color","blue700","primary3Color","blue100","accent1Color","orange500","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","window","hostname","match","log","setLevel","levels","INFO","AppComponent","withRouter","process","schemas","config","apiVersion","ReactDOM","build_es","appTheme","CssReset","getElementById","asyncToGenerator","regenerator_default","mark","_callee","uiLocale","wrap","_context","prev","next","init","sent","getUserSettings","setItem","stop","apply","arguments","navigator","serviceWorker","ready","registration","unregister","leftBar"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,QAAA,sBAAAC,WAAA,yBAAAC,SAAA,uBAAAC,MAAA,oBAAAC,OAAA,qBAAAC,WAAA,yBAAAC,WAAA,yBAAAC,WAAA,yBAAAC,WAAA,yBAAAC,aAAA,2BAAAC,IAAA,kBAAAC,UAAA,wBAAAC,gBAAA,oDCAlBd,EAAAC,QAAA,CAAkBc,gBAAA,sDAAAC,SAAA,qECAlBhB,EAAAC,QAAA,CAAkBgB,iBAAA,2CAAAC,0BAAA,kDAAAC,0BAAA,kDAAAC,wBAAA,sECAlBpB,EAAAC,QAAA,CAAkBoB,OAAA,wCAAAC,QAAA,qrrECAlBtB,EAAAC,QAAA,CAAkBsB,cAAA,kDCAlBvB,EAAAC,QAAA,CAAkBuB,SAAA,iDCAlBxB,EAAAC,QAAA,CAAkBwB,KAAA,mECAlBzB,EAAAC,QAAA,CAAkByB,WAAA,qDCAlB1B,EAAAC,QAAA,CAAkB0B,qBAAA,yECAlB3B,EAAAC,QAAA,CAAkB2B,sBAAA,sICAlB5B,EAAAC,QAAA,CAAkB4B,WAAA,2CAAAC,aAAA,6CAAAC,gBAAA,gDAAAC,OAAA,iPCYLC,EAAa,SAAAC,GACtB,IAAMC,EAAOD,EAAaE,aAXZ,SAAAC,GACd,IAAMC,EAAQ,CAAC,KAAM,KAAM,MACrBC,EAAWD,EAAME,IAAI,SAAAC,GAAC,SAAAC,OAAOD,EAAP,OAE5B,OACIH,EAAMK,SAASN,IACfE,EAASK,OAAO,SAAAH,GAAC,OAAIJ,EAAKQ,WAAWJ,KAAIK,OAAS,GAOlDC,CAAUZ,IACVa,SAASC,KAAKC,aAAa,MAAO,OAEtCC,IAAKC,eAAejB,GACpBkB,IAAOC,OAAOnB,IAGLoB,EAAyB,SAAAC,GAClC,GAAIA,EAAI,CACJ,IAAMC,EAAe,CACjBC,SAAU,WACVC,uBAAwB,cACxBC,QAAS,UACTC,QAAS,UACTC,KAAM,OACNC,QAAS,UACTC,YAAa,eACbC,eAAgB,iBAChBC,iBAAkB,mBAClBC,gBAAiB,kBACjBC,SAAU,YAEUC,OAAOC,KAAKb,GAEpBc,QAAQ,SAAAC,GACpBf,EAAae,GAAOrB,IAAKsB,EAAEhB,EAAae,MAG5CH,OAAOK,OAAOlB,EAAGL,KAAKM,aAAcA,kfCStCkB,GAAY,mBAClBtB,IAAOC,OAAO,MAEdH,IAAKyB,aAAa,KAAMD,GAAWE,GACnC1B,IAAKyB,aAAa,QAASD,GAAWG,GACtC3B,IAAKyB,aAAa,MAAOD,GAAWI,GACpC5B,IAAKyB,aAAa,KAAMD,GAAWK,GACnC7B,IAAKyB,aAAa,KAAMD,GAAWM,GACnC9B,IAAKyB,aAAa,KAAMD,GAAWO,GACnC/B,IAAKyB,aAAa,KAAMD,GAAWQ,GACnChC,IAAKyB,aAAa,KAAMD,GAAWS,GACnCjC,IAAKyB,aAAa,KAAMD,GAAWU,GACnClC,IAAKyB,aAAa,KAAMD,GAAWW,GACnCnC,IAAKyB,aAAa,KAAMD,GAAWY,GACnCpC,IAAKyB,aAAa,KAAMD,GAAWa,GACnCrC,IAAKyB,aAAa,KAAMD,GAAWc,GACnCtC,IAAKyB,aAAa,MAAOD,GAAWe,GACpCvC,IAAKyB,aAAa,KAAMD,GAAWgB,GACnCxC,IAAKyB,aAAa,KAAMD,GAAWiB,GACnCzC,IAAKyB,aAAa,QAASD,GAAWkB,GACtC1C,IAAKyB,aAAa,KAAMD,GAAWmB,GACnC3C,IAAKyB,aAAa,KAAMD,GAAWoB,GACnC5C,IAAKyB,aAAa,MAAOD,GAAWqB,GACpC7C,IAAKyB,aAAa,KAAMD,GAAWsB,IACnC9C,IAAKyB,aAAa,KAAMD,GAAWuB,IACnC/C,IAAKyB,aAAa,KAAMD,GAAWwB,IACnChD,IAAKyB,aAAa,KAAMD,GAAWyB,IACnCjD,IAAKyB,aAAa,UAAWD,GAAW0B,IACxClD,IAAKyB,aAAa,KAAMD,GAAW2B,IACnCnD,IAAKyB,aAAa,KAAMD,GAAW4B,IACnCpD,IAAKyB,aAAa,QAASD,GAAW6B,IAEtCrD,IAAKsD,oBAAoB9B,IACzBxB,IAAKC,eAAe,MAELD,SAAf,wECfeuD,oLAjDP,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAIC,KAAKC,MAAMhH,QAAQiH,MAC1CR,EAAAC,EAAAC,cAACO,GAAA,SAAD,CACI5C,IAAKyC,KAAKC,MAAMhH,QAAQsE,IACxBuC,UAAWM,KAAW,UAAWC,KAAOC,cAExCZ,EAAAC,EAAAC,cAAA,OAAKE,UAAWM,KAAW,MAAOC,KAAOE,eACrCb,EAAAC,EAAAC,cAAA,QACIE,UAAWM,KACP,gBACAC,KAAOG,uBAGVR,KAAKC,MAAMhH,QAAQwH,KAAKC,OAE7BhB,EAAAC,EAAAC,cAACe,GAAAhB,EAAD,CACIG,UAAWM,KACP,iBACA,OACAC,KAAOO,WAGVZ,KAAKC,MAAMhH,QAAQwH,KAAKI,OAGjCnB,EAAAC,EAAAC,cAAA,QACIE,UAAWM,KACP,sBACA,MACAC,KAAOS,kBAGV5E,IAAKsB,EAAEwC,KAAKC,MAAMhH,QAAQwH,KAAKM,cAEpCrB,EAAAC,EAAAC,cAAA,QACIE,UAAWM,KACP,sBACA,MACAC,KAAOW,iBAGV9E,IAAKsB,EAAEwC,KAAKC,MAAMhH,QAAQwH,KAAKQ,sBAxD9BC,4HCJpBC,gMAYEnB,KAAKoB,aAAc,EAGfpB,KAAKqB,QAAQC,iBAAmBtB,KAAKC,MAAMsB,YAC3CvB,KAAKqB,QAAQG,eAAe,CACxBF,eAAgBtB,KAAKC,MAAMsB,4DAMnCvB,KAAKoB,aAAc,0CAInB,OAAOpB,KAAKoB,gDAGJK,GACR,GAAIzB,KAAK0B,gBAAiB,CACtB,IAAMC,EACFF,GAASA,EAAMG,QACTH,EAAMG,QACN1F,IAAKsB,EAAE,gDAEjBwC,KAAKqB,QAAQG,eAAe,CACxBK,cAAc,EACdC,aAAc,CACVC,KAAMC,KACNJ,QAASD,GAEbM,UAAW,CACPC,SAAS,aA5CVC,aAAbhB,GAKKiB,aAAe,CAClB7F,GAAI8F,IAAUC,OACdhB,eAAgBe,IAAUE,OAC1Bf,eAAgBa,IAAUG,MA2CnBrB,+BC7BAsB,oLAfP,OACI/C,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACIhD,EAAAC,EAAAC,cAAA,OACIE,UAAWO,KAAO9F,SAClBoI,MAAO,CAAEC,QAAS5C,KAAKC,MAAM4C,KAAO,OAAS,SAE5C3G,IAAKsB,EACF,4EAbD0D,kECAV4B,IAAiC,EACjCC,GAAoC,CAC7CC,GAAIF,GACJG,YAAa,0BAGXC,eAcF,SAAAA,IAAc,IAAAC,EAAA,OAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4C,KAAAkD,IACVC,EAAA/F,OAAAiG,EAAA,EAAAjG,CAAA4C,KAAA5C,OAAAkG,EAAA,EAAAlG,CAAA8F,GAAAK,KAAAvD,QAEKwD,MAAQ,CACTC,qBAAsB,CAACV,IACvBW,SAAUZ,IAGdK,EAAKQ,SAAWR,EAAKQ,SAASC,KAAdxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IARNA,mFAWM,IAAAW,EAAA9D,KACVzD,EAAKyD,KAAKqB,QAAQ9E,GAClBwH,EAAqChB,GAC3CgB,EAAmCd,YAAc/G,IAAKsB,EAClDuF,GAAkCE,aAEtC1G,EAAGyH,OAAOC,oBACLC,KAAK,CACFC,QAAQ,EACRC,OAAQ,mBAEXC,KAAK,SAAAC,GACFR,EAAKS,SAAS,CACVd,qBAAoB,CAChBM,GADgBtI,OAAA2B,OAAAoH,GAAA,EAAApH,CAEbkH,EAA6BG,gBAI3CC,MAAM,WACHZ,EAAKa,iDAIRC,EAAOC,EAAOC,GACnB9E,KAAKuE,SAAS,CACVb,SAAUoB,EACVC,aACID,IAAUhC,GACJ,yBACA9C,KAAKwD,MAAMC,qBAAqBoB,GAAO5B,cAGrDjD,KAAKC,MAAM0D,SAASiB,EAAOC,EAAOC,oCAIlC,OACIpF,EAAAC,EAAAC,cAACoF,GAAArF,EAAD,CACIgD,MAAO3C,KAAKC,MAAM0C,MAClBsC,kBAAmB/I,IAAKsB,EAAE,yBAC1BmG,SAAU3D,KAAK2D,SACfmB,MAAO9E,KAAKwD,MAAME,UAEjB1D,KAAKwD,MAAMC,qBAAqBlI,IAAI,SAAA2J,GAAI,OACrCxF,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CACIpC,IAAK2H,EAAKlC,GACV8B,MAAOI,EAAKlC,GACZoC,YAAaF,EAAKjC,wBAzED/B,iBAAnCgC,GAMKmC,aAAe,CAClB1C,MAAO,IAPTO,GAUKd,aAAe,CAClB7F,GAAI8F,IAAUC,QAsEPY,yCCvFToC,eAeF,SAAAA,IAAc,IAAAnC,EAAA,OAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4C,KAAAsF,IACVnC,EAAA/F,OAAAiG,EAAA,EAAAjG,CAAA4C,KAAA5C,OAAAkG,EAAA,EAAAlG,CAAAkI,GAAA/B,KAAAvD,QAEKwD,MAAQ,CACTE,SAAU,GACV6B,iBAAkB,MAGtBpC,EAAKqC,qBAAuBrC,EAAKqC,qBAAqB5B,KAA1BxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAC5BA,EAAKsC,yBAA2BtC,EAAKsC,yBAAyB7B,KAA9BxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAChCA,EAAKuC,wBAA0BvC,EAAKuC,wBAAwB9B,KAA7BxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAC/BA,EAAKwC,sBAAwBxC,EAAKwC,sBAAsB/B,KAA3BxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAXnBA,mFAcM,IAAAW,EAAA9D,KACoB,OAAhCA,KAAKwD,MAAM+B,kBACXvF,KAAK2F,wBACAtB,KAAK,SAAAuB,GACF,IAAMC,EAAoBD,EAA0BnB,UACpDX,EAAKS,SAAS,CACVgB,iBAAkBM,MAGzBnB,MAAM,WACHZ,EAAKa,uLAMXpI,EAAKyD,KAAKqB,QAAQ9E,YAEDA,EAAGuJ,YAAYC,qBAAqB,CACvD3B,OAAQ,uDACRD,QAAQ,eAFN6B,UAKQC,OAAQ1J,EAAGuJ,YAAYI,YAAYC,IAAI,gDAE1C5J,EAAGyH,OAAO6B,kBAAkB3B,KAAK,CACpCC,QAAQ,EACRiC,MAAO,EACPhC,OAAQ,0FAIT4B,kJAGU9F,GACjB,OAAOA,EAAKmG,MAAM,KAAKC,uDAGF1B,EAAO2B,GAC5B,IAAIvG,KAAKwD,MAAME,SAAShI,SAAS6K,EAAQrG,MAAzC,CAGA,IAAM8C,EAAKhD,KAAKwF,qBAAqBe,EAAQrG,MAC7CF,KAAKuE,SAAS,CAAEb,SAAU,CAAC6C,EAAQrG,QACnCF,KAAKC,MAAM0D,UAAY3D,KAAKC,MAAM0D,SAASX,oDAGvB4B,KAAiB,IAAR1E,EAAQsG,EAARtG,KACrBwD,EAAa1D,KAAKwD,MAAlBE,SACF+C,EAAQ/C,EAAShI,SAASwE,GAC1BwD,EAAS/H,OAAO,SAAA+K,GAAY,OAAIA,IAAiBxG,IADzC,GAAAzE,OAAA2B,OAAAoH,GAAA,EAAApH,CAEJ4C,KAAKwD,MAAME,UAFP,CAEiBxD,IAE/BF,KAAKuE,SAAS,CAAEb,SAAU+C,IAC1BzG,KAAKC,MAAM0D,UACP3D,KAAKC,MAAM0D,SAAS8C,EAAMlL,IAAIyE,KAAKwF,wDAGlC,IAAAmB,EAAA3G,KACL,IAAKA,KAAKwD,MAAM+B,iBACZ,OAAO7F,EAAAC,EAAAC,cAAA,YAAO1D,IAAKsB,EAAE,wCAGzB,GAAIwC,KAAKwD,MAAM+B,iBAAiB1J,OAAS,EACrC,OACI6D,EAAAC,EAAAC,cAAA,SACK1D,IAAKsB,EACF,sDAMhB,IAAMoJ,EAAgB5G,KAAKC,MAAM4G,YAC3B7G,KAAK0F,wBACL1F,KAAKyF,yBAEX,OACI/F,EAAAC,EAAAC,cAAA,OAAKE,UAAWO,KAAO7F,MAClBwF,KAAKwD,MAAM+B,iBAAiBhK,IAAI,SAAAuL,GAAW,OACxCpH,EAAAC,EAAAC,cAACmH,GAAA,EAAD,CACIxJ,IAAKuJ,EAAY9D,GACjBgE,gBAAiBC,SAAQ,GACzBC,KAAMJ,EACNpD,SAAUiD,EAAKnD,MAAME,SACrByD,kBAAmB,KAAA1L,OAAKqL,EAAY9D,KACpC4D,cAAeA,cApHM1F,iBAAvCoE,GACKlD,aAAe,CAClB7F,GAAI8F,IAAUC,QAFhBgD,GAUKD,aAAe,CAClB1B,SAAU,KACVkD,aAAa,GAgHNvB,UCtHF8B,GAAiB,SAAAZ,GAAgC,IAA7Ba,EAA6Bb,EAA7Ba,MAAOC,EAAsBd,EAAtBc,MACpC,OAD0Dd,EAAfe,SAEhC,SAEX,GAAA9L,OAAU4L,EAAV,KAAA5L,OAAmB6L,ICNjBE,oLAcO,IACGjL,EAAOyD,KAAKqB,QAAZ9E,GADHkL,EAE2BzH,KAAKC,MAA7ByH,EAFHD,EAEGC,IAAKC,EAFRF,EAEQE,eACb,OACIjI,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACI5C,UAAU,cACV8H,UAAW,CAAEC,MAAO,WACpBC,KAAI,GAAArM,OD/BK,yBC+BL,KAAAA,OAAkB2L,GAClB7K,EAAGwL,OAAOC,SADV,KAAAvM,OAECiM,EAFD,eAAAjM,OAEkBkM,EAFlB,SAGJM,OAAO,SACPC,IAAI,sBACJC,QAASjM,IAAKsB,EDnCI,mBCoClB4K,gBAAgB,gBAChBC,cAAc,kBAVlB,eAlBanH,iBAAnBsG,GAMKnC,aAAe,CAClBqC,IAAK,MAPPF,GAUKpF,aAAe,CAClB7F,GAAI8F,IAAUC,QAyBPkF,UClCAc,GAZI,CACfC,UAAW,CACPC,MAAO,QAEXC,UAAW,CACPC,KAAM,WAEVC,YAAa,CACTC,OAAQ,gCCLVC,GAAkB,SAAArC,GAAA,IACpB1B,EADoB0B,EACpB1B,MACAgE,EAFoBtC,EAEpBsC,sBACAC,EAHoBvC,EAGpBuC,sBAHoB,OAKpBrJ,EAAAC,EAAAC,cAAA,YACK,IAAIoJ,KAAKC,aAAaC,eAAeC,QAAQ,YAAa,CACvDL,wBACAC,0BACDK,OAAOtE,KAIlB+D,GAAgBxD,aAAe,CAC3ByD,sBAAuB,EACvBC,sBAAuB,GASZF,+BCtBTQ,sLAeS,IACCC,EAAYtJ,KAAKqB,QAAQ9E,GAAGgN,IAAIC,SAAhCF,QADD7B,EAEyBzH,KAAKC,MAA7BwJ,EAFDhC,EAECgC,SAAUC,EAFXjC,EAEWiC,UACZC,EAAYC,KAAKC,MAGjBC,EAAW9J,KAAKC,MAAM6J,UAAX,KAAArO,OAA4BkO,GAE7C,OAAOD,EAAUK,OAAO,SAACC,EAAKjI,GAE1B,OADAiI,EAAIjI,GAAJ,GAAAtG,OAAe6N,GAAf7N,OAAyBgO,EAAzB,KAAAhO,OAAqCsG,EAArC,KAAAtG,OAA6CqO,GACtCE,GACR,qCAGE,IACGN,EAAc1J,KAAKC,MAAnByJ,UACFO,EAAQjK,KAAKkK,WACnB,OACIxK,EAAAC,EAAAC,cAAA,OAAKE,UAAWO,KAAO5F,YAClBiP,EAAUhO,SAAS,QAChBgE,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAoBgI,KAAMmC,EAAME,IAAKC,UAAQ,GACrDlO,IAAKsB,EAAE,oBAGfkM,EAAUhO,SAAS,QAChBgE,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAoBgI,KAAMmC,EAAMI,IAAKD,UAAQ,GACrDlO,IAAKsB,EAAE,oBAGfkM,EAAUhO,SAAS,QAChBgE,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAoBgI,KAAMmC,EAAMK,IAAKF,UAAQ,GACrDlO,IAAKsB,EAAE,4BA9CP0D,iBAAnBmI,GACKjH,aAAe,CAClB7F,GAAI8F,IAAUC,QAFhB+G,GAWKhE,aAAe,CAClBqE,UAAW,CAAC,MAAO,MAAO,QA0CnBL,4DC3DFkB,GAAU,CACnBC,UAAW,CACPC,wBAAyB,gCACzBC,0BAA2B,0CAC3BC,sBAAuB,uCACvBC,gBAAiB,mBACjBC,iBAAkB,oBAClBC,gBAAiB,yBACjBC,cAAe,sBACfC,eAAgB,wBAEpBC,QAAS,CACLC,SAAU,CACNC,MAAO,OCAbC,eAUF,SAAAA,IAAc,IAAAjI,EAAA,OAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4C,KAAAoL,IACVjI,EAAA/F,OAAAiG,EAAA,EAAAjG,CAAA4C,KAAA5C,OAAAkG,EAAA,EAAAlG,CAAAgO,GAAA7H,KAAAvD,QAEKwD,MAAQ,CACTtB,SAAS,EACTmJ,aAAa,EACbC,KAAM,GACNC,WAAY,CACRC,SAAU,GACVC,UAAW,KAInBtI,EAAKuI,YAAcvI,EAAKuI,YAAY9H,KAAjBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACnBA,EAAKwI,YAAcxI,EAAKwI,YAAY/H,KAAjBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAdTA,yFAiBYyI,GACtB,IAAMC,EAAY,GAElBzO,OAAOC,KAAKuO,GAAWtO,QAAQ,SAAAwO,GAEvBF,EAAUG,eAAeD,IACzBE,GAAwBC,iBAAiBvQ,SAASoQ,KAElDD,EAAUC,GAAYF,EAAUE,MAIpCD,IAAc,IACd7L,KAAKuE,SAASsH,yCAIR,IAAA/H,EAAA9D,KACV,IAAKA,KAAKwD,MAAMtB,QAAS,CACrB,IAAMgK,EAAMlM,KAAKqB,QAAQ9E,GAAGgN,IAAIC,SAC1B2C,EAAW,GAAA1Q,OAAM8O,GAAQC,UAAUI,gBAAxB,KAAAnP,OACbuE,KAAKC,MAAMmM,kBAETC,EACF,GAAA5Q,OAAG8O,GAAQC,UAAUE,2BAArB,qBAAAjP,OACqBuE,KAAKC,MAAMmM,kBADhC,aAAA3Q,OAEauE,KAAKC,MAAMqM,UAFxB,uBAAA7Q,OAGuBuE,KAAKC,MAAMsM,oBAHlC,2BAAA9Q,OAI2BuE,KAAKC,MAAMuM,wBAC1CxM,KAAKqB,QAAQG,eAAe,CACxBS,UAAW,CACPC,SAAS,KAGjBuK,QAAQC,IAAI,CAACR,EAAIS,IAAIR,GAAcD,EAAIS,IAAIN,KACtChI,KAAK,SAAAmC,GAAwB,IAAAoG,EAAAxP,OAAAyP,GAAA,EAAAzP,CAAAoJ,EAAA,GAAtB8E,EAAsBsB,EAAA,GAAhBrB,EAAgBqB,EAAA,GAC1B9I,EAAKzC,QAAQG,eAAe,CACxBS,UAAW,CACPC,SAAS,KAGjB4B,EAAKS,SAAS,CAAE8G,aAAa,EAAMC,OAAMC,iBAE5C7G,MAAM,WACHZ,EAAKa,uDAMjB3E,KAAKuE,SAAS,CAAE8G,aAAa,qCAK7B,IAAMyB,EAAgB,CAClBpN,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACI5C,UAAU,eACVvC,IAAG,KAAA9B,OAAOuE,KAAKC,MAAMsM,mBAAlB,KAAA9Q,OACCuE,KAAKC,MAAMqM,SADZ,KAAA7Q,OAECuE,KAAKC,MAAMmM,kBACf1L,MAAOxE,IAAKsB,EAAE,SACduP,QAAS9F,SAAQ,GACjB+F,QAAShN,KAAK2L,eAIhBsB,EACFvN,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KAAW,MAAO,cAAeC,KAAOzF,aAEnD8E,EAAAC,EAAAC,cAAA,OAAKE,UAAWM,KAAW,YAAaC,KAAOxF,eAC1CqB,IAAKsB,EAAE,+BAEZkC,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KAAW,YAAaC,KAAOvF,kBAEzCoB,IAAKsB,EAAE,oBAEZkC,EAAAC,EAAAC,cAAA,OAAKE,UAAW,YAAa5D,IAAKsB,EAAE,SACpCkC,EAAAC,EAAAC,cAAA,OAAKE,UAAW,YAAaE,KAAKwD,MAAM8H,KAAKrI,aAC7CvD,EAAAC,EAAAC,cAAA,OAAKE,UAAW,YAAa5D,IAAKsB,EAAE,gBACpCkC,EAAAC,EAAAC,cAAA,OAAKE,UAAW,YACXE,KAAKwD,MAAM8H,KAAK4B,qBAKvBC,EAAa,SAAAC,GAAI,OACnB1N,EAAAC,EAAAC,cAAA,OAAKE,UAAWM,KAAW,MAAOC,KAAOzF,aACrC8E,EAAAC,EAAAC,cAAA,OAAKE,UAAWM,KAAW,YAAaC,KAAOxF,eAC1CuS,GAEL1N,EAAAC,EAAAC,cAAA,OAAKE,UAAWM,KAAW,YAAaiN,KAAchU,SAClDqG,EAAAC,EAAAC,cAAA,OAAKE,UAAWO,KAAOtF,QAClBmB,IAAKsB,EAAE,yBAMlB8P,EAAe,SAACF,EAAMG,EAAUC,GAAjB,OACjB9N,EAAAC,EAAAC,cAAA,OAAKE,UAAWM,KAAW,MAAOoN,EAAcnN,KAAOzF,aACnD8E,EAAAC,EAAAC,cAAA,OAAKE,UAAWM,KAAW,YAAaC,KAAOxF,eAC1CuS,GAEL1N,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KAAW,YAAaC,KAAOvF,kBAEzCoB,IAAKsB,EAAE,iBAEZkC,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACP,WACAC,KAAOvF,gBACPuS,KAAcjU,QAGjB8C,IAAKsB,EAAE,UAEX+P,EAAShS,IAAI,SAAAkS,GAAO,OACjB/N,EAAAC,EAAAC,cAAA,OAAKrC,IAAKkQ,EAAQC,KAAM5N,UAAW,aAC/BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,OACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,aAAc2N,EAAQC,MACtChO,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACP,WACAiN,KAAcjU,QAGjBqU,EAAQ3I,MACLpF,EAAAC,EAAAC,cAAC+N,GAAD,CACI7I,MAAO8I,OAAOH,EAAQ3I,SAG1B,WAS5B,OACIpF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACInF,IAAG,MAAA9B,OAAQuE,KAAKC,MAAMsM,mBAAnB,KAAA9Q,OACCuE,KAAKC,MAAMqM,SADZ,KAAA7Q,OAECuE,KAAKC,MAAMmM,kBACftM,UACI,sDAEJ6C,MAAOkL,GAAalF,YACpBqE,QAAShN,KAAK0L,aARlB,QAYAhM,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACI5C,UAAU,kCACVvC,IAAG,IAAA9B,OAAMuE,KAAKC,MAAMsM,mBAAjB,KAAA9Q,OACCuE,KAAKC,MAAMqM,SADZ,KAAA7Q,OAECuE,KAAKC,MAAMmM,kBACf0B,sBAAuB7G,SAAQ,GAC/B8G,MAAO7R,IAAKsB,EAAE,sBACdwQ,QAASlB,EACTmB,MAAOhH,SAAQ,GACfiH,KAAMlO,KAAKwD,MAAM6H,YACjB8C,eAAgBnO,KAAK2L,aAGpBsB,EAEAjN,KAAKwD,MAAM+H,WAAWC,UACvBxL,KAAKwD,MAAM+H,WAAWC,SAAS3P,OAAS,EAClCyR,EACIpR,IAAKsB,EAAE,aACPwC,KAAKwD,MAAM+H,WAAWC,SACtB,iBAEJ2B,EAAWjR,IAAKsB,EAAE,cAEvBwC,KAAKwD,MAAM+H,WAAWE,WACvBzL,KAAKwD,MAAM+H,WAAWE,UAAU5P,OAAS,EACnCyR,EACIpR,IAAKsB,EAAE,cACPwC,KAAKwD,MAAM+H,WAAWE,UACtB,kBAEJ0B,EAAWjR,IAAKsB,EAAE,wBAxNP2D,IAA/BiK,GACKa,iBAAmB,CAAC,WADzBb,GAGKgD,UAAY,CACfhC,iBAAkB/J,IAAUE,OAAO8L,WACnC/B,SAAUjK,IAAUE,OAAO8L,WAC3B9B,mBAAoBlK,IAAUE,OAAO8L,WACrC7B,uBAAwBnK,IAAUE,OAAO8L,YAwNlCjD,wCCzNAkD,GAdU,SAAArO,GAAK,OAC1BP,EAAAC,EAAAC,cAAA,OACIE,UAAWyO,KAAGlO,KAAOrG,iBAAkBiG,EAAMH,UAAhC1C,OAAAoR,GAAA,EAAApR,CAAA,GACRiD,KAAM,oBAAA5E,OAAqBwE,EAAMgG,OAAUhG,EAAMgG,QAGrDhG,EAAMwO,WC2JAC,oLA5IP,IAAMnB,EAAWvN,KAAKC,MAAMsN,SAEtBoB,EAAoCpB,EAASqB,KAC/C,SAAAC,GAAC,OAAIA,EAAEC,sBAAmD,YAA3BD,EAAEC,uBAI/BC,EAAOxB,EAAShS,IAAI,SAAAkS,GAAO,OAC7B/N,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAUnF,IAAKkQ,EAAQlQ,KACnBmC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgBqL,MAAON,EAAQuB,cAC3BtP,EAAAC,EAAAC,cAACqP,GAAD,KAAmBxB,EAAQuB,eAE9BL,GACGjP,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgBqL,MAAON,EAAQqB,sBAC3BpP,EAAAC,EAAAC,cAACqP,GAAD,CAAkBhJ,KAAK,QAClBwH,EAAQqB,uBAIrBpP,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgBqL,MAAON,EAAQyB,QAC3BxP,EAAAC,EAAAC,cAACqP,GAAD,KAAmBxB,EAAQyB,SAE/BxP,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgBqL,MAAON,EAAQ0B,YAC3BzP,EAAAC,EAAAC,cAACqP,GAAD,KAAmBxB,EAAQ0B,aAE/BzP,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgBqL,MAAON,EAAQ2B,gBAC3B1P,EAAAC,EAAAC,cAACqP,GAAD,CAAkBhJ,KAAM,UACnBwH,EAAQ2B,iBAGjB1P,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgBqL,MAAON,EAAQ4B,WAC3B3P,EAAAC,EAAAC,cAACqP,GAAD,KACIvP,EAAAC,EAAAC,cAAC+N,GAAD,CAAiB7I,MAAO2I,EAAQ4B,cAGxC3P,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgBqL,MAAON,EAAQ1T,UAC3B2F,EAAAC,EAAAC,cAACqP,GAAD,CAAkBnP,UAAWO,KAAOtG,UAC/B0T,EAAQ1T,WAGjB2F,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgBqL,MAAON,EAAQ6B,YAC3B5P,EAAAC,EAAAC,cAACqP,GAAD,KACIvP,EAAAC,EAAAC,cAAC+N,GAAD,CAAiB7I,MAAO2I,EAAQ6B,eAGxC5P,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACIhD,EAAAC,EAAAC,cAACqP,GAAD,KACIvP,EAAAC,EAAAC,cAAC2P,GAAD,CACInD,iBAAkBqB,EAAQrB,iBAC1BE,SAAUmB,EAAQnB,SAClBC,mBAAoBkB,EAAQlB,mBAC5BC,uBACIiB,EAAQjB,8BAQhC,OACI9M,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAWuN,KAAc7T,YAC1BkG,EAAAC,EAAAC,cAAC4P,GAAD,CACI/F,SAAUc,GAAQC,UAAUG,yBAGpCjL,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACI+M,YAAY,EACZ3P,UAAWM,KACPiN,KAAclU,SACdkH,KAAOvG,iBAEX4V,aAAa,EACbC,UAAW,CAAEC,UAAW,SAExBlQ,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACImN,kBAAkB,EAClBC,mBAAmB,EACnBC,iBAAiB,GAEjBrQ,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACIhD,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACIqL,MAAO7R,IAAKsB,EAAE,sBAEbtB,IAAKsB,EAAE,sBAEXmR,GACGjP,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACIqL,MAAO7R,IAAKsB,EACR,iCAGHtB,IAAKsB,EAAE,qBAGhBkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmBqL,MAAO7R,IAAKsB,EAAE,WAC5BtB,IAAKsB,EAAE,WAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmBqL,MAAO7R,IAAKsB,EAAE,eAC5BtB,IAAKsB,EAAE,eAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACIqL,MAAO7R,IAAKsB,EAAE,oBAEbtB,IAAKsB,EAAE,oBAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmBqL,MAAO7R,IAAKsB,EAAE,UAC5BtB,IAAKsB,EAAE,UAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmBqL,MAAO7R,IAAKsB,EAAE,aAC5BtB,IAAKsB,EAAE,aAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmBqL,MAAO7R,IAAKsB,EAAE,UAC5BtB,IAAKsB,EAAE,UAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmBqL,MAAO7R,IAAKsB,EAAE,YAC5BtB,IAAKsB,EAAE,cAIpBkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAWsN,oBAAoB,EAAOC,aAAa,GAC9ClB,IAGTrP,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACPiN,KAAc5T,WACd4T,KAAc1T,MAGlB+F,EAAAC,EAAAC,cAAC4P,GAAD,CACI/F,SAAUc,GAAQC,UAAUG,iCA1ITzJ,iBCnB9BgP,GAA6B,SAAAC,GAAI,OAC1CA,EAAKC,cAAc/J,MAAM,KAAK,ICqB5B2F,eAGF,SAAAA,IAAc,IAAA7I,EAAA,OAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4C,KAAAgM,IACV7I,EAAA/F,OAAAiG,EAAA,EAAAjG,CAAA4C,KAAA5C,OAAAkG,EAAA,EAAAlG,CAAA4O,GAAAzI,KAAAvD,QAEKwD,MAAQ,CACT6M,WAAW,EACXC,UAAW,IAAI1G,KACf2G,QAAS,IAAI3G,KACb2C,mBAAoB,KACpBiE,sBAAuB1N,GACvB2N,cAAc,EACdC,SAAS,EACTnD,SAAU,GACVrL,SAAS,GAGbiB,EAAKwN,SAAWxN,EAAKwN,SAAS/M,KAAdxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAChBA,EAAKyN,KAAOzN,EAAKyN,KAAKhN,KAAVxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAEZA,EAAK0N,kBAAoB1N,EAAK0N,kBAAkBjN,KAAvBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACzBA,EAAK2N,gBAAkB3N,EAAK2N,gBAAgBlN,KAArBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACvBA,EAAK4N,yBAA2B5N,EAAK4N,yBAAyBnN,KAA9BxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAChCA,EAAK6N,4BAA8B7N,EAAK6N,4BAA4BpN,KAAjCxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAGnCA,EAAK8N,wBAA0B9N,EAAK8N,wBAAwBrN,KAA7BxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAC/BA,EAAK+N,wBAA0B/N,EAAK+N,wBAAwBtN,KAA7BxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAzBrBA,yFA4BYyI,GACtB,IAAMC,EAAY,GAElBzO,OAAOC,KAAKuO,GAAWtO,QAAQ,SAAAwO,GAEvBF,EAAUG,eAAeD,IACzBE,EAAwBC,iBAAiBvQ,SAASoQ,KAElDD,EAAUC,GAAYF,EAAUE,MAIpCD,IAAc,IACd7L,KAAKuE,SAASsH,sCAyBX,IAAA/H,EAAA9D,KACDkM,EAAMlM,KAAKqB,QAAQ9E,GAAGgN,IAAIC,SAEhC,GAAIxJ,KAAKmR,cAAe,CACpB,IAAMC,EAAU,CACZd,UAAWJ,GAA2BlQ,KAAKwD,MAAM8M,WACjDC,QAASL,GAA2BlQ,KAAKwD,MAAM+M,SAC/Cc,GAAIrR,KAAKwD,MAAM+I,mBACfkE,aAAczQ,KAAKwD,MAAMiN,aACzBC,QAAS1Q,KAAKwD,MAAMkN,SAIpB1Q,KAAKwD,MAAMgN,wBACX1N,KAEAsO,EAAQE,IAAMtR,KAAKwD,MAAMgN,uBAG7BxQ,KAAKqB,QAAQG,eAAe,CACxBS,UAAW,CACPC,SAAS,KAIjBgK,EAAIqF,KAAKhH,GAAQC,UAAUC,wBAA3BrN,OAAAoU,EAAA,EAAApU,CAAA,GAAyDgU,IACpD/M,KAAK,SAAAoN,GACF,GAAI3N,EAAKpC,gBAAiB,CACtB,IAAM6L,EAAWkE,EAASlW,IACtByQ,EAAwB0F,+BAEtBC,EACFpE,GAAYA,EAAS1R,OAAS,EACxB,CACIgG,cAAc,GAElB,CACIA,cAAc,EACdC,aAAc,CACVC,KAAM6P,KACNhQ,QAAS1F,IAAKsB,EACV,oCAItBsG,EAAKzC,QAAQG,eAAbpE,OAAAoU,EAAA,EAAApU,CAAA,GACOuU,EADP,CAEI1P,UAAW,CACPC,SAAS,EACTqL,WACA8C,UAAW9C,GAAYA,EAAS1R,OAAS,SAKxD6I,MAAM,WACHZ,EAAKa,gDAMjB3E,KAAKuE,SAAS,CAAE8L,WAAW,IAC3BrQ,KAAKqB,QAAQG,eAAe,CACxBS,UAAW,CAAEoO,WAAW,+CAIdzL,EAAOuL,GACrBnQ,KAAKuE,SAAS,CAAE+L,UAAW,IAAI1G,KAAKuG,6CAGxBvL,EAAOuL,GACnBnQ,KAAKuE,SAAS,CAAEgM,QAAS,IAAI3G,KAAKuG,sDAGb5D,GACrBvM,KAAKuE,SAAS,CAAEgI,2EAGQ3H,EAAOC,EAAOC,GACtC9E,KAAKuE,SAAS,CAAEiM,sBAAuB1L,oDAGnBF,EAAOiN,GAC3B7R,KAAKuE,SAAS,CAAEkM,aAAcoB,oDAGVjN,EAAOiN,GAC3B7R,KAAKuE,SAAS,CAAEmM,QAASmB,2CAIzB,OACI7R,KAAKwD,MAAM6M,WACXrQ,KAAKwD,MAAM+J,UACXvN,KAAKwD,MAAM+J,SAAS1R,QAAU0O,GAAQU,QAAQC,SAASC,4CAK3D,OACInL,KAAKwD,MAAM8M,WACXtQ,KAAKwD,MAAM+M,SACXvQ,KAAKwD,MAAM+I,8DAKf,OAAQvM,KAAKmR,eAAiBnR,KAAKwD,MAAMtB,yCAIzC,OACIxC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAWuN,KAAc9T,YACzBmG,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACIsK,QAAShN,KAAK4Q,KACdjO,MAAO,CACHC,QAAS5C,KAAKwD,MAAM6M,UAAY,SAAW,SAG/C3Q,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAU5C,UAAW,kBAArB,eAIH5D,IAAKsB,EAAE,4BACRkC,EAAAC,EAAAC,cAACkS,GAAD,CACInK,eAAgBoK,GACZ/R,KAAKC,MAAMsB,eAIvB7B,EAAAC,EAAAC,cAACoS,GAAD,CAAUnP,KAAM7C,KAAKiS,iBACrBvS,EAAAC,EAAAC,cAACsS,GAAA,KAAD,KACIxS,EAAAC,EAAAC,cAACsS,GAAA,SAAD,CACIvP,MAAO,CACHC,QAAU5C,KAAKwD,MAAM6M,UAAsB,OAAV,UAGrC3Q,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACP,WACAiN,KAAcpU,UAGlByG,EAAAC,EAAAC,cAAA,OAAKE,UAAWuN,KAAczT,WACzBsC,IAAKsB,EAAE,6BAEZkC,EAAAC,EAAAC,cAACuS,GAAD,CACIxO,SAAU3D,KAAK+Q,4BAGvBrR,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACP,WACAiN,KAAcpU,UAGlByG,EAAAC,EAAAC,cAACwS,GAAAzS,EAAD,CACIqD,GAAG,aACHqP,eAAgBxE,GAAatF,UAC7BtD,kBAAmB/I,IAAKsB,EAAE,cAC1BmG,SAAU3D,KAAK6Q,kBACf/L,MAAO9E,KAAKwD,MAAM8M,UAClBgC,YAAa,IAAI1I,KACjB2I,QAASvS,KAAKwD,MAAM+M,UAExB7Q,EAAAC,EAAAC,cAACwS,GAAAzS,EAAD,CACIqD,GAAG,WACHqP,eAAgBxE,GAAatF,UAC7BtD,kBAAmB/I,IAAKsB,EAAE,YAC1BmG,SAAU3D,KAAK8Q,gBACfhM,MAAO9E,KAAKwD,MAAM+M,QAClB+B,YAAa,IAAI1I,KACjB4I,QAASxS,KAAKwD,MAAM8M,YAExB5Q,EAAAC,EAAAC,cAAA,OAAKoD,GAAG,0BACJtD,EAAAC,EAAAC,cAAC6S,GAAD,CACI9P,MAAOkL,GAAatF,UACpB5E,SACI3D,KAAKgR,+BAIjBtR,EAAAC,EAAAC,cAAA,OAAKoD,GAAG,6BACJtD,EAAAC,EAAAC,cAAC8S,GAAA/S,EAAD,CACIe,MAAOxE,IAAKsB,EAAE,sBACdmV,cAAc,OACdd,QAAS7R,KAAKwD,MAAMiN,aACpBmC,QAAS5S,KAAKiR,2BAGtBvR,EAAAC,EAAAC,cAAA,OAAKoD,GAAG,0BACJtD,EAAAC,EAAAC,cAAC8S,GAAA/S,EAAD,CACIe,MAAOxE,IAAKsB,EAAE,uBACdmV,cAAc,OACdd,QAAS7R,KAAKwD,MAAMkN,QACpBkC,QAAS5S,KAAKkR,6BAK9BxR,EAAAC,EAAAC,cAACiT,GAAAlT,EAAD,CACIqD,GAAG,wBACHlD,UAAWuN,KAAcnU,WACzBwH,MAAOxE,IAAKsB,EAAE,YACduP,SAAO,EACP+F,SAAU9S,KAAK+S,mBACf/F,QAAShN,KAAK2Q,YAGtBjR,EAAAC,EAAAC,cAACsS,GAAA,SAAD,CACIlP,GAAG,gBACHL,MAAO,CACHC,QAAS5C,KAAKwD,MAAM6M,UAAY,QAAU,SAG9C3Q,EAAAC,EAAAC,cAACoT,GAAD,CACIzF,SAAUvN,KAAKwD,MAAM+J,qBAjSXpM,IAAhC6K,GACKC,iBAAmB,CAAC,UAAW,WAAY,aADhDD,GAgDKiH,mBAAqB,SAAApE,GAAC,SAAApT,OACtBoT,EAAEzC,iBADoB,KAAA3Q,OACAoT,EAAEvC,SADF,KAAA7Q,OACcoT,EAAEtC,mBADhB,KAAA9Q,OAErBoT,EAAErC,yBAlDRR,GAqDK0F,8BAAgC,SAAA7C,GAAC,MAAK,CACzCtR,IAAKyO,GAAwBiH,mBAAmBpE,GAChDzC,iBAAkByC,EAAEzC,iBACpB0C,qBAAsBD,EAAEqE,gCACxB1G,uBAAwBqC,EAAErC,uBAC1BwC,aAAcH,EAAEsE,4BAChB5G,mBAAoBsC,EAAEtC,mBACtB2C,OAAQL,EAAEuE,kBACV9G,SAAUuC,EAAEvC,SACZ6C,WAAYN,EAAEM,WACdC,eAAgBP,EAAEwE,0BAClBhE,UAAWR,EAAEyE,cACbvZ,SAAU8U,EAAE9U,SACZuV,WAAYT,EAAE0E,iBAwOPvH,mDC7TTwH,eAaF,SAAAA,IAAc,IAAArQ,EAAA,OAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4C,KAAAwT,IACVrQ,EAAA/F,OAAAiG,EAAA,EAAAjG,CAAA4C,KAAA5C,OAAAkG,EAAA,EAAAlG,CAAAoW,GAAAjQ,KAAAvD,QAEKwD,MAAQ,CACTiQ,SAAU,MAJJtQ,mFAQM,IAAAW,EAAA9D,KACVzD,EAAKyD,KAAKqB,QAAQ9E,GACG,MAAvByD,KAAKwD,MAAMiQ,UACXlX,EAAGyH,OAAO0P,QACLxP,KAAK,CACFC,QAAQ,EACRC,OAAQ,mBAEXC,KAAK,SAAAsP,GACF7P,EAAKS,SAAS,CACVkP,SAAUE,EAAiBlP,cAGlCC,MAAM,WACHZ,EAAKa,iDAMjB,OACIjF,EAAAC,EAAAC,cAAA,UACIgU,UAAQ,EACR9T,UAAWO,KAAOjG,OAClBuJ,SAAU3D,KAAKC,MAAM0D,WAEnB3D,KAAKwD,MAAMiQ,UAAY,IAAIlY,IAAI,SAAA2J,GAAI,OACjCxF,EAAAC,EAAAC,cAAA,UACIrC,IAAK2H,EAAKlC,GACV8B,MAAOI,EAAKlC,GACZlD,UAAWO,KAAOhG,SAEjB6K,EAAKjC,uBArDQ/B,iBAAhCsS,GACKpR,aAAe,CAClB7F,GAAI8F,IAAUC,QAFhBkR,GASKnO,aAAe,CAClB1B,SAAU,MAmDH6P,+BC7CTK,GAAsB,SAAArN,GAKtB,IAJFsN,EAIEtN,EAJFsN,YACAvG,EAGE/G,EAHF+G,SAIMwG,EAAkC,YADtCvN,EADFwN,UAIMC,EACFvU,EAAAC,EAAAC,cAAC4P,GAAD,CACI9F,UAAW,CAAC,OACZD,SAAUc,GAAQC,UAAUK,iBAC5Bf,SAAUgK,IAKZ/E,EAAOxB,EAAShS,IAAI,SAAAkS,GAKtB,OACI/N,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAUnF,IAAKkQ,EAAQlQ,KACnBmC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KAAiB+K,EAAQxK,aACzBvD,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KAAiB+K,EAAQyG,IACzBxU,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KAAiB+K,EAAQ0G,QACzBzU,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAcjU,OACrCsG,EAAAC,EAAAC,cAAC+N,GAAD,CACI7I,MAAO2I,EAAQ3I,MACfgE,sBAAuB,KAG9BiL,GACGrU,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAcjU,OACrCsG,EAAAC,EAAAC,cAAC+N,GAAD,CAAiB7I,MAAO2I,EAAQ2G,UAGxC1U,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAcjU,OACrCsG,EAAAC,EAAAC,cAAC+N,GAAD,CACI7I,MAAO2I,EAAQ4G,OACfvL,sBAAuB,KAG9BiL,GACGrU,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAcjU,OACrCsG,EAAAC,EAAAC,cAAC+N,GAAD,CAAiB7I,MAAO2I,EAAQ6G,UAGvCP,GACGrU,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAcjU,OACrCsG,EAAAC,EAAAC,cAAC+N,GAAD,CACI7I,MAAO2I,EAAQ8G,KACfzL,sBAAuB,KAInCpJ,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAcjU,OACrCsG,EAAAC,EAAAC,cAAC+N,GAAD,CACI7I,MAAO2I,EAAQ+G,WACf1L,sBAAuB,KAG/BpJ,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAcjU,OACrCsG,EAAAC,EAAAC,cAAC+N,GAAD,CACI7I,MAAO2I,EAAQgH,WACf3L,sBAAuB,QAgB3C,OACIpJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAWuN,KAAc7T,YAAaya,GAC3CvU,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACI+M,YAAY,EACZ3P,UAAWM,KACPiN,KAAclU,SACdkH,KAAO3F,uBAGXgF,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACImN,kBAAkB,EAClBC,mBAAmB,EACnBC,iBAAiB,GAEjBrQ,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACIhD,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACKxG,IAAKsB,EAAE,iBAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACKxG,IAAKsB,EAAE,WAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACKxG,IAAKsB,EAAE,sBAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAcjU,OACvC8C,IAAKsB,EAAE,UAEXuW,GACGrU,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAcjU,OACvC8C,IAAKsB,EAAE,YAGhBkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAcjU,OACvC8C,IAAKsB,EAAE,cAEXuW,GACGrU,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAcjU,OACvC8C,IAAKsB,EAAE,YAGfuW,GACGrU,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAcjU,OACvC8C,IAAKsB,EAAE,SAGhBkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAcjU,OACvC8C,IAAKsB,EAAE,QAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAcjU,OACvC8C,IAAKsB,EAAE,UAOpBkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAWsN,oBAAoB,EAAOC,aAAa,GAC9ClB,IAGTrP,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACPiN,KAAc5T,WACd4T,KAAc1T,MAGjBsa,KAqCjB,SAASS,GAAe7F,GACpB,IAAI8F,EAAM9F,EAAE+F,OAaZ,MARkB,YAAd/F,EAAEgG,UACFF,GAAG,KAAAlZ,OAASoT,EAAEgG,QAAX,MAGW,YAAdhG,EAAEiG,UACFH,GAAG,KAAAlZ,OAASoT,EAAEiG,QAAX,MAGAH,EA7CXd,GAAoBZ,mBAAqB,SAAApE,GAAC,SAAApT,OACnCoT,EAAErC,uBADiC,KAAA/Q,OACPoT,EAAEkG,sBADK,KAAAtZ,OACoBoT,EAAEvC,SADtB,KAAA7Q,OAElCoT,EAAEmG,SAFgC,KAAAvZ,OAGlCoT,EAAEoG,gBAEVpB,GAAoBnC,8BAAgC,SAAA7C,GAAC,OAAAzR,OAAAoU,EAAA,EAAApU,CAAA,CACjD6F,YAAayR,GAAe7F,GAC5BtR,IAAG,GAAA9B,OAAKoT,EAAEqG,IAAP,KAAAzZ,OAAcoT,EAAEsG,IAAhB,KAAA1Z,OAAuBoT,EAAEuG,GAAzB,KAAA3Z,OAA+BoT,EAAEqF,GAAjC,KAAAzY,OAAuCoT,EAAEwC,IAC5CgE,OAAQxG,EAAEyG,UACPzG,IAkBPgF,GAAoBzR,aAAe,CAC/B7F,GAAI8F,IAAUC,QAoBHuR,UCvMF0B,GAAoB,EACpBC,GAFU,UAGVC,GAAsB,IAE7BC,eAiBF,SAAAA,IAAc,IAAAvS,EAAA,OAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4C,KAAA0V,IACVvS,EAAA/F,OAAAiG,EAAA,EAAAjG,CAAA4C,KAAA5C,OAAAkG,EAAA,EAAAlG,CAAAsY,GAAAnS,KAAAvD,QAEKwD,MAAQ,CACT6M,WAAW,EACXC,UAAW,IAAI1G,KACf2G,QAAS,IAAI3G,KACb+L,oBAAqB,GACrBC,WAAY,GACZrI,SAAU,GACVyG,UAAWwB,GACXK,UAAWN,GACXzB,YAAa,KACbgC,0BAA0B,EAC1BC,cAAe,KACfC,YAAa,KACbC,WAAYR,IAGhBtS,EAAK+S,MAAQ/S,EAAK+S,MAAMtS,KAAXxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACbA,EAAKyN,KAAOzN,EAAKyN,KAAKhN,KAAVxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAEZA,EAAK0N,kBAAoB1N,EAAK0N,kBAAkBjN,KAAvBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACzBA,EAAK2N,gBAAkB3N,EAAK2N,gBAAgBlN,KAArBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACvBA,EAAK4N,yBAA2B5N,EAAK4N,yBAAyBnN,KAA9BxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAChCA,EAAKgT,iBAAmBhT,EAAKgT,iBAAiBvS,KAAtBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACxBA,EAAKiT,kBAAoBjT,EAAKiT,kBAAkBxS,KAAvBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACzBA,EAAKkT,kBAAoBlT,EAAKkT,kBAAkBzS,KAAvBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACzBA,EAAKmT,sBAAwBnT,EAAKmT,sBAAsB1S,KAA3BxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAC7BA,EAAKoT,oBAAsBpT,EAAKoT,oBAAoB3S,KAAzBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAC3BA,EAAKqT,mBAAqBrT,EAAKqT,mBAAmB5S,KAAxBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAE1BA,EAAKsT,+BAAiCtT,EAAKsT,+BAA+B7S,KAApCxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAhC5BA,yFAsCYyI,GACtB,IAAMC,EAAY,GAElBzO,OAAOC,KAAKuO,GAAWtO,QAAQ,SAAAwO,GAEvBF,EAAUG,eAAeD,IACzB4J,EAAiBzJ,iBAAiBvQ,SAASoQ,KAE3CD,EAAUC,GAAYF,EAAUE,MAIpCD,IAAc,IACd7L,KAAKuE,SAASsH,mCAId,IAAA/H,EAAA9D,KACEkM,EAAMlM,KAAKqB,QAAQ9E,GAAGgN,IAAIC,SAChC,GAAIxJ,KAAKmR,cAAe,CACpBnR,KAAKqB,QAAQG,eAAe,CACxBS,UAAW,CACPC,SAAS,KAIjB,IAAMuH,EAAWc,GAAQC,UAAUK,iBAC7BiJ,EAAc9T,KAAK0W,oBAEzBxK,EAAIS,IAAJ,GAAAlR,OAAWgO,EAAX,KAAAhO,OAAuBqY,IAClBzP,KAAK,SAAAoN,GACF,GAAI3N,EAAKpC,gBAAiB,CACtB,IAAM6L,EAAWkE,EAASkF,cAAcpb,IACpCsY,GAAoBnC,+BAGlBC,EACFpE,GAAYA,EAAS1R,OAAS,EACxB,CACIgG,cAAc,GAElB,CACIA,cAAc,EACdC,aAAc,CACVC,KAAM6P,KACNhQ,QAAS1F,IAAKsB,EAAE,qBAIlCsG,EAAKzC,QAAQG,eAAbpE,OAAAoU,EAAA,EAAApU,CAAA,GACOuU,EADP,CAEI1P,UAAW,CACPC,SAAS,EACTqL,WACA8C,UAAW9C,GAAYA,EAAS1R,OAAS,EACzCiY,qBAKfpP,MAAM,SAAAjD,GACHqC,EAAKa,YAAYlD,kDAM7B,IAAMsS,EA/HS,YA+HW/T,KAAKwD,MAAMwQ,UAC/B4C,EAAa,GAAAnb,OAAA2B,OAAAoH,GAAA,EAAApH,CACZ4C,KAAKwD,MAAMoS,WAAWra,IAAI,SAAAyH,GAAE,YAAAvH,OAAUuH,MAD1B5F,OAAAoH,GAAA,EAAApH,CAEZ4C,KAAKwD,MAAMmS,oBAAoBpa,IAAI,SAAAyH,GAAE,YAAAvH,OAAUuH,MAFnC,cAAAvH,OAGFyU,GAA2BlQ,KAAKwD,MAAM8M,YAHpC,WAAA7U,OAIJyU,GAA2BlQ,KAAKwD,MAAM+M,UAJlC,aAAA9U,OAKFuE,KAAKwD,MAAMwQ,WALT,cAAAvY,OAMDuE,KAAKwD,MAAMyS,cAuB7B,OApBIlC,GACA6C,EAAcC,KAAd,aAAApb,OAAgCuE,KAAKwD,MAAMqS,YAG3C9B,GAAqB/T,KAAKwD,MAAMuS,eAChCa,EAAcC,KAAd,iBAAApb,OACqByU,GACblQ,KAAKwD,MAAMuS,iBAKnBhC,GAAqB/T,KAAKwD,MAAMwS,aAChCY,EAAcC,KAAd,eAAApb,OACmByU,GACXlQ,KAAKwD,MAAMwS,eAKhBY,EAAcE,KAAK,oCAI1B9W,KAAKuE,SAAS,CAAE8L,WAAW,EAAOyD,YAAa,OAC/C9T,KAAKqB,QAAQG,eAAe,CACxBS,UAAW,CAAEoO,WAAW,+CAIdzL,EAAOuL,GACrBnQ,KAAKuE,SAAS,CAAE+L,UAAW,IAAI1G,KAAKuG,6CAGxBvL,EAAOuL,GACnBnQ,KAAKuE,SAAS,CAAEgM,QAAS,IAAI3G,KAAKuG,mDAGhBvL,EAAOuL,GACzBnQ,KAAKuE,SAAS,CAAEwR,cAAe,IAAInM,KAAKuG,iDAGxBvL,EAAOuL,GACvBnQ,KAAKuE,SAAS,CAAEyR,YAAa,IAAIpM,KAAKuG,gDAGvBvL,EAAOC,EAAOC,GAC7B9E,KAAKuE,SAAS,CAAE0R,WAAYnR,2DAGDF,EAAOC,EAAOC,IACrB9E,KAAKwD,MAAMsS,yBAG3B9V,KAAKuE,SAAS,CACVuR,0BAA0B,IAG9B9V,KAAKuE,SAAS,CACVuR,0BAA0B,EAE1BC,cAAe,KACfC,YAAa,wDAKAL,GACrB3V,KAAKuE,SAAS,CAAEoR,iEAGH/Q,GAGb,IAFA,IAAMgR,EAAa,GACbmB,EAAkBnS,EAAMqD,OAAO8O,gBAC5BC,EAAI,EAAGA,EAAID,EAAgBlb,OAAQmb,IACxCpB,EAAWiB,KAAKE,EAAgBC,GAAGlS,OAEvC9E,KAAKuE,SAAS,CAAEqR,yDAGFhR,EAAOC,EAAOC,GAC5B9E,KAAKuE,SAAS,CAAEsR,UAAW/Q,8CAGbF,EAAOC,EAAOC,GAC5B9E,KAAKuE,SAAS,CAAEyP,UAAWlP,0CAoD3B,OACI9E,KAAKwD,MAAM8M,WACXtQ,KAAKwD,MAAM+M,SACXvQ,KAAKwD,MAAMmS,qBACX3V,KAAKwD,MAAMmS,oBAAoB9Z,OAAS,GACxCmE,KAAKwD,MAAMqS,WACX7V,KAAKwD,MAAMoS,YACX5V,KAAKwD,MAAMoS,WAAW/Z,OAAS,6CAKnC,OAAQmE,KAAKmR,eAAiBnR,KAAKwD,MAAMtB,+CAIzC,OACIlC,KAAKwD,MAAM6M,WACXrQ,KAAKwD,MAAM+J,UACXvN,KAAKwD,MAAM+J,SAAS1R,QAAU0O,GAAQU,QAAQC,SAASC,qDAK3D,OACIzL,EAAAC,EAAAC,cAACoF,GAAArF,EAAD,CACIqD,GAAG,YACHL,MAAOkL,GAAatF,UACpBtD,kBAAmB/I,IAAKsB,EAAE,aAC1BmG,SAAU3D,KAAKoW,kBACftR,MAAO9E,KAAKwD,MAAMqS,WAElBnW,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,EAAKM,YAAY,QAClC1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,IAAKM,YAAY,QAClC1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,EAAKM,YAAY,QAClC1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,IAAKM,YAAY,QAClC1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,EAAGM,YAAY,QAChC1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,IAAKM,YAAY,QAClC1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,EAAGM,YAAY,QAChC1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,IAAKM,YAAY,QAClC1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,EAAGM,YAAY,sDAKvB,IACT0Q,EAA6B9V,KAAKwD,MAAlCsS,yBACFmB,EAAcnB,EACd5Z,IAAKsB,EAAE,wBACPtB,IAAKsB,EAAE,wBAEb,OACIkC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuX,SAAA,KACIxX,EAAAC,EAAAC,cAACuX,GAAAxX,EAAD,CACIyX,WAAS,EACT1W,MAAOuW,EACPjK,QAAShN,KAAKyW,+BACd9T,MAAO,CAAE0U,UAAW,UAEvBvB,GACGpW,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuX,SAAA,KACIxX,EAAAC,EAAAC,cAACwS,GAAAzS,EAAD,CACIqD,GAAG,kBACHqP,eAAgBxE,GAAatF,UAC7BtD,kBAAmB/I,IAAKsB,EAAE,mBAC1BmG,SAAU3D,KAAKsW,sBACf/D,QAASvS,KAAKwD,MAAMwS,YACpBlR,MAAO9E,KAAKwD,MAAMuS,gBAEtBrW,EAAAC,EAAAC,cAACwS,GAAAzS,EAAD,CACIqD,GAAG,gBACHqP,eAAgBxE,GAAatF,UAC7BtD,kBAAmB/I,IAAKsB,EAAE,iBAC1BmG,SAAU3D,KAAKuW,oBACf/D,QAASxS,KAAKwD,MAAMuS,cACpBjR,MAAO9E,KAAKwD,MAAMwS,iDAStC,OACItW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAWuN,KAAc9T,YACzBmG,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACIsK,QAAShN,KAAK4Q,KACdjO,MAAO,CACHC,QAAS5C,KAAKwD,MAAM6M,UAAY,SAAW,SAG/C3Q,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAU5C,UAAW,kBAArB,eAIH5D,IAAKsB,EAAE,qBACRkC,EAAAC,EAAAC,cAACkS,GAAD,CACInK,eAAgBoK,GACZ/R,KAAKC,MAAMsB,eAIvB7B,EAAAC,EAAAC,cAACoS,GAAD,CAAUnP,KAAM7C,KAAKiS,iBACrBvS,EAAAC,EAAAC,cAACsS,GAAA,KAAD,KAEIxS,EAAAC,EAAAC,cAACsS,GAAA,SAAD,CACIvP,MAAO,CACHC,QAAU5C,KAAKwD,MAAM6M,UAAsB,OAAV,UAGrC3Q,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OACIoD,GAAG,sBACHlD,UAAWM,KACP,WACAiN,KAAcpU,UAGlByG,EAAAC,EAAAC,cAAA,OAAKE,UAAWuN,KAAczT,WACzBsC,IAAKsB,EAAE,aAEZkC,EAAAC,EAAAC,cAAC0X,GAAD,CACI3T,SAAU3D,KAAKmW,oBAGvBzW,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACP,WACAiN,KAAcpU,UAGlByG,EAAAC,EAAAC,cAAA,OAAKE,UAAWuN,KAAczT,WACzBsC,IAAKsB,EAAE,uBAEZkC,EAAAC,EAAAC,cAACuS,GAAD,CACItL,aAAW,EACXlD,SAAU3D,KAAK+Q,4BAGvBrR,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACP,WACAiN,KAAcpU,UAGlByG,EAAAC,EAAAC,cAACwS,GAAAzS,EAAD,CACIqD,GAAG,aACHqP,eAAgBxE,GAAatF,UAC7BtD,kBAAmB/I,IAAKsB,EAAE,cAC1BmG,SAAU3D,KAAK6Q,kBACfyB,YAAa,IAAI1I,KACjB2I,QAASvS,KAAKwD,MAAM+M,QACpBzL,MAAO9E,KAAKwD,MAAM8M,YAEtB5Q,EAAAC,EAAAC,cAACwS,GAAAzS,EAAD,CACIqD,GAAG,WACHqP,eAAgBxE,GAAatF,UAC7BtD,kBAAmB/I,IAAKsB,EAAE,YAC1BmG,SAAU3D,KAAK8Q,gBACfwB,YAAa,IAAI1I,KACjB4I,QAASxS,KAAKwD,MAAM8M,UACpBxL,MAAO9E,KAAKwD,MAAM+M,UAEtB7Q,EAAAC,EAAAC,cAACoF,GAAArF,EAAD,CACIqD,GAAG,YACHL,MAAOkL,GAAatF,UACpBtD,kBAAmB/I,IAAKsB,EAAE,aAC1BmG,SAAU3D,KAAKqW,kBACfvR,MAAO9E,KAAKwD,MAAMwQ,WAElBtU,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CACImF,MAAM,UACNM,YAAY,YAEhB1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CACImF,MAAM,UACNM,YAAY,oBApc7B,YAucUpF,KAAKwD,MAAMwQ,WACRhU,KAAKuX,uBACT7X,EAAAC,EAAAC,cAACoF,GAAArF,EAAD,CACIqD,GAAG,cACHL,MAAOkL,GAAatF,UACpBtD,kBAAmB/I,IAAKsB,EAAE,eAC1BmG,SAAU3D,KAAKwW,mBACf1R,MAAO9E,KAAKwD,MAAMyS,YAElBvW,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,IAAKM,YAAY,QAClC1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,IAAKM,YAAY,QAClC1F,EAAAC,EAAAC,cAACuF,GAAAxF,EAAD,CAAUmF,MAAO,IAAKM,YAAY,SAld/C,YAodUpF,KAAKwD,MAAMwQ,WACRhU,KAAKwX,uBAGjB9X,EAAAC,EAAAC,cAACiT,GAAAlT,EAAD,CACIqD,GAAG,wBACHlD,UAAWuN,KAAcnU,WACzB6T,SAAO,EACPrM,MAAOxE,IAAKsB,EAAE,SACdwP,QAAShN,KAAKkW,MACdpD,SAAU9S,KAAK+S,sBAItB/S,KAAKwD,MAAM6M,WAAarQ,KAAKwD,MAAMsQ,aAChCpU,EAAAC,EAAAC,cAACsS,GAAA,SAAD,CAAUlP,GAAG,iBACTtD,EAAAC,EAAAC,cAAC6X,GAAD,CACIzD,UAAWhU,KAAKwD,MAAMwQ,UACtBF,YAAa9T,KAAKwD,MAAMsQ,YACxBvG,SAAUvN,KAAKwD,MAAM+J,qBAletBpM,IAAzBuU,GACKzJ,iBAAmB,CACtB,YACA,YACA,UACA,sBACA,aACA,WACA,YACA,UACA,cACA,2BACA,gBACA,cACA,cA+dOyJ,+BChfTgC,eAsDF,SAAAA,IAAc,IAAAvU,EAAA,OAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4C,KAAA0X,IACVvU,EAAA/F,OAAAiG,EAAA,EAAAjG,CAAA4C,KAAA5C,OAAAkG,EAAA,EAAAlG,CAAAsa,GAAAnU,KAAAvD,QAEKwD,MAAQ,CACTmU,aAAa,EACbC,QAAS,MAGbzU,EAAK0U,SAAW1U,EAAK0U,SAASjU,KAAdxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAChBA,EAAK2U,mBAAqB3U,EAAK2U,mBAAmBlU,KAAxBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAThBA,uFAXY4U,EAAUC,GAChC,OACID,EAASvL,yBACLwL,EAASxL,wBACbuL,EAAShD,wBAA0BiD,EAASjD,uBAC5CgD,EAASzL,WAAa0L,EAAS1L,UAC/ByL,EAASxL,qBAAuByL,EAASzL,oBACzCwL,EAAS9C,gBAAkB+C,EAAS/C,kEAkBxC,IADA,IAAMgD,EAAc,GACXjB,EAAI,EAAGA,EAAIhX,KAAKC,MAAMsN,SAAS1R,OAAQmb,IAAK,CACjD,IAAMnI,EAAI7O,KAAKC,MAAMsN,SAASyJ,GAC1BnI,EAAEwG,QACF4C,EAAYpB,KACRa,EAAsBQ,kCAAkCrJ,IAKpE7O,KAAKC,MAAM4X,SAASI,gDAIpBjY,KAAKuE,SAAS,CAAEoT,aAAa,2CAGlBlK,GACXzN,KAAKC,MAAMkY,eAAe1K,uCAGlBA,GACJA,EAAQmK,SACR5X,KAAKuE,SAAS,CACVoT,aAAa,EACbC,QAASnK,EAAQmK,2CAKpB,IAAA9T,EAAA9D,KACDoY,GAAa,EAEXC,EAAuB,CACzB3Y,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACIhC,MAAOxE,IAAKsB,EAAE,SACduP,SAAO,EACPC,QAAShN,KAAK8X,sBAKhB/I,EAAO/O,KAAKC,MAAMsN,SAAShS,IAAI,SAAAkS,GAWjC,OAFA2K,IAAa3K,EAAQ4H,QAAgB+C,EAGjC1Y,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAUnF,IAAKkQ,EAAQlQ,KACnBmC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KAAiB+K,EAAQ6K,aACzB5Y,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KAAiB+K,EAAQuB,cACzBtP,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KAAiB+K,EAAQyB,QACzBxP,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAcjU,OACrCsG,EAAAC,EAAAC,cAAC+N,GAAD,CAAiB7I,MAAO2I,EAAQ8K,OAEpC7Y,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAcjU,OACrCsG,EAAAC,EAAAC,cAAC+N,GAAD,CAAiB7I,MAAO2I,EAAQ3I,SAEpCpF,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAcjU,OACrCsG,EAAAC,EAAAC,cAAC+N,GAAD,CAAiB7I,MAAO2I,EAAQ+K,OAEpC9Y,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAc/T,YACrCoG,EAAAC,EAAAC,cAAA,QAAME,UAAWuN,KAAcxT,iBAC3B6F,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACImP,QAASpE,EAAQ4H,OACjBzC,QA5BG,WACnB9O,EAAK2U,eAAehL,IA4BJ7F,UAAWiG,GAAapF,cAIpC/I,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAgB5C,UAAWuN,KAAchU,QACpCoU,EAAQmK,SACLlY,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAYnF,IAAKkQ,EAAQlQ,IAAKyP,QA/B1B,WAChBlJ,EAAK6T,YAAYlK,KA+BD/N,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACI5C,UAAW,iBACX6C,MAAOkL,GAAalF,aAFxB,sBAaxB,OACIjJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACIqL,MAAO7R,IAAKsB,EAAE,WACdwQ,QAASqK,EACTpK,OAAO,EACPC,KAAMlO,KAAKwD,MAAMmU,YACjBxJ,eAAgBnO,KAAK8X,oBAErBpY,EAAAC,EAAAC,cAAA,OAAKoD,GAAI,mBAAoBhD,KAAKwD,MAAMoU,UAE5ClY,EAAAC,EAAAC,cAAA,OAAKE,UAAWuN,KAAc7T,YAC1BkG,EAAAC,EAAAC,cAAC4P,GAAD,CAAY/F,SAAUc,GAAQC,UAAUQ,kBAE5CtL,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACI+M,YAAY,EACZ3P,UAAWM,KACPiN,KAAclU,SACdkH,KAAO1F,wBAGX+E,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACImN,kBAAkB,EAClBC,mBAAmB,EACnBC,iBAAiB,GAEjBrQ,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACIhD,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACKxG,IAAKsB,EAAE,iBAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACKxG,IAAKsB,EAAE,sBAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,KACKxG,IAAKsB,EAAE,WAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAcjU,OACvC8C,IAAKsB,EAAE,QAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAcjU,OACvC8C,IAAKsB,EAAE,UAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAcjU,OACvC8C,IAAKsB,EAAE,QAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAchU,QACvC6C,IAAKsB,EAAE,aAEZkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAmB5C,UAAWuN,KAAchU,QACvC6C,IAAKsB,EAAE,cAIpBkC,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAWsN,oBAAoB,EAAOC,aAAa,GAC9ClB,IAGTrP,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACPiN,KAAc5T,WACd4T,KAAc3T,eAGlBgG,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACIM,GAAG,kBACH+J,SAAO,EACP+F,SAAU9S,KAAKC,MAAMiC,UAAYkW,EACjC1X,MAAOxE,IAAKsB,EAAE,YACdwP,QAAShN,KAAK6X,WAElBnY,EAAAC,EAAAC,cAAC4P,GAAD,CAAY/F,SAAUc,GAAQC,UAAUQ,0BArOxB7I,aAA9BuV,GAQKtV,aAAe,CAClB7F,GAAI8F,IAAUC,QAThBoV,GAYKzE,mBAAqB,SAAApE,GAAC,SAAApT,OACtBoT,EAAErC,uBADoB,KAAA/Q,OACMoT,EAAEkG,sBADR,KAAAtZ,OACiCoT,EAAEvC,SADnC,KAAA7Q,OAErBoT,EAAEmG,SAFmB,KAAAvZ,OAGrBoT,EAAEoG,gBAfRyC,GAiBKhG,8BAAgC,SAAA7C,GAAC,MAAK,CACzCtR,IAAKma,GAAsBzE,mBAAmBpE,GAC9CrC,uBAAwBqC,EAAErC,uBAC1BuI,sBAAuBlG,EAAEkG,sBACzBzI,SAAUuC,EAAEvC,SACZC,mBAAoBsC,EAAEmG,SACtBC,cAAepG,EAAEoG,cACjBqD,YAAazJ,EAAE6J,gBACf1J,aAAcH,EAAE8J,WAChBzJ,OAAQL,EAAEK,OAAOxB,KACjB6K,IAAK1J,EAAE0J,IACPC,IAAK3J,EAAE2J,IACP1T,MAAO8I,OAAOgL,WAAW/J,EAAE/J,MAAO,IAClCuQ,QAASxG,EAAEgK,SACXjB,QAAS/I,EAAE+I,UA/BbF,GAkCKQ,kCAAoC,SAAArJ,GAAC,MAAK,CAC7CoG,cAAepG,EAAEoG,cACjB3I,SAAUuC,EAAEvC,SACZC,mBAAoBsC,EAAEtC,mBACtBwI,sBAAuBlG,EAAEkG,sBACzBvI,uBAAwBqC,EAAErC,uBAC1BqM,UAAU,IAoMHnB,UCjPToB,eAWF,SAAAA,IAAc,IAAA3V,EAAA,OAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4C,KAAA8Y,IACV3V,EAAA/F,OAAAiG,EAAA,EAAAjG,CAAA4C,KAAA5C,OAAAkG,EAAA,EAAAlG,CAAA0b,GAAAvV,KAAAvD,QAEKwD,MAAQ,CACT6M,WAAW,EACXC,UAAW,IAAI1G,KACf2G,QAAS,IAAI3G,KACb2C,mBAAoB,KACpBqJ,WAAY,GACZrI,SAAU,GACVrL,SAAS,GAGbiB,EAAK4V,gBAAkB5V,EAAK4V,gBAAgBnV,KAArBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACvBA,EAAKyN,KAAOzN,EAAKyN,KAAKhN,KAAVxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAEZA,EAAK0N,kBAAoB1N,EAAK0N,kBAAkBjN,KAAvBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACzBA,EAAK2N,gBAAkB3N,EAAK2N,gBAAgBlN,KAArBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACvBA,EAAK4N,yBAA2B5N,EAAK4N,yBAAyBnN,KAA9BxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAChCA,EAAKgT,iBAAmBhT,EAAKgT,iBAAiBvS,KAAtBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACxBA,EAAKgV,eAAiBhV,EAAKgV,eAAevU,KAApBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IACtBA,EAAK0U,SAAW1U,EAAK0U,SAASjU,KAAdxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IArBNA,yFAwBYyI,GACtB,IAAMC,EAAY,GAElBzO,OAAOC,KAAKuO,GAAWtO,QAAQ,SAAAwO,GAEvBF,EAAUG,eAAeD,IACzBgN,EAAiB7M,iBAAiBvQ,SAASoQ,KAE3CD,EAAUC,GAAYF,EAAUE,MAIpCD,IAAc,IACd7L,KAAKuE,SAASsH,6CAIJ,IAAA/H,EAAA9D,KACRkM,EAAMlM,KAAKqB,QAAQ9E,GAAGgN,IAAIC,SAChC,GAAIxJ,KAAKmR,cAAe,CACpBnR,KAAKqB,QAAQG,eAAe,CACxBS,UAAW,CACPC,SAAS,KAIjB,IAAMkP,EAAU,CACZd,UAAWJ,GAA2BlQ,KAAKwD,MAAM8M,WACjDC,QAASL,GAA2BlQ,KAAKwD,MAAM+M,SAC/Cc,GAAIrR,KAAKwD,MAAM+I,mBACfyM,GAAIhZ,KAAKwD,MAAMoS,YAGnB1J,EAAIqF,KAAKhH,GAAQC,UAAUM,gBAAiBsG,GACvC/M,KAAK,SAAAoN,GACF,GAAI3N,EAAKpC,gBAAiB,CACtB,IAAM6L,EAAWkE,EAASlW,IACtBmc,GAAsBhG,+BAGpBC,EACFpE,GAAYA,EAAS1R,OAAS,EACxB,CACIgG,cAAc,GAElB,CACIA,cAAc,EACdC,aAAc,CACVC,KAAM6P,KACNhQ,QAAS1F,IAAKsB,EAAE,qBAIlCsG,EAAKzC,QAAQG,eAAbpE,OAAAoU,EAAA,EAAApU,CAAA,GACOuU,EADP,CAEI1P,UAAW,CACPC,SAAS,EACTqL,WACA8C,UAAW9C,GAAYA,EAAS1R,OAAS,SAKxD6I,MAAM,WACHZ,EAAKa,gDAMjB3E,KAAKuE,SAAS,CAAE8L,WAAW,IAC3BrQ,KAAKqB,QAAQG,eAAe,CACxBS,UAAW,CAAEoO,WAAW,+CAIdzL,EAAOuL,GACrBnQ,KAAKuE,SAAS,CAAE+L,UAAW,IAAI1G,KAAKuG,6CAGxBvL,EAAOuL,GACnBnQ,KAAKuE,SAAS,CAAEgM,QAAS,IAAI3G,KAAKuG,sDAGb5D,GACrBvM,KAAKuE,SAAS,CAAEgI,gEAGH3H,GAGb,IAFA,IAAMgR,EAAa,GACbmB,EAAkBnS,EAAMqD,OAAO8O,gBAC5BC,EAAI,EAAGA,EAAID,EAAgBlb,OAAQmb,IACxCpB,EAAWiB,KAAKE,EAAgBC,GAAGlS,OAEvC9E,KAAKuE,SAAS,CAAEqR,sDAGLnI,GAEX,IADA,IAAMF,EAAWvN,KAAKwD,MAAM+J,SACnByJ,EAAI,EAAGA,EAAIzJ,EAAS1R,OAAQmb,IAAK,CACtC,IAAMiC,EAAiB1L,EAASyJ,GAChC,GAAIiC,EAAe1b,MAAQkQ,EAAQlQ,IAAK,CACpC0b,EAAe5D,QAAU4D,EAAe5D,OACxC9H,EAASyJ,GAAKiC,EACdjZ,KAAKuE,SAAS,CAAEgJ,aAChB,yCAKH0K,GAAa,IAAAtR,EAAA3G,KACZkM,EAAMlM,KAAKqB,QAAQ9E,GAAGgN,IAAIC,SAChCxJ,KAAKqB,QAAQG,eAAe,CACxBS,UAAW,CACPC,SAAS,KAIjBgK,EAAIqF,KAAKhH,GAAQC,UAAUO,cAAe,CACtCmO,UAAWjB,IAEV5T,KAAK,WACF,GAAIsC,EAAKjF,gBAAiB,CAEtB,IAAM6L,EAAW5G,EAAKnD,MAAM+J,SAAS5R,OAAO,SAAA8R,GACxC,IAAK,IAAI0L,EAAI,EAAGA,EAAIlB,EAAYpc,OAAQsd,IAAK,CACzC,IAAMtB,EAAWI,EAAYkB,GAC7B,GACIzB,GAAsB0B,mBAClB3L,EACAoK,GAGJ,OAAO,EAIf,OAAO,IAGXlR,EAAKtF,QAAQG,eAAe,CACxBK,cAAc,EACdC,aAAc,CACVC,KAAM6P,KACNhQ,QAAS1F,IAAKsB,EAAE,kBAEpByE,UAAW,CACPC,SAAS,EACTqL,iBAKf7I,MAAM,WACHiC,EAAKhC,sDAKb,OACI3E,KAAKwD,MAAM8M,WACXtQ,KAAKwD,MAAM+M,SACXvQ,KAAKwD,MAAM+I,oBACXvM,KAAKwD,MAAMoS,YACX5V,KAAKwD,MAAMoS,WAAW/Z,OAAS,6CAKnC,OAAQmE,KAAKmR,eAAiBnR,KAAKwD,MAAMtB,+CAIzC,OACIlC,KAAKwD,MAAM6M,WACXrQ,KAAKwD,MAAM+J,UACXvN,KAAKwD,MAAM+J,SAAS1R,QAAU0O,GAAQU,QAAQC,SAASC,uCAK3D,OACIzL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAWuN,KAAc9T,YACzBmG,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CACIsK,QAAShN,KAAK4Q,KACdjO,MAAO,CACHC,QAAS5C,KAAKwD,MAAM6M,UAAY,SAAW,SAG/C3Q,EAAAC,EAAAC,cAAC8C,GAAA,EAAD,CAAU5C,UAAW,kBAArB,eAIJJ,EAAAC,EAAAC,cAAA,YAAO1D,IAAKsB,EAAE,uBACdkC,EAAAC,EAAAC,cAACkS,GAAD,CACInK,eAAgBoK,GACZ/R,KAAKC,MAAMsB,eAIvB7B,EAAAC,EAAAC,cAACoS,GAAD,CAAUnP,KAAM7C,KAAKiS,iBACrBvS,EAAAC,EAAAC,cAACsS,GAAA,KAAD,KAEIxS,EAAAC,EAAAC,cAACsS,GAAA,SAAD,CACIvP,MAAO,CACHC,QAAU5C,KAAKwD,MAAM6M,UAAsB,OAAV,UAGrC3Q,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OACIoD,GAAG,sBACHlD,UAAWM,KACP,WACAiN,KAAcpU,UAGlByG,EAAAC,EAAAC,cAAA,OAAKE,UAAWuN,KAAczT,WACzBsC,IAAKsB,EAAE,aAEZkC,EAAAC,EAAAC,cAAC0X,GAAD,CACI3T,SAAU3D,KAAKmW,oBAGvBzW,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACP,WACAiN,KAAcpU,UAGlByG,EAAAC,EAAAC,cAAA,OAAKE,UAAWuN,KAAczT,WACzBsC,IAAKsB,EAAE,6BAEZkC,EAAAC,EAAAC,cAACuS,GAAD,CACIxO,SAAU3D,KAAK+Q,4BAGvBrR,EAAAC,EAAAC,cAAA,OACIE,UAAWM,KACP,WACAiN,KAAcpU,UAGlByG,EAAAC,EAAAC,cAACwS,GAAAzS,EAAD,CACIqD,GAAG,aACHqP,eAAgBxE,GAAatF,UAC7BtD,kBAAmB/I,IAAKsB,EAAE,cAC1BmG,SAAU3D,KAAK6Q,kBACfyB,YAAa,IAAI1I,KACjB2I,QAASvS,KAAKwD,MAAM+M,QACpBzL,MAAO9E,KAAKwD,MAAM8M,YAEtB5Q,EAAAC,EAAAC,cAACwS,GAAAzS,EAAD,CACIqD,GAAG,WACHqP,eAAgBxE,GAAatF,UAC7BtD,kBAAmB/I,IAAKsB,EAAE,YAC1BmG,SAAU3D,KAAK8Q,gBACfwB,YAAa,IAAI1I,KACjB4I,QAASxS,KAAKwD,MAAM8M,UACpBxL,MAAO9E,KAAKwD,MAAM+M,YAI9B7Q,EAAAC,EAAAC,cAACiT,GAAAlT,EAAD,CACIqD,GAAG,wBACHlD,UAAWuN,KAAcnU,WACzB6T,SAAO,EACPrM,MAAOxE,IAAKsB,EAAE,aACdwP,QAAShN,KAAK+Y,gBACdjG,SAAU9S,KAAK+S,sBAIvBrT,EAAAC,EAAAC,cAACsS,GAAA,SAAD,CACIlP,GAAG,gBACHL,MAAO,CACHC,QAAS5C,KAAKwD,MAAM6M,UAAY,QAAU,SAG9C3Q,EAAAC,EAAAC,cAACyZ,GAAD,CACI9L,SAAUvN,KAAKwD,MAAM+J,SACrB4K,eAAgBnY,KAAKmY,eACrBN,SAAU7X,KAAK6X,SACf3V,QAASlC,KAAKwD,MAAMtB,oBA9TjBf,IAAzB2X,GACK7M,iBAAmB,CACtB,YACA,YACA,UACA,qBACA,aACA,WACA,WA+TO6M,ICnVFQ,GAAW,CACpB,CACI/b,IAN6C,0BAO7C2C,KAAM,6BACNqZ,UAAWvN,GACXvL,KAAM,CACFC,MAAO,2BACPG,KAAM,WACNE,YACI,4FACJE,WAAY,iBACZuY,KAAM,6BAGd,CACIjc,IAlBqC,mBAmBrC2C,KAAM,qBACNqZ,UAAW7D,GACXjV,KAAM,CACFC,MAAO,oBACPG,KAAM,aACNE,YACI,4IACJE,WAAY,UACZuY,KAAM,sBAGd,CACIjc,IA9BsC,mBA+BtC2C,KAAM,sBACNqZ,UDqTOT,GCpTPrY,KAAM,CACFC,MAAO,qBACPG,KAAM,cACNE,YACI,uFACJE,WAAY,mBACZuY,KAAM,wBAKLzH,GAAuB,SAAAxQ,GAChC,IAAK,IAAIyV,EAAI,EAAGA,EAAIsC,GAASzd,OAAQmb,IAAK,CACtC,IAAM/d,EAAUqgB,GAAStC,GACzB,GAAI/d,EAAQsE,MAAQgE,EAChB,OAAOtI,EAAQwH,KAAK+Y,KAI5B,MAAO,IChCIC,GApBF,WACT,IAAMC,EAAeJ,GAAS/d,IAAI,SAAAtC,GAAO,OACrCyG,EAAAC,EAAAC,cAAA,OACIrC,IAAKtE,EAAQsE,IACbuC,UAAWM,KACP,8BACAC,KAAO/F,gBAGXoF,EAAAC,EAAAC,cAAC+Z,GAAD,CAAapc,IAAKtE,EAAQsE,IAAKtE,QAASA,OAIhD,OACIyG,EAAAC,EAAAC,cAAA,OAAKoD,GAAG,eAAelD,UAAU,OAC5B4Z,ICFEE,oLAVP,OACIla,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BACiBF,EAAAC,EAAAC,cAAA,YAAOI,KAAKC,MAAM4Z,SAASC,mBATtC5Y,iBCIhB6Y,GAAY,SAAAvT,GAAmB,IAAhBvE,EAAgBuE,EAAhBvE,UACX+X,EAASV,GAAS/d,IAAI,SAAAtC,GAKxB,OACIyG,EAAAC,EAAAC,cAACqa,EAAA,EAAD,CACI1c,IAAKtE,EAAQsE,IACb2c,OAAK,EACLha,KAAMjH,EAAQiH,KACdia,OATY,WAChB,IAAMhZ,EAAOlI,EAAQsgB,UACrB,OAAO7Z,EAAAC,EAAAC,cAACuB,EAAD/D,OAAAK,OAAA,CAAM8D,WAAYtI,EAAQsE,KAAS0E,SAoBlD,OALA+X,EAAOnD,KAAKnX,EAAAC,EAAAC,cAACqa,EAAA,EAAD,CAAO1c,IAAI,OAAO2c,OAAK,EAACha,KAAK,IAAIia,OAFrB,kBAAMza,EAAAC,EAAAC,cAACwa,GAAD,CAAM7Y,WAAW,aAK/CyY,EAAOnD,KAAKnX,EAAAC,EAAAC,cAACqa,EAAA,EAAD,CAAO1c,IAAI,iBAAiBgc,UAAWK,MAG/Cla,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACqa,EAAA,EAAD,KAASD,KASrBD,GAAU1U,aAAe,CACrBpD,UAAW,IAGA8X,8BC/BTM,eAYF,SAAAA,EAAYpa,GAAO,IAAAkD,EAAA,OAAA/F,OAAAgG,EAAA,EAAAhG,CAAA4C,KAAAqa,IACflX,EAAA/F,OAAAiG,EAAA,EAAAjG,CAAA4C,KAAA5C,OAAAkG,EAAA,EAAAlG,CAAAid,GAAA9W,KAAAvD,KAAMC,KAEDuD,MAAQ,CACTlC,eAAgB,GAChBO,cAAc,EACdC,aAAc,CACVC,KAAM,GACNH,QAAS,IAEbK,UAAW,IAGfkB,EAAK3B,eAAiB2B,EAAK3B,eAAeoC,KAApBxG,OAAAyG,EAAA,EAAAzG,CAAA+F,IAbPA,iFAiBf,MAAO,CACH5G,GAAIyD,KAAKC,MAAM1D,GACfsF,aAAc7B,KAAKwD,MAAM3B,aACzBC,aAAc9B,KAAKwD,MAAM1B,aACzBR,eAAgBtB,KAAKwD,MAAMlC,eAC3BE,eAAgBxB,KAAKwB,uDAId8Y,GAEPA,EAAShZ,iBACRgZ,EAASrY,WACVjC,KAAKwD,MAAMlC,iBAAmBgZ,EAAShZ,eAGvCtB,KAAKuE,SAALnH,OAAAoU,EAAA,EAAApU,CAAA,GAAmBkd,EAAnB,CAA6BrY,UAAW,GAAIJ,cAAc,KAE1D7B,KAAKuE,SAAS+V,oCAKlB,IACMC,EAAqBjB,GAAS/d,IAAI,SAAAtC,GAAO,OAC3CmE,OAAOK,OAAOxE,EAAS,CACnB4H,KAAM5H,EAAQwH,KAAKI,KACnBH,MAAOxE,GAAKsB,EAAEvE,EAAQwH,KAAKC,OAC3B8Z,iBAAkB9a,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,GAAI9G,EAAQiH,WAItCua,EAAkBza,KAAKwD,MAAMvB,UAAUC,QACzCxC,EAAAC,EAAAC,cAAA,OAAKE,UAAWO,KAAOqa,UACnBhb,EAAAC,EAAAC,cAAC+a,EAAA,EAAD,OAGJjb,EAAAC,EAAAC,cAACgb,EAAA,EAAD,CACI/X,KAAM7C,KAAKwD,MAAM3B,aACjBgZ,KAAM7a,KAAKwD,MAAM1B,eAInBgZ,EACF9a,KAAKwD,MAAMvB,WAAajC,KAAKwD,MAAMvB,UAAUoO,UAC3C0K,EAA0BD,EAC1Bza,KAAO2a,uBACP3a,KAAO4a,eAEb,OACIvb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsb,EAAA,EAAD,CAAWC,QAASjf,GAAKsB,EAAE,mBACzBsd,GACEpb,EAAAC,EAAAC,cAACwb,EAAA,EAAD,CACI9B,SAAUiB,EACVjZ,eAAgBtB,KAAKwD,MAAMlC,eAC3B+Z,gBAjCW,kBAAM,QAoCzB3b,EAAAC,EAAAC,cAAA,OAAKE,UAAWib,GACZrb,EAAAC,EAAAC,cAAA,OAAKE,UAAWO,KAAOib,aACnB5b,EAAAC,EAAAC,cAAC2b,GAAD,CAAWtZ,UAAWjC,KAAKwD,MAAMvB,cAGzCvC,EAAAC,EAAAC,cAAA,OAAKoD,GAAG,qBAAqByX,WA7F3BvZ,iBAAZmZ,GACKmB,kBAAoB,CACvBjf,GAAI8F,IAAUC,OACdT,aAAcQ,IAAUoZ,KACxB3Z,aAAcO,IAAUqZ,MAAM,CAC1B3Z,KAAMM,IAAUE,OAChBX,QAASS,IAAUE,SAEvBjB,eAAgBe,IAAUE,OAC1Bf,eAAgBa,IAAUG,MA0FnB6X,oECpGTsB,GAAQ,CACVC,QAASC,KACTC,WAAY,qBACZC,QAAS,CACLC,cAAe,UACfC,cAAeC,WACfC,cAAeC,WACfC,aAAcC,aACdC,aAAcC,WACdC,aAAcC,cACdC,UAAWC,aACXC,mBAAoBC,SACpBC,YAAaD,SACbE,YAAaC,WACbC,cAAeC,gBAAKP,aAAW,MAMxBQ,GAFEC,KAAY1B,ICpBT1U,QACa,cAA7BqW,OAAOzD,SAAS0D,UAEiB,UAA7BD,OAAOzD,SAAS0D,UAEhBD,OAAOzD,SAAS0D,SAASC,MACrB,4FCHZC,IAAIC,SACwCD,IAAIE,OAAOC,MAGvD,IAAMC,GAAeC,YAAWzD,IAC1B/Q,GAAO,GAAA7N,OAAMsiB,KAAN,SAAAtiB,OACTsiB,MAEEC,GAAU,CAAC,mBAAoB,UAAW,uBAE1CC,GAAS,CACX3U,QAASyU,KACTG,WAAYH,MAGV5D,GAAS,SAAA5d,GAAE,OACb4hB,IAAShE,OACLza,EAAAC,EAAAC,cAACwe,GAAA,EAAD,CAAUH,OAAQA,IACdve,EAAAC,EAAAC,cAACS,GAAA,iBAAD,CAAkB+c,SAAUiB,IACxB3e,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0e,GAAA,EAAD,MACA5e,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACie,GAAD,CAActhB,GAAIA,QAKlCR,SAASwiB,eAAe,WAGrB,eAAA/X,EAAApJ,OAAAohB,EAAA,EAAAphB,CAAAqhB,EAAA9e,EAAA+e,KAAG,SAAAC,IAAA,IAAApiB,EAAAtB,EAAA2jB,EAAA,OAAAH,EAAA9e,EAAAkf,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOC,eAAK,CAAE3V,WAAS0U,aADvB,cACJzhB,EADIuiB,EAAAI,KAAAJ,EAAAE,KAAA,EAEiBG,4BAFjB,OAEJlkB,EAFI6jB,EAAAI,KAGJN,EAAW3jB,EAAaE,YAE9B+N,eAAekW,QAAQ,WAAYR,GAAY,MAC/CtiB,EAAuBC,GACvBvB,EAAWC,GACXkf,GAAO5d,GARG,yBAAAuiB,EAAAO,SAAAV,MAAH,yBAAAnY,EAAA8Y,MAAAtf,KAAAuf,aAAA,EAWXrJ,GD0EQ,kBAAmBsJ,WACnBA,UAAUC,cAAcC,MAAMrb,KAAK,SAAAsb,GAC/BA,EAAaC,mCEnIzB7mB,EAAAC,QAAA,CAAkBsH,YAAA,iCAAAC,aAAA,kCAAAC,qBAAA,0CAAAI,SAAA,8BAAAE,gBAAA,qCAAAE,eAAA,yDCAlBjI,EAAAC,QAAA,CAAkBsiB,YAAA,yBAAAL,eAAA,4BAAAD,uBAAA,oCAAA6E,QAAA,qBAAAnF,SAAA","file":"static/js/main.e4047afd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Page_section__48ljQ\",\"mainButton\":\"Page_mainButton__38d7P\",\"appTable\":\"Page_appTable__3ksZt\",\"right\":\"Page_right__oLgt0\",\"center\":\"Page_center__120Pl\",\"centerFlex\":\"Page_centerFlex__3KXC0\",\"pageHeader\":\"Page_pageHeader__1NFoO\",\"cardHeader\":\"Page_cardHeader__xj55q\",\"cardFooter\":\"Page_cardFooter__RiSMS\",\"spaceBetween\":\"Page_spaceBetween__2b-hs\",\"end\":\"Page_end__3xjyQ\",\"formLabel\":\"Page_formLabel__22ela\",\"checkboxWrapper\":\"Page_checkboxWrapper__1ypbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"validationTable\":\"ValidationRulesAnalysisTable_validationTable__IZ4f8\",\"operator\":\"ValidationRulesAnalysisTable_operator__1yruT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCellContent\":\"TableCellContent_tableCellContent__1MUDr\",\"tableCellContent-narrow\":\"TableCellContent_tableCellContent-narrow__1aY0P\",\"tableCellContent-medium\":\"TableCellContent_tableCellContent-medium__2drVF\",\"tableCellContent-wide\":\"TableCellContent_tableCellContent-wide__kE-pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"AvailableDatasetsSelect_select__2RJaO\",\"options\":\"AvailableDatasetsSelect_options__2nV_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"Home_gridContainer__2RzmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBar\":\"AlertBar_alertBar__1nykA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tree\":\"AvailableOrganisationUnitsTree_tree__36zmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"downloadAs\":\"DownloadAs_downloadAs__EXpfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outlierAnalysisTable\":\"OutlierAnalysisTable_outlierAnalysisTable__eaMyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followUpAnalysisTable\":\"FollowUpAnalysisTable_followUpAnalysisTable__plQH2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionBox\":\"ValidationRulesDetails_sectionBox__3I79x\",\"sectionTitle\":\"ValidationRulesDetails_sectionTitle__j-YIb\",\"sectionSubTitle\":\"ValidationRulesDetails_sectionSubTitle__3oXtg\",\"noData\":\"ValidationRulesDetails_noData__csWGG\"};","import i18n from '@dhis2/d2-i18n'\nimport moment from 'moment'\n\nconst isLangRTL = code => {\n    const langs = ['ar', 'fa', 'ur']\n    const prefixed = langs.map(c => `${c}-`)\n\n    return (\n        langs.includes(code) ||\n        prefixed.filter(c => code.startsWith(c)).length > 0\n    )\n}\n\nexport const configI18n = userSettings => {\n    const lang = userSettings.keyUiLocale\n\n    if (isLangRTL(lang)) {\n        document.body.setAttribute('dir', 'rtl')\n    }\n    i18n.changeLanguage(lang)\n    moment.locale(lang)\n}\n\nexport const injectTranslationsToD2 = d2 => {\n    if (d2) {\n        const translations = {\n            settings: 'Settings',\n            app_search_placeholder: 'Search apps',\n            profile: 'Profile',\n            account: 'Account',\n            help: 'Help',\n            log_out: 'Log out',\n            about_dhis2: 'About DHIS 2',\n            manage_my_apps: 'Manage my apps',\n            no_results_found: 'No results found',\n            interpretations: 'Interpretations',\n            messages: 'Messages',\n        }\n        const translationKeys = Object.keys(translations)\n\n        translationKeys.forEach(key => {\n            translations[key] = i18n.t(translations[key])\n        })\n\n        Object.assign(d2.i18n.translations, translations)\n    }\n}\n\nexport default configI18n\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'data-quality-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { GridTile } from 'material-ui/GridList'\nimport FontIcon from 'material-ui/FontIcon'\nimport classNames from 'classnames'\nimport i18n from '@dhis2/d2-i18n'\nimport styles from './GridSection.module.css'\n\nclass GridSection extends PureComponent {\n    static propTypes = {\n        section: PropTypes.shape({\n            key: PropTypes.string,\n            path: PropTypes.string,\n            info: PropTypes.shape({\n                label: PropTypes.string,\n                description: PropTypes.string,\n                icon: PropTypes.string,\n                actionText: PropTypes.string,\n            }),\n        }).isRequired,\n    }\n\n    render() {\n        return (\n            <Link className=\"link\" to={this.props.section.path}>\n                <GridTile\n                    key={this.props.section.key}\n                    className={classNames('section', styles.gridElement)}\n                >\n                    <div className={classNames('row', styles.gridTitleBar)}>\n                        <span\n                            className={classNames(\n                                'section-title',\n                                styles.gridTitleDescription\n                            )}\n                        >\n                            {this.props.section.info.label}\n                        </span>\n                        <FontIcon\n                            className={classNames(\n                                'material-icons',\n                                'icon',\n                                styles.gridIcon\n                            )}\n                        >\n                            {this.props.section.info.icon}\n                        </FontIcon>\n                    </div>\n                    <span\n                        className={classNames(\n                            'section-description',\n                            'row',\n                            styles.gridDescription\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.description)}\n                    </span>\n                    <span\n                        className={classNames(\n                            'section-action-text',\n                            'row',\n                            styles.gridActionText\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.actionText)}\n                    </span>\n                </GridTile>\n            </Link>\n        )\n    }\n}\n\nexport default GridSection\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ERROR } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport i18n from '@dhis2/d2-i18n'\n\nclass Page extends Component {\n    static propTypes = {\n        sectionKey: PropTypes.string.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    componentWillMount() {\n        this.pageMounted = true\n\n        // update section on side bar\n        if (this.context.currentSection !== this.props.sectionKey) {\n            this.context.updateAppState({\n                currentSection: this.props.sectionKey,\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this.pageMounted = false\n    }\n\n    isPageMounted() {\n        return this.pageMounted\n    }\n\n    manageError(error) {\n        if (this.isPageMounted()) {\n            const messageError =\n                error && error.message\n                    ? error.message\n                    : i18n.t('An unexpected error happened during analysis')\n\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: ERROR,\n                    message: messageError,\n                },\n                pageState: {\n                    loading: false,\n                },\n            })\n        }\n    }\n}\n\nexport default Page\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Paper } from 'material-ui'\nimport styles from './AlertBar.module.css'\nimport i18n from '@dhis2/d2-i18n'\n\nclass AlertBar extends PureComponent {\n    static propTypes = {\n        show: PropTypes.bool.isRequired,\n    }\n\n    render() {\n        return (\n            <Paper>\n                <div\n                    className={styles.alertBar}\n                    style={{ display: this.props.show ? 'flex' : 'none' }}\n                >\n                    {i18n.t(\n                        'More than 500 values found, please narrow the search to see all'\n                    )}\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default AlertBar\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport i18n from '@dhis2/d2-i18n'\n\nexport const ALL_VALIDATION_RULE_GROUPS_ID = -1\nexport const ALL_VALIDATION_RULE_GROUPS_OPTION = {\n    id: ALL_VALIDATION_RULE_GROUPS_ID,\n    displayName: '[All Validation Rules]',\n}\n\nclass ValidationRuleGroupsSelect extends PureComponent {\n    static propTypes = {\n        style: PropTypes.object,\n        onChange: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        style: {},\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            validationRuleGroups: [ALL_VALIDATION_RULE_GROUPS_OPTION],\n            selected: ALL_VALIDATION_RULE_GROUPS_ID,\n        }\n\n        this.onChange = this.onChange.bind(this)\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        const translatedAllValidationRulesOption = ALL_VALIDATION_RULE_GROUPS_OPTION\n        translatedAllValidationRulesOption.displayName = i18n.t(\n            ALL_VALIDATION_RULE_GROUPS_OPTION.displayName\n        )\n        d2.models.validationRuleGroup\n            .list({\n                paging: false,\n                fields: 'id,displayName',\n            })\n            .then(validationRuleGroupsResponse => {\n                this.setState({\n                    validationRuleGroups: [\n                        translatedAllValidationRulesOption,\n                        ...validationRuleGroupsResponse.toArray(),\n                    ],\n                })\n            })\n            .catch(() => {\n                this.manageError()\n            })\n    }\n\n    onChange(event, index, value) {\n        this.setState({\n            selected: value,\n            selectedName:\n                value === ALL_VALIDATION_RULE_GROUPS_ID\n                    ? '[All Validation Rules]'\n                    : this.state.validationRuleGroups[index].displayName,\n        })\n\n        this.props.onChange(event, index, value)\n    }\n\n    render() {\n        return (\n            <SelectField\n                style={this.props.style}\n                floatingLabelText={i18n.t('Validation Rule Group')}\n                onChange={this.onChange}\n                value={this.state.selected}\n            >\n                {this.state.validationRuleGroups.map(item => (\n                    <MenuItem\n                        key={item.id}\n                        value={item.id}\n                        primaryText={item.displayName}\n                    />\n                ))}\n            </SelectField>\n        )\n    }\n}\n\nexport default ValidationRuleGroupsSelect\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component'\nimport i18n from '@dhis2/d2-i18n'\nimport styles from './AvailableOrganisationUnitsTree.module.css'\n\nclass AvailableOrganisationUnitsTree extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        onChange: PropTypes.func,\n        multiselect: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        onChange: null,\n        multiselect: false,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            selected: [],\n            rootsWithMembers: null,\n        }\n\n        this.getOrgUnitIdFromPath = this.getOrgUnitIdFromPath.bind(this)\n        this.handleOrgUnitClickSingle = this.handleOrgUnitClickSingle.bind(this)\n        this.handleOrgUnitClickMulti = this.handleOrgUnitClickMulti.bind(this)\n        this.loadAvailableOrgUnits = this.loadAvailableOrgUnits.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.state.rootsWithMembers === null) {\n            this.loadAvailableOrgUnits()\n                .then(organisationUnitsResponse => {\n                    const organisationUnits = organisationUnitsResponse.toArray()\n                    this.setState({\n                        rootsWithMembers: organisationUnits,\n                    })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    async loadAvailableOrgUnits() {\n        const d2 = this.context.d2\n\n        const orgUnits = await d2.currentUser.getOrganisationUnits({\n            fields: 'id,displayName,path,children::isNotEmpty,memberCount',\n            paging: false,\n        })\n\n        if (!orgUnits.size && d2.currentUser.authorities.has('ALL')) {\n            // if special all-authority we have access to all orgunits\n            return d2.models.organisationUnits.list({\n                paging: false,\n                level: 1,\n                fields: 'id,displayName,path,children::isNotEmpty,memberCount',\n            })\n        }\n\n        return orgUnits\n    }\n\n    getOrgUnitIdFromPath(path) {\n        return path.split('/').pop()\n    }\n\n    handleOrgUnitClickSingle(event, orgUnit) {\n        if (this.state.selected.includes(orgUnit.path)) {\n            return\n        }\n        const id = this.getOrgUnitIdFromPath(orgUnit.path)\n        this.setState({ selected: [orgUnit.path] })\n        this.props.onChange && this.props.onChange(id)\n    }\n\n    handleOrgUnitClickMulti(event, { path }) {\n        const { selected } = this.state\n        const paths = selected.includes(path)\n            ? selected.filter(selectedPath => selectedPath !== path)\n            : [...this.state.selected, path]\n\n        this.setState({ selected: paths })\n        this.props.onChange &&\n            this.props.onChange(paths.map(this.getOrgUnitIdFromPath))\n    }\n\n    render() {\n        if (!this.state.rootsWithMembers) {\n            return <span>{i18n.t('Updating Organisation Units Tree...')}</span>\n        }\n\n        if (this.state.rootsWithMembers.length < 1) {\n            return (\n                <p>\n                    {i18n.t(\n                        'You do not have access to any organisation units.'\n                    )}\n                </p>\n            )\n        }\n\n        const onSelectClick = this.props.multiselect\n            ? this.handleOrgUnitClickMulti\n            : this.handleOrgUnitClickSingle\n\n        return (\n            <div className={styles.tree}>\n                {this.state.rootsWithMembers.map(rootOrgUnit => (\n                    <OrgUnitTree\n                        key={rootOrgUnit.id}\n                        hideMemberCount={Boolean(true)}\n                        root={rootOrgUnit}\n                        selected={this.state.selected}\n                        initiallyExpanded={[`/${rootOrgUnit.id}`]}\n                        onSelectClick={onSelectClick}\n                    />\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default AvailableOrganisationUnitsTree\n","export const DOCS_LINK = 'https://docs.dhis2.org'\nexport const DOCS_TOOLTIP_LABEL = 'Open user guide'\n\n/**\n * Returns the \"version\" of the documentation that corresponds with the current dhis2 version.\n *\n * @param {Object} version - The version definition as provided by d2.system.version.\n * @param {number} version.minor - The minor dhis2 version. e.g. The 25 in 2.25.\n * @param {boolean} version.snapshot - True when the current version is the snapshot(master/development) branch.\n *\n * @returns {string} `master` for a snapshot branch. `25` for 2.25 etc.\n */\nexport const getDocsVersion = ({ major, minor, snapshot }) => {\n    if (snapshot) {\n        return 'master'\n    }\n    return `${major}.${minor}`\n}\n\nexport default getDocsVersion\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { IconButton } from 'material-ui'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    getDocsVersion,\n    DOCS_LINK,\n    DOCS_TOOLTIP_LABEL,\n} from '../../helpers/docs'\n\nclass PageHelper extends PureComponent {\n    static propTypes = {\n        lng: PropTypes.string,\n        sectionDocsKey: PropTypes.string.isRequired,\n    }\n\n    static defaultProps = {\n        lng: 'en',\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    render() {\n        const { d2 } = this.context\n        const { lng, sectionDocsKey } = this.props\n        return (\n            <IconButton\n                className=\"helper-icon\"\n                iconStyle={{ color: '#276696' }}\n                href={`${DOCS_LINK}/${getDocsVersion(\n                    d2.system.version\n                )}/${lng}/user/html/${sectionDocsKey}.html`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                tooltip={i18n.t(DOCS_TOOLTIP_LABEL)}\n                tooltipPosition=\"bottom-center\"\n                iconClassName=\"material-icons\"\n            >\n                help\n            </IconButton>\n        )\n    }\n}\n\nexport default PageHelper\n","const pageStyles = {\n    inputForm: {\n        width: '100%',\n    },\n    iconColor: {\n        fill: '#ff9900',\n    },\n    cursorStyle: {\n        cursor: 'pointer',\n    },\n}\n\nexport default pageStyles\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FormattedNumber = ({\n    value,\n    minimumFractionDigits,\n    maximumFractionDigits,\n}) => (\n    <span>\n        {new Intl.NumberFormat(sessionStorage.getItem('uiLocale'), {\n            minimumFractionDigits,\n            maximumFractionDigits,\n        }).format(value)}\n    </span>\n)\n\nFormattedNumber.defaultProps = {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n}\n\nFormattedNumber.propTypes = {\n    value: PropTypes.number.isRequired,\n    minimumFractionDigits: PropTypes.number,\n    maximumFractionDigits: PropTypes.number,\n}\n\nexport default FormattedNumber\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport styles from './DownloadAs.module.css'\n\nclass DownloadAs extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        endpoint: PropTypes.string.isRequired,\n        fileTypes: PropTypes.arrayOf(PropTypes.oneOf(['pdf', 'xls', 'csv'])),\n        queryStr: PropTypes.string,\n    }\n\n    static defaultProps = {\n        fileTypes: ['pdf', 'xls', 'csv'],\n    }\n\n    getHrefs() {\n        const { baseUrl } = this.context.d2.Api.getApi()\n        const { endpoint, fileTypes } = this.props\n        const timestamp = Date.now()\n        // The new outlierDetection endpoint produces the correct report\n        // based on query params, but older endpoints only take a timestamp\n        const queryStr = this.props.queryStr || `t=${timestamp}`\n\n        return fileTypes.reduce((acc, type) => {\n            acc[type] = `${baseUrl}${endpoint}.${type}?${queryStr}`\n            return acc\n        }, {})\n    }\n\n    render() {\n        const { fileTypes } = this.props\n        const hrefs = this.getHrefs()\n        return (\n            <div className={styles.downloadAs}>\n                {fileTypes.includes('pdf') && (\n                    <a className=\"export-pdf-action\" href={hrefs.pdf} download>\n                        {i18n.t('DOWNLOAD AS PDF')}\n                    </a>\n                )}\n                {fileTypes.includes('xls') && (\n                    <a className=\"export-xls-action\" href={hrefs.xls} download>\n                        {i18n.t('DOWNLOAD AS XLS')}\n                    </a>\n                )}\n                {fileTypes.includes('csv') && (\n                    <a className=\"export-csv-action\" href={hrefs.csv} download>\n                        {i18n.t('DOWNLOAD AS CSV')}\n                    </a>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default DownloadAs\n","export const apiConf = {\n    endpoints: {\n        validationRulesAnalysis: '/dataAnalysis/validationRules',\n        validationRulesExpression: '/dataAnalysis/validationRulesExpression',\n        validationRulesReport: '/dataAnalysis/validationRules/report',\n        validationRules: '/validationRules',\n        outlierDetection: '/outlierDetection',\n        folloupAnalysis: '/dataAnalysis/followup',\n        markDataValue: '/followUp/dataValue',\n        reportAnalysis: '/dataAnalysis/report',\n    },\n    results: {\n        analysis: {\n            limit: 500,\n        },\n    },\n}\n\nexport default apiConf\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dialog, FlatButton, FontIcon } from 'material-ui'\nimport classNames from 'classnames'\nimport i18n from '@dhis2/d2-i18n'\nimport Page from '../../Page'\nimport jsPageStyles from '../../PageStyles'\nimport cssPageStyles from '../../Page.module.css'\nimport styles from './ValidationRulesDetails.module.css'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport { apiConf } from '../../../server.conf'\nimport ValidationRulesAnalysis from '../ValidationRulesAnalysis'\n\nclass ValidationRulesDetails extends Page {\n    static STATE_PROPERTIES = ['loading']\n\n    static propTypes = {\n        validationRuleId: PropTypes.string.isRequired,\n        periodId: PropTypes.string.isRequired,\n        organisationUnitId: PropTypes.string.isRequired,\n        attributeOptionComboId: PropTypes.string.isRequired,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            loading: false,\n            openDetails: false,\n            rule: {},\n            expression: {\n                leftSide: [],\n                rightSide: [],\n            },\n        }\n\n        this.loadDetails = this.loadDetails.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ValidationRulesAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    loadDetails() {\n        if (!this.state.loading) {\n            const api = this.context.d2.Api.getApi()\n            const requestRule = `${apiConf.endpoints.validationRules}/${\n                this.props.validationRuleId\n            }`\n            const requestExpression =\n                `${apiConf.endpoints.validationRulesExpression}` +\n                `?validationRuleId=${this.props.validationRuleId}` +\n                `&periodId=${this.props.periodId}` +\n                `&organisationUnitId=${this.props.organisationUnitId}` +\n                `&attributeOptionComboId=${this.props.attributeOptionComboId}`\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n            Promise.all([api.get(requestRule), api.get(requestExpression)])\n                .then(([rule, expression]) => {\n                    this.context.updateAppState({\n                        pageState: {\n                            loading: false,\n                        },\n                    })\n                    this.setState({ openDetails: true, rule, expression })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    handleClose() {\n        this.setState({ openDetails: false })\n    }\n\n    render() {\n        // Details Actions\n        const dialogActions = [\n            <FlatButton\n                className=\"close-action\"\n                key={`FB${this.props.organisationUnitId}-${\n                    this.props.periodId\n                }-${this.props.validationRuleId}`}\n                label={i18n.t('Close')}\n                primary={Boolean(true)}\n                onClick={this.handleClose}\n            />,\n        ]\n\n        const result = (\n            <div\n                className={classNames('row', 'results-row', styles.sectionBox)}\n            >\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {i18n.t('VALIDATIONS RESULT DETAILS')}\n                </div>\n                <div\n                    className={classNames('col-xs-12', styles.sectionSubTitle)}\n                >\n                    {i18n.t('VALIDATION RULE')}\n                </div>\n                <div className={'col-xs-3'}>{i18n.t('Name')}</div>\n                <div className={'col-xs-9'}>{this.state.rule.displayName}</div>\n                <div className={'col-xs-3'}>{i18n.t('Description')}</div>\n                <div className={'col-xs-9'}>\n                    {this.state.rule.displayDescription}\n                </div>\n            </div>\n        )\n\n        const showNoData = side => (\n            <div className={classNames('row', styles.sectionBox)}>\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {side}\n                </div>\n                <div className={classNames('col-xs-12', cssPageStyles.center)}>\n                    <div className={styles.noData}>\n                        {i18n.t('no data available')}\n                    </div>\n                </div>\n            </div>\n        )\n\n        const buildSection = (side, elements, classNameRow) => (\n            <div className={classNames('row', classNameRow, styles.sectionBox)}>\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {side}\n                </div>\n                <div\n                    className={classNames('col-xs-10', styles.sectionSubTitle)}\n                >\n                    {i18n.t('DATA ELEMENT')}\n                </div>\n                <div\n                    className={classNames(\n                        'col-xs-2',\n                        styles.sectionSubTitle,\n                        cssPageStyles.right\n                    )}\n                >\n                    {i18n.t('VALUE')}\n                </div>\n                {elements.map(element => (\n                    <div key={element.name} className={'col-xs-12'}>\n                        <div className={'row'}>\n                            <div className={'col-xs-10'}>{element.name}</div>\n                            <div\n                                className={classNames(\n                                    'col-xs-2',\n                                    cssPageStyles.right\n                                )}\n                            >\n                                {element.value ? (\n                                    <FormattedNumber\n                                        value={Number(element.value)}\n                                    />\n                                ) : (\n                                    '-'\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        )\n\n        return (\n            <div>\n                <FontIcon\n                    key={`FI|${this.props.organisationUnitId}-${\n                        this.props.periodId\n                    }-${this.props.validationRuleId}`}\n                    className={\n                        'validation-rules-show-details-action material-icons'\n                    }\n                    style={jsPageStyles.cursorStyle}\n                    onClick={this.loadDetails}\n                >\n                    info\n                </FontIcon>\n                <Dialog\n                    className=\"validation-rules-details-dialog\"\n                    key={`D${this.props.organisationUnitId}-${\n                        this.props.periodId\n                    }-${this.props.validationRuleId}`}\n                    autoScrollBodyContent={Boolean(true)}\n                    title={i18n.t('Validation Details')}\n                    actions={dialogActions}\n                    modal={Boolean(true)}\n                    open={this.state.openDetails}\n                    onRequestClose={this.handleClose}\n                >\n                    {/* Result */}\n                    {result}\n                    {/* Left Side */}\n                    {this.state.expression.leftSide &&\n                    this.state.expression.leftSide.length > 0\n                        ? buildSection(\n                              i18n.t('LEFT SIDE'),\n                              this.state.expression.leftSide,\n                              'left-side-row'\n                          )\n                        : showNoData(i18n.t('LEFT SIDE'))}\n                    {/* Right Side */}\n                    {this.state.expression.rightSide &&\n                    this.state.expression.rightSide.length > 0\n                        ? buildSection(\n                              i18n.t('RIGHT SIDE'),\n                              this.state.expression.rightSide,\n                              'right-side-row'\n                          )\n                        : showNoData(i18n.t('RIGHT SIDE'))}\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesDetails\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './TableCellContent.module.css'\nimport cx from 'classnames'\n\nconst TableCellContent = props => (\n    <div\n        className={cx(styles.tableCellContent, props.className, {\n            [styles[`tableCellContent-${props.size}`]]: props.size,\n        })}\n    >\n        {props.children}\n    </div>\n)\n\nTableCellContent.propTypes = {\n    size: PropTypes.oneOf(['narrow', 'medium', 'wide']),\n}\n\nexport default TableCellContent\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../../components/download-as/DownloadAs'\nimport cssPageStyles from '../../Page.module.css'\nimport styles from './ValidationRulesAnalysisTable.module.css'\nimport i18n from '@dhis2/d2-i18n'\nimport ValidationRulesDetails from '../validation-rules-details/ValidationRulesDetails'\nimport { apiConf } from '../../../server.conf'\nimport TableCellContent from '../../../components/table/TableCellContent'\n\nclass ValidationRulesAnalysisTable extends PureComponent {\n    static propTypes = {\n        elements: PropTypes.array.isRequired,\n    }\n\n    render() {\n        const elements = this.props.elements\n\n        const shouldDisplayAttributeOptionCombo = elements.some(\n            e => e.attributeOptionCombo && e.attributeOptionCombo !== 'default'\n        )\n\n        // Table Rows\n        const rows = elements.map(element => (\n            <TableRow key={element.key}>\n                <TableRowColumn title={element.organisation}>\n                    <TableCellContent>{element.organisation}</TableCellContent>\n                </TableRowColumn>\n                {shouldDisplayAttributeOptionCombo && (\n                    <TableRowColumn title={element.attributeOptionCombo}>\n                        <TableCellContent size=\"wide\">\n                            {element.attributeOptionCombo}\n                        </TableCellContent>\n                    </TableRowColumn>\n                )}\n                <TableRowColumn title={element.period}>\n                    <TableCellContent>{element.period}</TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.importance}>\n                    <TableCellContent>{element.importance}</TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.validationRule}>\n                    <TableCellContent size={'medium'}>\n                        {element.validationRule}\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.leftValue}>\n                    <TableCellContent>\n                        <FormattedNumber value={element.leftValue} />\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.operator}>\n                    <TableCellContent className={styles.operator}>\n                        {element.operator}\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.rightValue}>\n                    <TableCellContent>\n                        <FormattedNumber value={element.rightValue} />\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn>\n                    <TableCellContent>\n                        <ValidationRulesDetails\n                            validationRuleId={element.validationRuleId}\n                            periodId={element.periodId}\n                            organisationUnitId={element.organisationUnitId}\n                            attributeOptionComboId={\n                                element.attributeOptionComboId\n                            }\n                        />\n                    </TableCellContent>\n                </TableRowColumn>\n            </TableRow>\n        ))\n\n        return (\n            <div>\n                <div className={cssPageStyles.cardHeader}>\n                    <DownloadAs\n                        endpoint={apiConf.endpoints.validationRulesReport}\n                    />\n                </div>\n                <Table\n                    selectable={false}\n                    className={classNames(\n                        cssPageStyles.appTable,\n                        styles.validationTable\n                    )}\n                    fixedHeader={false}\n                    bodyStyle={{ overflowX: 'auto' }}\n                >\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                    >\n                        <TableRow>\n                            <TableHeaderColumn\n                                title={i18n.t('Organisation Unit')}\n                            >\n                                {i18n.t('Organisation Unit')}\n                            </TableHeaderColumn>\n                            {shouldDisplayAttributeOptionCombo && (\n                                <TableHeaderColumn\n                                    title={i18n.t(\n                                        'Attribute Option Combination'\n                                    )}\n                                >\n                                    {i18n.t('Attr. Opt. Combo')}\n                                </TableHeaderColumn>\n                            )}\n                            <TableHeaderColumn title={i18n.t('Period')}>\n                                {i18n.t('Period')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Importance')}>\n                                {i18n.t('Importance')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn\n                                title={i18n.t('Validation Rule')}\n                            >\n                                {i18n.t('Validation Rule')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Value')}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Operator')}>\n                                {i18n.t('Operator')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Value')}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Details')}>\n                                {i18n.t('Details')}\n                            </TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody displayRowCheckbox={false} stripedRows={false}>\n                        {rows}\n                    </TableBody>\n                </Table>\n                <div\n                    className={classNames(\n                        cssPageStyles.cardFooter,\n                        cssPageStyles.end\n                    )}\n                >\n                    <DownloadAs\n                        endpoint={apiConf.endpoints.validationRulesReport}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesAnalysisTable\n","// get Date from YYYY-MM-DDTHH:mm:ss.mmmm\nexport const convertDateToApiDateFormat = date =>\n    date.toISOString().split('T')[0]\n\nexport default convertDateToApiDateFormat\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport Checkbox from 'material-ui/Checkbox'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport Page from '../Page'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport ValidationRuleGroupsSelect, {\n    ALL_VALIDATION_RULE_GROUPS_ID,\n} from '../../components/validation-rule-groups-select/ValidationRuleGroupsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport i18n from '@dhis2/d2-i18n'\nimport jsPageStyles from '../PageStyles'\nimport cssPageStyles from '../Page.module.css'\nimport ValidationRulesAnalysisTable from './validation-rules-analysis-table/ValidationRulesAnalysisTable'\nimport { apiConf } from '../../server.conf'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\n\nclass ValidationRulesAnalysis extends Page {\n    static STATE_PROPERTIES = ['loading', 'elements', 'showTable']\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            validationRuleGroupId: ALL_VALIDATION_RULE_GROUPS_ID,\n            notification: false,\n            persist: false,\n            elements: [],\n            loading: false,\n        }\n\n        this.validate = this.validate.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.validationRuleGroupOnChange = this.validationRuleGroupOnChange.bind(\n            this\n        )\n        this.updateSendNotifications = this.updateSendNotifications.bind(this)\n        this.updatePersistNewResults = this.updatePersistNewResults.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ValidationRulesAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    static generateElementKey = e =>\n        `${e.validationRuleId}-${e.periodId}-${e.organisationUnitId}-${\n            e.attributeOptionComboId\n        }`\n\n    static convertElementFromApiResponse = e => ({\n        key: ValidationRulesAnalysis.generateElementKey(e),\n        validationRuleId: e.validationRuleId,\n        attributeOptionCombo: e.attributeOptionComboDisplayName,\n        attributeOptionComboId: e.attributeOptionComboId,\n        organisation: e.organisationUnitDisplayName,\n        organisationUnitId: e.organisationUnitId,\n        period: e.periodDisplayName,\n        periodId: e.periodId,\n        importance: e.importance,\n        validationRule: e.validationRuleDescription,\n        leftValue: e.leftSideValue,\n        operator: e.operator,\n        rightValue: e.rightSideValue,\n    })\n\n    validate() {\n        const api = this.context.d2.Api.getApi()\n\n        if (this.isFormValid()) {\n            const request = {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                notification: this.state.notification,\n                persist: this.state.persist,\n            }\n\n            if (\n                this.state.validationRuleGroupId !==\n                ALL_VALIDATION_RULE_GROUPS_ID\n            ) {\n                request.vrg = this.state.validationRuleGroupId\n            }\n\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.validationRulesAnalysis, { ...request })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            ValidationRulesAnalysis.convertElementFromApiResponse\n                        )\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t(\n                                              'Validation passed successfully'\n                                          ),\n                                      },\n                                  }\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n        this.context.updateAppState({\n            pageState: { showTable: false },\n        })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    validationRuleGroupOnChange(event, index, value) {\n        this.setState({ validationRuleGroupId: value })\n    }\n\n    updateSendNotifications(event, checked) {\n        this.setState({ notification: checked })\n    }\n\n    updatePersistNewResults(event, checked) {\n        this.setState({ persist: checked })\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Validation Rule Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                className={classNames(\n                                    'col-md-6',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-6',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    value={this.state.startDate}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    value={this.state.endDate}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                />\n                                <div id=\"validation-rule-groups\">\n                                    <ValidationRuleGroupsSelect\n                                        style={jsPageStyles.inputForm}\n                                        onChange={\n                                            this.validationRuleGroupOnChange\n                                        }\n                                    />\n                                </div>\n                                <div id=\"send-notifications-option\">\n                                    <Checkbox\n                                        label={i18n.t('Send Notifications')}\n                                        labelPosition=\"left\"\n                                        checked={this.state.notification}\n                                        onCheck={this.updateSendNotifications}\n                                    />\n                                </div>\n                                <div id=\"persist-results-option\">\n                                    <Checkbox\n                                        label={i18n.t('Persist new results')}\n                                        labelPosition=\"left\"\n                                        checked={this.state.persist}\n                                        onCheck={this.updatePersistNewResults}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            label={i18n.t('validate')}\n                            primary\n                            disabled={this.isActionDisabled()}\n                            onClick={this.validate}\n                        />\n                    </CardText>\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <ValidationRulesAnalysisTable\n                            elements={this.state.elements}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesAnalysis\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './AvailableDatasetsSelect.module.css'\n\nclass AvailableDatasetsSelect extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        onChange: PropTypes.func,\n    }\n\n    static defaultProps = {\n        onChange: null,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            dataSets: null,\n        }\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        if (this.state.dataSets == null) {\n            d2.models.dataSet\n                .list({\n                    paging: false,\n                    fields: 'id,displayName',\n                })\n                .then(dataSetsResponse => {\n                    this.setState({\n                        dataSets: dataSetsResponse.toArray(),\n                    })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    render() {\n        return (\n            <select\n                multiple\n                className={styles.select}\n                onChange={this.props.onChange}\n            >\n                {(this.state.dataSets || []).map(item => (\n                    <option\n                        key={item.id}\n                        value={item.id}\n                        className={styles.options}\n                    >\n                        {item.displayName}\n                    </option>\n                ))}\n            </select>\n        )\n    }\n}\n\nexport default AvailableDatasetsSelect\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    // Checkbox,\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui'\nimport FormattedNumber from '../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../components/download-as/DownloadAs'\nimport i18n from '@dhis2/d2-i18n'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../../pages/Page.module.css'\n// import jsPageStyles from '../../pages/PageStyles'\nimport styles from './OutlierAnalysisTable.module.css'\n\nconst OutlierAnalyisTable = ({\n    csvQueryStr,\n    elements,\n    // toggleCheckbox,\n    algorithm,\n}) => {\n    const isZScoreAlgorithm = algorithm === 'Z_SCORE'\n\n    const downloadLink = (\n        <DownloadAs\n            fileTypes={['csv']}\n            endpoint={apiConf.endpoints.outlierDetection}\n            queryStr={csvQueryStr}\n        />\n    )\n\n    // Table Rows\n    const rows = elements.map(element => {\n        // const updateCheckbox = () => {\n        //     toggleCheckbox(element)\n        // }\n\n        return (\n            <TableRow key={element.key}>\n                <TableRowColumn>{element.displayName}</TableRowColumn>\n                <TableRowColumn>{element.pe}</TableRowColumn>\n                <TableRowColumn>{element.ouName}</TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber\n                        value={element.value}\n                        minimumFractionDigits={0}\n                    />\n                </TableRowColumn>\n                {isZScoreAlgorithm && (\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.zScore} />\n                    </TableRowColumn>\n                )}\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber\n                        value={element.absDev}\n                        minimumFractionDigits={0}\n                    />\n                </TableRowColumn>\n                {isZScoreAlgorithm && (\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.stdDev} />\n                    </TableRowColumn>\n                )}\n                {isZScoreAlgorithm && (\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber\n                            value={element.mean}\n                            minimumFractionDigits={0}\n                        />\n                    </TableRowColumn>\n                )}\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber\n                        value={element.lowerBound}\n                        minimumFractionDigits={0}\n                    />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber\n                        value={element.upperBound}\n                        minimumFractionDigits={0}\n                    />\n                </TableRowColumn>\n                {/* <TableRowColumn className={cssPageStyles.centerFlex}>\n                    <span className={cssPageStyles.checkboxWrapper}>\n                        <Checkbox\n                            checked={element.marked}\n                            onCheck={updateCheckbox}\n                            iconStyle={jsPageStyles.iconColor}\n                        />\n                    </span>\n                </TableRowColumn> */}\n            </TableRow>\n        )\n    })\n\n    return (\n        <div>\n            <div className={cssPageStyles.cardHeader}>{downloadLink}</div>\n            <Table\n                selectable={false}\n                className={classNames(\n                    cssPageStyles.appTable,\n                    styles.outlierAnalysisTable\n                )}\n            >\n                <TableHeader\n                    displaySelectAll={false}\n                    adjustForCheckbox={false}\n                    enableSelectAll={false}\n                >\n                    <TableRow>\n                        <TableHeaderColumn>\n                            {i18n.t('Data Element')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn>\n                            {i18n.t('Period')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn>\n                            {i18n.t('Organisation Unit')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Value')}\n                        </TableHeaderColumn>\n                        {isZScoreAlgorithm && (\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Z-Score')}\n                            </TableHeaderColumn>\n                        )}\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Deviation')}\n                        </TableHeaderColumn>\n                        {isZScoreAlgorithm && (\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Std Dev')}\n                            </TableHeaderColumn>\n                        )}\n                        {isZScoreAlgorithm && (\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Mean')}\n                            </TableHeaderColumn>\n                        )}\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Min')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Max')}\n                        </TableHeaderColumn>\n                        {/* <TableHeaderColumn className={cssPageStyles.center}>\n                            {i18n.t('Mark')}\n                        </TableHeaderColumn> */}\n                    </TableRow>\n                </TableHeader>\n                <TableBody displayRowCheckbox={false} stripedRows={false}>\n                    {rows}\n                </TableBody>\n            </Table>\n            <div\n                className={classNames(\n                    cssPageStyles.cardFooter,\n                    cssPageStyles.end\n                )}\n            >\n                {downloadLink}\n            </div>\n        </div>\n    )\n}\n\nOutlierAnalyisTable.generateElementKey = e =>\n    `${e.attributeOptionComboId}-${e.categoryOptionComboId}-${e.periodId}-${\n        e.sourceId\n    }-${e.dataElementId}`\n\nOutlierAnalyisTable.convertElementFromApiResponse = e => ({\n    displayName: getDisplayName(e),\n    key: `${e.aoc}-${e.coc}-${e.de}-${e.pe}-${e.ou}`,\n    marked: e.followUp,\n    ...e,\n})\n\n// OutlierAnalyisTable.convertElementToToggleFollowupRequest = e => ({\n//     dataElement: e.de,\n//     period: e.pe,\n//     orgUnit: e.ou,\n//     categoryOptionCombo: e.coc,\n//     attributeOptionCombo: e.aoc,\n// })\n\nOutlierAnalyisTable.propTypes = {\n    algorithm: PropTypes.oneOf(['Z_SCORE', 'MIN_MAX']),\n    csvQueryStr: PropTypes.string.isRequired,\n    elements: PropTypes.array.isRequired,\n    // toggleCheckbox: PropTypes.func.isRequired,\n}\n\nOutlierAnalyisTable.contextTypes = {\n    d2: PropTypes.object,\n}\n\nfunction getDisplayName(e) {\n    let str = e.deName\n\n    // In the context of a dataElement, the default COC or AOC means \"none\".\n    // The \"default\" string is not localised, and probably won't ever be.\n    // That is why the conditions below should work in the foreseeable future.\n    if (e.cocName !== 'default') {\n        str += ` (${e.cocName})`\n    }\n\n    if (e.aocName !== 'default') {\n        str += ` (${e.aocName})`\n    }\n\n    return str\n}\n\nexport default OutlierAnalyisTable\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport FlatButton from 'material-ui/FlatButton'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport OutlierAnalyisTable from '../../components/outlier-analysis-table/OutlierAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '@dhis2/d2-i18n'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nexport const Z_SCORE = 'Z_SCORE'\nexport const DEFAULT_THRESHOLD = 3.0\nexport const DEFAULT_ALGORITHM = Z_SCORE\nexport const DEFAULT_MAX_RESULTS = 500\n\nclass OutlierDetection extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitIds',\n        'dataSetIds',\n        'elements',\n        'threshold',\n        'loading',\n        'csvQueryStr',\n        'showAdvancedZScoreFields',\n        'dataStartDate',\n        'dataEndDate',\n        'maxResults',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitIds: [],\n            dataSetIds: [],\n            elements: [],\n            algorithm: DEFAULT_ALGORITHM,\n            threshold: DEFAULT_THRESHOLD,\n            csvQueryStr: null,\n            showAdvancedZScoreFields: false,\n            dataStartDate: null,\n            dataEndDate: null,\n            maxResults: DEFAULT_MAX_RESULTS,\n        }\n\n        this.start = this.start.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.thresholdOnChange = this.thresholdOnChange.bind(this)\n        this.algorithmOnChange = this.algorithmOnChange.bind(this)\n        this.dataStartDateOnChange = this.dataStartDateOnChange.bind(this)\n        this.dataEndDateOnChange = this.dataEndDateOnChange.bind(this)\n        this.maxResultsOnChange = this.maxResultsOnChange.bind(this)\n\n        this.toggleShowAdvancedZScoreFields = this.toggleShowAdvancedZScoreFields.bind(\n            this\n        )\n        // this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                OutlierDetection.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    start() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            const endpoint = apiConf.endpoints.outlierDetection\n            const csvQueryStr = this.createQueryString()\n\n            api.get(`${endpoint}?${csvQueryStr}`)\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.outlierValues.map(\n                            OutlierAnalyisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                                csvQueryStr,\n                            },\n                        })\n                    }\n                })\n                .catch(error => {\n                    this.manageError(error)\n                })\n        }\n    }\n\n    createQueryString() {\n        const isZScoreAlgorithm = this.state.algorithm === Z_SCORE\n        const querySegments = [\n            ...this.state.dataSetIds.map(id => `ds=${id}`),\n            ...this.state.organisationUnitIds.map(id => `ou=${id}`),\n            `startDate=${convertDateToApiDateFormat(this.state.startDate)}`,\n            `endDate=${convertDateToApiDateFormat(this.state.endDate)}`,\n            `algorithm=${this.state.algorithm}`,\n            `maxResults=${this.state.maxResults}`,\n        ]\n\n        if (isZScoreAlgorithm) {\n            querySegments.push(`threshold=${this.state.threshold}`)\n        }\n\n        if (isZScoreAlgorithm && this.state.dataStartDate) {\n            querySegments.push(\n                `dataStartDate=${convertDateToApiDateFormat(\n                    this.state.dataStartDate\n                )}`\n            )\n        }\n\n        if (isZScoreAlgorithm && this.state.dataEndDate) {\n            querySegments.push(\n                `dataEndDate=${convertDateToApiDateFormat(\n                    this.state.dataEndDate\n                )}`\n            )\n        }\n\n        return querySegments.join('&')\n    }\n\n    back() {\n        this.setState({ showTable: false, csvQueryStr: null })\n        this.context.updateAppState({\n            pageState: { showTable: false },\n        })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    dataStartDateOnChange(event, date) {\n        this.setState({ dataStartDate: new Date(date) })\n    }\n\n    dataEndDateOnChange(event, date) {\n        this.setState({ dataEndDate: new Date(date) })\n    }\n\n    maxResultsOnChange(event, index, value) {\n        this.setState({ maxResults: value })\n    }\n\n    toggleShowAdvancedZScoreFields(event, index, value) {\n        const shouldShow = !this.state.showAdvancedZScoreFields\n\n        if (shouldShow) {\n            this.setState({\n                showAdvancedZScoreFields: true,\n            })\n        } else {\n            this.setState({\n                showAdvancedZScoreFields: false,\n                // Also reset advanced fields\n                dataStartDate: null,\n                dataEndDate: null,\n            })\n        }\n    }\n\n    organisationUnitOnChange(organisationUnitIds) {\n        this.setState({ organisationUnitIds })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    thresholdOnChange(event, index, value) {\n        this.setState({ threshold: value })\n    }\n\n    algorithmOnChange(event, index, value) {\n        this.setState({ algorithm: value })\n    }\n\n    // toggleCheckbox(element) {\n    //     const api = this.context.d2.Api.getApi()\n    //     const elements = this.state.elements\n    //     for (let i = 0; i < elements.length; i++) {\n    //         const currentElement = elements[i]\n    //         if (currentElement.key === element.key) {\n    //             this.context.updateAppState({\n    //                 pageState: {\n    //                     loading: true,\n    //                 },\n    //             })\n    //             const apiCall = currentElement.marked ? api.delete : api.post\n    //             apiCall(\n    //                 apiConf.endpoints.markDataValue,\n    //                 OutlierAnalyisTable.convertElementToToggleFollowupRequest(\n    //                     currentElement\n    //                 )\n    //             )\n    //                 .then(() => {\n    //                     if (this.isPageMounted()) {\n    //                         currentElement.marked = !currentElement.marked\n    //                         elements[i] = currentElement\n\n    //                         this.context.updateAppState({\n    //                             showSnackbar: true,\n    //                             snackbarConf: {\n    //                                 type: SUCCESS,\n    //                                 message: i18n.t(\n    //                                     currentElement.marked\n    //                                         ? 'Marked'\n    //                                         : 'Unmarked'\n    //                                 ),\n    //                             },\n    //                             pageState: {\n    //                                 elements,\n    //                                 loading: false,\n    //                             },\n    //                         })\n    //                     }\n    //                 })\n    //                 .catch(error => {\n    //                     this.manageError(error)\n    //                 })\n    //             break\n    //         }\n    //     }\n    // }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitIds &&\n            this.state.organisationUnitIds.length > 0 &&\n            this.state.threshold &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    renderThresholdField() {\n        return (\n            <SelectField\n                id=\"threshold\"\n                style={jsPageStyles.inputForm}\n                floatingLabelText={i18n.t('Threshold')}\n                onChange={this.thresholdOnChange}\n                value={this.state.threshold}\n            >\n                <MenuItem value={1.0} primaryText=\"1.0\" />\n                <MenuItem value={1.5} primaryText=\"1.5\" />\n                <MenuItem value={2.0} primaryText=\"2.0\" />\n                <MenuItem value={2.5} primaryText=\"2.5\" />\n                <MenuItem value={3} primaryText=\"3.0\" />\n                <MenuItem value={3.5} primaryText=\"3.5\" />\n                <MenuItem value={4} primaryText=\"4.0\" />\n                <MenuItem value={4.5} primaryText=\"4.5\" />\n                <MenuItem value={5} primaryText=\"5.0\" />\n            </SelectField>\n        )\n    }\n\n    renderZScoreFields() {\n        const { showAdvancedZScoreFields } = this.state\n        const buttonLabel = showAdvancedZScoreFields\n            ? i18n.t('Hide advanced fields')\n            : i18n.t('Show advanced fields')\n\n        return (\n            <>\n                <FlatButton\n                    fullWidth\n                    label={buttonLabel}\n                    onClick={this.toggleShowAdvancedZScoreFields}\n                    style={{ marginTop: '12px' }}\n                />\n                {showAdvancedZScoreFields && (\n                    <>\n                        <DatePicker\n                            id=\"data-start-date\"\n                            textFieldStyle={jsPageStyles.inputForm}\n                            floatingLabelText={i18n.t('Data Start Date')}\n                            onChange={this.dataStartDateOnChange}\n                            maxDate={this.state.dataEndDate}\n                            value={this.state.dataStartDate}\n                        />\n                        <DatePicker\n                            id=\"data-end-date\"\n                            textFieldStyle={jsPageStyles.inputForm}\n                            floatingLabelText={i18n.t('Data End Date')}\n                            onChange={this.dataEndDateOnChange}\n                            minDate={this.state.dataStartDate}\n                            value={this.state.dataEndDate}\n                        />\n                    </>\n                )}\n            </>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Outlier Detection')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Organisation units')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    multiselect\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                                <SelectField\n                                    id=\"algorithm\"\n                                    style={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Algorithm')}\n                                    onChange={this.algorithmOnChange}\n                                    value={this.state.algorithm}\n                                >\n                                    <MenuItem\n                                        value=\"Z_SCORE\"\n                                        primaryText=\"Z-score\"\n                                    />\n                                    <MenuItem\n                                        value=\"MIN_MAX\"\n                                        primaryText=\"Min-max values\"\n                                    />\n                                </SelectField>\n                                {this.state.algorithm === Z_SCORE &&\n                                    this.renderThresholdField()}\n                                <SelectField\n                                    id=\"max-results\"\n                                    style={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Max results')}\n                                    onChange={this.maxResultsOnChange}\n                                    value={this.state.maxResults}\n                                >\n                                    <MenuItem value={100} primaryText=\"100\" />\n                                    <MenuItem value={200} primaryText=\"200\" />\n                                    <MenuItem value={500} primaryText=\"500\" />\n                                </SelectField>\n                                {this.state.algorithm === Z_SCORE &&\n                                    this.renderZScoreFields()}\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('start')}\n                            onClick={this.start}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    {this.state.showTable && this.state.csvQueryStr && (\n                        <CardText id=\"results-table\">\n                            <OutlierAnalyisTable\n                                algorithm={this.state.algorithm}\n                                csvQueryStr={this.state.csvQueryStr}\n                                elements={this.state.elements}\n                                // toggleCheckbox={this.toggleCheckbox}\n                            />\n                        </CardText>\n                    )}\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default OutlierDetection\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Checkbox,\n    FontIcon,\n    RaisedButton,\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n    IconButton,\n    Dialog,\n    FlatButton,\n} from 'material-ui'\nimport i18n from '@dhis2/d2-i18n'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../../components/download-as/DownloadAs'\nimport cssPageStyles from '../../Page.module.css'\nimport jsPageStyles from '../../PageStyles'\nimport styles from './FollowUpAnalysisTable.module.css'\nimport { apiConf } from '../../../server.conf'\n\nclass FollowUpAnalysisTable extends Component {\n    static propTypes = {\n        elements: PropTypes.array.isRequired,\n        toggleCheckbox: PropTypes.func.isRequired,\n        unfollow: PropTypes.func.isRequired,\n        loading: PropTypes.bool.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static generateElementKey = e =>\n        `${e.attributeOptionComboId}-${e.categoryOptionComboId}-${e.periodId}-${\n            e.sourceId\n        }-${e.dataElementId}`\n\n    static convertElementFromApiResponse = e => ({\n        key: FollowUpAnalysisTable.generateElementKey(e),\n        attributeOptionComboId: e.attributeOptionComboId,\n        categoryOptionComboId: e.categoryOptionComboId,\n        periodId: e.periodId,\n        organisationUnitId: e.sourceId,\n        dataElementId: e.dataElementId,\n        dataElement: e.dataElementName,\n        organisation: e.sourceName,\n        period: e.period.name,\n        min: e.min,\n        max: e.max,\n        value: Number.parseFloat(e.value, 10),\n        marked: !e.followup,\n        comment: e.comment,\n    })\n\n    static convertElementToUnFollowupRequest = e => ({\n        dataElementId: e.dataElementId,\n        periodId: e.periodId,\n        organisationUnitId: e.organisationUnitId,\n        categoryOptionComboId: e.categoryOptionComboId,\n        attributeOptionComboId: e.attributeOptionComboId,\n        followup: false,\n    })\n\n    static areElementsTheSame(element1, element2) {\n        return (\n            element1.attributeOptionComboId ===\n                element2.attributeOptionComboId &&\n            element1.categoryOptionComboId === element2.categoryOptionComboId &&\n            element1.periodId === element2.periodId &&\n            element1.organisationUnitId === element2.organisationUnitId &&\n            element1.dataElementId === element2.dataElementId\n        )\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            showComment: false,\n            comment: null,\n        }\n\n        this.unfollow = this.unfollow.bind(this)\n        this.closeCommentDialog = this.closeCommentDialog.bind(this)\n    }\n\n    unfollow() {\n        const unfollowups = []\n        for (let i = 0; i < this.props.elements.length; i++) {\n            const e = this.props.elements[i]\n            if (e.marked) {\n                unfollowups.push(\n                    FollowUpAnalysisTable.convertElementToUnFollowupRequest(e)\n                )\n            }\n        }\n\n        this.props.unfollow(unfollowups)\n    }\n\n    closeCommentDialog() {\n        this.setState({ showComment: false })\n    }\n\n    updateCheckbox(element) {\n        this.props.toggleCheckbox(element)\n    }\n\n    showComment(element) {\n        if (element.comment) {\n            this.setState({\n                showComment: true,\n                comment: element.comment,\n            })\n        }\n    }\n\n    render() {\n        let oneChecked = false\n\n        const commentDialogActions = [\n            <FlatButton\n                label={i18n.t('Close')}\n                primary\n                onClick={this.closeCommentDialog}\n            />,\n        ]\n\n        // Table Rows\n        const rows = this.props.elements.map(element => {\n            const updateCheckbox = () => {\n                this.updateCheckbox(element)\n            }\n\n            const showComment = () => {\n                this.showComment(element)\n            }\n\n            oneChecked = element.marked ? true : oneChecked\n\n            return (\n                <TableRow key={element.key}>\n                    <TableRowColumn>{element.dataElement}</TableRowColumn>\n                    <TableRowColumn>{element.organisation}</TableRowColumn>\n                    <TableRowColumn>{element.period}</TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.min} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.value} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.max} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.centerFlex}>\n                        <span className={cssPageStyles.checkboxWrapper}>\n                            <Checkbox\n                                checked={element.marked}\n                                onCheck={updateCheckbox}\n                                iconStyle={jsPageStyles.iconColor}\n                            />\n                        </span>\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.center}>\n                        {element.comment && (\n                            <IconButton key={element.key} onClick={showComment}>\n                                <FontIcon\n                                    className={'material-icons'}\n                                    style={jsPageStyles.cursorStyle}\n                                >\n                                    speaker_notes\n                                </FontIcon>\n                            </IconButton>\n                        )}\n                    </TableRowColumn>\n                </TableRow>\n            )\n        })\n\n        return (\n            <div>\n                <Dialog\n                    title={i18n.t('Comment')}\n                    actions={commentDialogActions}\n                    modal={false}\n                    open={this.state.showComment}\n                    onRequestClose={this.closeCommentDialog}\n                >\n                    <div id={'comment-content'}>{this.state.comment}</div>\n                </Dialog>\n                <div className={cssPageStyles.cardHeader}>\n                    <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n                </div>\n                <Table\n                    selectable={false}\n                    className={classNames(\n                        cssPageStyles.appTable,\n                        styles.followUpAnalysisTable\n                    )}\n                >\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                    >\n                        <TableRow>\n                            <TableHeaderColumn>\n                                {i18n.t('Data Element')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Organisation Unit')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Period')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Min')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Max')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Unfollow')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Comment')}\n                            </TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody displayRowCheckbox={false} stripedRows={false}>\n                        {rows}\n                    </TableBody>\n                </Table>\n                <div\n                    className={classNames(\n                        cssPageStyles.cardFooter,\n                        cssPageStyles.spaceBetween\n                    )}\n                >\n                    <RaisedButton\n                        id=\"unfollow-action\"\n                        primary\n                        disabled={this.props.loading || !oneChecked}\n                        label={i18n.t('unfollow')}\n                        onClick={this.unfollow}\n                    />\n                    <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FollowUpAnalysisTable\n","import React from 'react'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport FollowUpAnalysisTable from './follow-up-analysis-table/FollowUpAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '@dhis2/d2-i18n'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nclass FollowUpAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            loading: false,\n        }\n\n        this.getFollowUpList = this.getFollowUpList.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n        this.unfollow = this.unfollow.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                FollowUpAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    getFollowUpList() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            const request = {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n            }\n\n            api.post(apiConf.endpoints.folloupAnalysis, request)\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            FollowUpAnalysisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n        this.context.updateAppState({\n            pageState: { showTable: false },\n        })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    toggleCheckbox(element) {\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                currentElement.marked = !currentElement.marked\n                elements[i] = currentElement\n                this.setState({ elements })\n                break\n            }\n        }\n    }\n\n    unfollow(unfollowups) {\n        const api = this.context.d2.Api.getApi()\n        this.context.updateAppState({\n            pageState: {\n                loading: true,\n            },\n        })\n\n        api.post(apiConf.endpoints.markDataValue, {\n            followups: unfollowups,\n        })\n            .then(() => {\n                if (this.isPageMounted()) {\n                    // remove unfollowed elements\n                    const elements = this.state.elements.filter(element => {\n                        for (let j = 0; j < unfollowups.length; j++) {\n                            const unfollow = unfollowups[j]\n                            if (\n                                FollowUpAnalysisTable.areElementsTheSame(\n                                    element,\n                                    unfollow\n                                )\n                            ) {\n                                return false\n                            }\n                        }\n\n                        return true\n                    })\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: i18n.t('Unfollow done'),\n                        },\n                        pageState: {\n                            loading: false,\n                            elements,\n                        },\n                    })\n                }\n            })\n            .catch(() => {\n                this.manageError()\n            })\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    <span>{i18n.t('Follow-Up Analysis')}</span>\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('follow up')}\n                            onClick={this.getFollowUpList}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <FollowUpAnalysisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                            unfollow={this.unfollow}\n                            loading={this.state.loading}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default FollowUpAnalysis\n","import ValidationRulesAnalysis from './validation-rules-analysis/ValidationRulesAnalysis'\nimport OutlierDetection from './outlier-detection/OutlierDetection'\nimport FollowUpAnalysis from './follow-up-analysis/FollowUpAnalysis'\n\nexport const VALIDATION_RULES_ANALYSIS_SECTION_KEY = 'validationRulesAnalysis'\nexport const OUTLIER_DETECTION_SECTION_KEY = 'outlierDetection'\nexport const FOLLOW_UP_ANALYSIS_SECTION_KEY = 'followUpAnalysis'\n\nexport const sections = [\n    {\n        key: VALIDATION_RULES_ANALYSIS_SECTION_KEY,\n        path: '/validation-rules-analysis',\n        component: ValidationRulesAnalysis,\n        info: {\n            label: 'Validation Rule Analysis',\n            icon: 'done_all',\n            description:\n                'Run validation rules in order to unveil anomalies and errors in the data in the database.',\n            actionText: 'Run Validation',\n            docs: 'validation_rule_analysis',\n        },\n    },\n    {\n        key: OUTLIER_DETECTION_SECTION_KEY,\n        path: '/outlier-detection',\n        component: OutlierDetection,\n        info: {\n            label: 'Outlier detection',\n            icon: 'show_chart',\n            description:\n                'Analyze potential outlier values based on standard deviations or min-max values. Outlier values can be examined and marked for follow-up.',\n            actionText: 'Analyze',\n            docs: 'outlier_detection',\n        },\n    },\n    {\n        key: FOLLOW_UP_ANALYSIS_SECTION_KEY,\n        path: '/follow-up-analysis',\n        component: FollowUpAnalysis,\n        info: {\n            label: 'Follow-Up Analysis',\n            icon: 'description',\n            description:\n                'View or edit data values marked for further follow-up during data entry or analysis.',\n            actionText: 'View Data Values',\n            docs: 'follow_up_analysis',\n        },\n    },\n]\n\nexport const getDocsKeyForSection = sectionKey => {\n    for (let i = 0; i < sections.length; i++) {\n        const section = sections[i]\n        if (section.key === sectionKey) {\n            return section.info.docs\n        }\n    }\n\n    return ''\n}\n\nexport default sections\n","import React from 'react'\nimport classNames from 'classnames'\nimport GridSection from './grid-section/GridSection'\nimport styles from './Home.module.css'\nimport { sections } from '../sections.conf'\n\nconst Home = () => {\n    const gridElements = sections.map(section => (\n        <div\n            key={section.key}\n            className={classNames(\n                'col-sm-12 col-md-6 col-lg-4',\n                styles.gridContainer\n            )}\n        >\n            <GridSection key={section.key} section={section} />\n        </div>\n    ))\n\n    return (\n        <div id=\"grid-list-id\" className=\"row\">\n            {gridElements}\n        </div>\n    )\n}\n\nexport default Home\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nclass NoMatch extends PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>\n                    No match for <code>{this.props.location.pathname}</code>\n                </h3>\n            </div>\n        )\n    }\n}\n\nexport default NoMatch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from '../../pages/home/Home'\nimport NoMatch from './NoMatch'\nimport { sections } from '../../pages/sections.conf'\n\nconst AppRouter = ({ pageState }) => {\n    const routes = sections.map(section => {\n        const routeRender = () => {\n            const Page = section.component\n            return <Page sectionKey={section.key} {...pageState} />\n        }\n        return (\n            <Route\n                key={section.key}\n                exact\n                path={section.path}\n                render={routeRender}\n            />\n        )\n    })\n\n    /* Home route */\n    const homeRouteRender = () => <Home sectionKey=\"home\" />\n\n    routes.push(<Route key=\"home\" exact path=\"/\" render={homeRouteRender} />)\n\n    /* No Match Route */\n    routes.push(<Route key=\"no-match-route\" component={NoMatch} />)\n\n    return (\n        <main>\n            <Switch>{routes}</Switch>\n        </main>\n    )\n}\n\nAppRouter.propTypes = {\n    pageState: PropTypes.object,\n}\n\nAppRouter.defaultProps = {\n    pageState: {},\n}\n\nexport default AppRouter\n","import 'typeface-roboto'\nimport 'material-design-icons-iconfont'\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { HeaderBar } from '@dhis2/ui-widgets'\nimport Sidebar from 'd2-ui/lib/sidebar/Sidebar.component'\nimport CircularProgress from 'd2-ui/lib/circular-progress/CircularProgress'\nimport FeedbackSnackbar from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbar.component'\nimport './custom-css/D2UISidebarOverrides.css'\nimport i18n from './locales'\nimport AppRouter from './components/app-router/AppRouter'\nimport styles from './App.module.css'\nimport { sections } from './pages/sections.conf'\n\nclass App extends PureComponent {\n    static childContextTypes = {\n        d2: PropTypes.object,\n        showSnackbar: PropTypes.bool,\n        snackbarConf: PropTypes.shape({\n            type: PropTypes.string,\n            message: PropTypes.string,\n        }),\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currentSection: '',\n            showSnackbar: false,\n            snackbarConf: {\n                type: '',\n                message: '',\n            },\n            pageState: {},\n        }\n\n        this.updateAppState = this.updateAppState.bind(this)\n    }\n\n    getChildContext() {\n        return {\n            d2: this.props.d2,\n            showSnackbar: this.state.showSnackbar,\n            snackbarConf: this.state.snackbarConf,\n            currentSection: this.state.currentSection,\n            updateAppState: this.updateAppState,\n        }\n    }\n\n    updateAppState(appState) {\n        if (\n            appState.currentSection &&\n            !appState.pageState &&\n            this.state.currentSection !== appState.currentSection\n        ) {\n            // clear page state because we are updating page\n            this.setState({ ...appState, pageState: {}, showSnackbar: false })\n        } else {\n            this.setState(appState)\n        }\n    }\n\n    render() {\n        const nonOnChangeSection = () => null\n        const translatedSections = sections.map(section =>\n            Object.assign(section, {\n                icon: section.info.icon,\n                label: i18n.t(section.info.label),\n                containerElement: <Link to={section.path} />,\n            })\n        )\n\n        const feedbackElement = this.state.pageState.loading ? (\n            <div className={styles.centered}>\n                <CircularProgress />\n            </div>\n        ) : (\n            <FeedbackSnackbar\n                show={this.state.showSnackbar}\n                conf={this.state.snackbarConf}\n            />\n        )\n\n        const hideSidebar =\n            this.state.pageState && this.state.pageState.showTable\n        const contentWrapperClassName = hideSidebar\n            ? styles.contentWrapperNoMargin\n            : styles.contentWrapper\n\n        return (\n            <div>\n                <HeaderBar appName={i18n.t('Data Quality')} />\n                {!hideSidebar && (\n                    <Sidebar\n                        sections={translatedSections}\n                        currentSection={this.state.currentSection}\n                        onChangeSection={nonOnChangeSection}\n                    />\n                )}\n                <div className={contentWrapperClassName}>\n                    <div className={styles.contentArea}>\n                        <AppRouter pageState={this.state.pageState} />\n                    </div>\n                </div>\n                <div id=\"feedback-snackbar\">{feedbackElement}</div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import Spacing from 'material-ui/styles/spacing'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport {\n    blue100,\n    blue700,\n    grey100,\n    grey400,\n    orange500,\n    orangeA200,\n    darkBlack,\n    white,\n} from 'material-ui/styles/colors'\nimport { fade } from 'material-ui/utils/colorManipulator'\n\nconst theme = {\n    spacing: Spacing,\n    fontFamily: 'Roboto, sans-serif',\n    palette: {\n        primary1Color: '#004ba0',\n        primary2Color: blue700,\n        primary3Color: blue100,\n        accent1Color: orange500,\n        accent2Color: grey100,\n        accent3Color: orangeA200,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey400,\n        disabledColor: fade(darkBlack, 0.3),\n    },\n}\n\nconst muiTheme = getMuiTheme(theme)\n\nexport default muiTheme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, withRouter } from 'react-router-dom'\nimport { getUserSettings, init } from 'd2/lib/d2'\nimport log from 'loglevel'\nimport { configI18n, injectTranslationsToD2 } from './configI18n'\nimport './index.css'\nimport App from './App'\nimport appTheme from './theme'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from '@dhis2/app-runtime'\nimport { CssReset } from '@dhis2/ui-core'\nimport { MuiThemeProvider } from 'material-ui/styles'\n\nlog.setLevel(\n    process.env.NODE_ENV === 'production' ? log.levels.INFO : log.levels.DEBUG\n)\n\nconst AppComponent = withRouter(App)\nconst baseUrl = `${process.env.REACT_APP_DHIS2_BASE_URL}/api/${\n    process.env.REACT_APP_DHIS2_API_VERSION\n}`\nconst schemas = ['organisationUnit', 'dataSet', 'validationRuleGroup']\n\nconst config = {\n    baseUrl: process.env.REACT_APP_DHIS2_BASE_URL,\n    apiVersion: process.env.REACT_APP_DHIS2_API_VERSION,\n}\n\nconst render = d2 =>\n    ReactDOM.render(\n        <Provider config={config}>\n            <MuiThemeProvider muiTheme={appTheme}>\n                <div>\n                    <CssReset />\n                    <HashRouter>\n                        <AppComponent d2={d2} />\n                    </HashRouter>\n                </div>\n            </MuiThemeProvider>\n        </Provider>,\n        document.getElementById('root')\n    )\n\nconst start = async () => {\n    const d2 = await init({ baseUrl, schemas })\n    const userSettings = await getUserSettings()\n    const uiLocale = userSettings.keyUiLocale\n\n    sessionStorage.setItem('uiLocale', uiLocale || 'en')\n    injectTranslationsToD2(d2)\n    configI18n(userSettings)\n    render(d2)\n}\n\nstart()\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridElement\":\"GridSection_gridElement__3DOqL\",\"gridTitleBar\":\"GridSection_gridTitleBar__2-OEV\",\"gridTitleDescription\":\"GridSection_gridTitleDescription__1jy96\",\"gridIcon\":\"GridSection_gridIcon__1INTx\",\"gridDescription\":\"GridSection_gridDescription__1NNso\",\"gridActionText\":\"GridSection_gridActionText__1S-Gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"App_contentArea__Y_GhT\",\"contentWrapper\":\"App_contentWrapper__32IM7\",\"contentWrapperNoMargin\":\"App_contentWrapperNoMargin__22Ctq\",\"leftBar\":\"App_leftBar__1mpSD\",\"centered\":\"App_centered__2lsYq\"};"],"sourceRoot":""}