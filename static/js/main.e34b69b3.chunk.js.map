{"version":3,"sources":["App.module.css","pages/Page.module.css","pages/validation-rules-analysis/validation-rules-analysis-table/ValidationRulesAnalysisTable.module.css","components/available-datasets-select/AvailableDatasetsSelect.module.css","pages/home/Home.module.css","components/alert-bar/AlertBar.module.css","components/available-organisation-units-tree/AvailableOrganisationUnitsTree.module.css","components/download-as/DownloadAs.module.css","components/outlier-analysis-table/OutlierAnalysisTable.module.css","pages/follow-up-analysis/follow-up-analysis-table/FollowUpAnalysisTable.module.css","pages/validation-rules-analysis/validation-rules-details/ValidationRulesDetails.module.css","configI18n.js","locales/index.js","pages/home/grid-section/GridSection.js","pages/Page.js","components/alert-bar/AlertBar.js","components/validation-rule-groups-select/ValidationRuleGroupsSelect.js","components/available-organisation-units-tree/AvailableOrganisationUnitsTree.js","helpers/docs.js","components/page-helper/PageHelper.js","pages/PageStyles.js","components/formatters/FormattedNumber.js","components/download-as/DownloadAs.js","server.conf.js","pages/validation-rules-analysis/validation-rules-details/ValidationRulesDetails.js","pages/validation-rules-analysis/validation-rules-analysis-table/ValidationRulesAnalysisTable.js","helpers/dates.js","pages/validation-rules-analysis/ValidationRulesAnalysis.js","components/available-datasets-select/AvailableDatasetsSelect.js","components/outlier-analysis-table/OutlierAnalysisTable.js","pages/std-dev-outlier-analysis/StdDevOutlierAnalysis.js","pages/min-max-outlier-analysis/MinMaxOutlierAnalysis.js","pages/follow-up-analysis/follow-up-analysis-table/FollowUpAnalysisTable.js","pages/follow-up-analysis/FollowUpAnalysis.js","pages/sections.conf.js","pages/home/Home.js","components/app-router/NoMatch.js","components/app-router/AppRouter.js","App.js","theme.js","serviceWorker.js","index.js","pages/home/grid-section/GridSection.module.css"],"names":["module","exports","contentArea","contentWrapper","leftBar","centered","section","mainButton","appTable","right","center","centerFlex","pageHeader","cardHeader","cardFooter","spaceBetween","end","formLabel","checkboxWrapper","validationTable","operator","select","options","gridContainer","alertBar","tree","downloadAs","outlierAnalysisTable","followUpAnalysisTable","sectionBox","sectionTitle","sectionSubTitle","noData","configI18n","userSettings","lang","keyUiLocale","code","langs","prefixed","map","c","concat","includes","filter","startsWith","length","isLangRTL","document","body","setAttribute","i18n","changeLanguage","moment","locale","injectTranslationsToD2","d2","translations","settings","app_search_placeholder","profile","account","help","log_out","about_dhis2","manage_my_apps","no_results_found","interpretations","messages","Object","keys","forEach","key","t","assign","namespace","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","GridSection","react_default","a","createElement","react_router_dom","className","to","this","props","path","GridList","classNames","styles","gridElement","gridTitleBar","gridTitleDescription","info","label","FontIcon_default","gridIcon","icon","gridDescription","description","gridActionText","actionText","PureComponent","Page","pageMounted","context","currentSection","sectionKey","updateAppState","error","isPageMounted","messageError","message","showSnackbar","snackbarConf","type","ERROR","pageState","loading","Component","contextTypes","PropTypes","object","string","func","AlertBar","index_es","style","display","show","ALL_VALIDATION_RULE_GROUPS_ID","ALL_VALIDATION_RULE_GROUPS_OPTION","id","displayName","ValidationRuleGroupsSelect","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","validationRuleGroups","selected","onChange","bind","assertThisInitialized","_this2","translatedAllValidationRulesOption","models","validationRuleGroup","list","paging","fields","then","validationRuleGroupsResponse","setState","toConsumableArray","toArray","catch","manageError","event","index","value","selectedName","SelectField_default","floatingLabelText","item","MenuItem_default","primaryText","defaultProps","AvailableOrganisationUnitsTree","rootWithMember","handleOrgUnitClick","organisationUnits","level","organisationUnitsResponse","rootWithMembers","orgUnit","selectedOrganisationUnitSplitted","split","selectedOrganisationUnitId","OrgUnitTree_component","hideMemberCount","Boolean","root","initiallyExpanded","onSelectClick","getDocsVersion","_ref","major","minor","snapshot","PageHelper","_this$props","lng","sectionDocsKey","iconStyle","color","href","system","version","target","rel","tooltip","tooltipPosition","iconClassName","pageStyles","inputForm","width","iconColor","fill","cursorStyle","cursor","FormattedNumber","Intl","NumberFormat","sessionStorage","getItem","minimumFractionDigits","maximumFractionDigits","format","DownloadAs","api","Api","getApi","timestamp","Date","now","baseUrl","endpoint","download","apiConf","endpoints","validationRulesAnalysis","validationRulesExpression","validationRulesReport","validationRules","minMaxOutliersAnalysis","standardDeviationOutliersAnalysis","folloupAnalysis","markDataValue","reportAnalysis","results","analysis","limit","ValidationRulesDetails","openDetails","rule","expression","leftSide","rightSide","loadDetails","handleClose","nextProps","nextState","property","hasOwnProperty","ValidationRulesAnalysis","STATE_PROPERTIES","requestRule","validationRuleId","requestExpression","periodId","organisationUnitId","Promise","all","get","_ref2","slicedToArray","dialogActions","primary","onClick","result","displayDescription","showNoData","side","cssPageStyles","buildSection","elements","classNameRow","element","name","formatters_FormattedNumber","Number","jsPageStyles","autoScrollBodyContent","title","actions","modal","open","onRequestClose","propTypes","isRequired","ValidationRulesAnalysisTable","rows","organisation","period","importance","validationRule","leftValue","rightValue","validation_rules_details_ValidationRulesDetails","download_as_DownloadAs","selectable","displaySelectAll","adjustForCheckbox","enableSelectAll","displayRowCheckbox","stripedRows","convertDateToApiDateFormat","date","toISOString","showTable","startDate","endDate","validationRuleGroupId","notification","persist","validate","back","startDateOnChange","endDateOnChange","organisationUnitOnChange","validationRuleGroupOnChange","updateSendNotifications","updatePersistNewResults","isFormValid","request","ou","vrg","post","objectSpread","response","convertElementFromApiResponse","feedback","SUCCESS","checked","page_helper_PageHelper","getDocsKeyForSection","alert_bar_AlertBar","showAlertBar","Card","available_organisation_units_tree_AvailableOrganisationUnitsTree","DatePicker_default","textFieldStyle","defaultDate","maxDate","minDate","validation_rule_groups_select_ValidationRuleGroupsSelect","Checkbox_default","labelPosition","onCheck","RaisedButton_default","disabled","isActionDisabled","validation_rules_analysis_table_ValidationRulesAnalysisTable","generateElementKey","e","organisationUnitDisplayName","periodDisplayName","validationRuleDescription","leftSideValue","rightSideValue","AvailableDatasetsSelect","dataSets","dataSet","dataSetsResponse","multiple","OutlierAnalyisTable","parentToggleCheckbox","toggleCheckbox","dataElement","min","max","marked","attributeOptionComboId","categoryOptionComboId","sourceId","dataElementId","dataElementName","sourceName","parseFloat","followup","convertElementToToggleFollowupRequest","DEFAULT_STANDARD_DEVIATION","StdDevOutlierAnalysis","dataSetIds","standardDeviation","start","dataSetsOnChange","standardDeviationOnChange","ds","selectedOptions","i","push","_this3","_loop","currentElement","followups","available_datasets_select_AvailableDatasetsSelect","OutlierAnalysisTable","MinMaxOutlierAnalysis","FollowUpAnalysisTable","showComment","comment","unfollow","closeCommentDialog","element1","element2","unfollowups","convertElementToUnFollowupRequest","oneChecked","commentDialogActions","updateCheckbox","FollowUpAnalysis","getFollowUpList","j","areElementsTheSame","follow_up_analysis_table_FollowUpAnalysisTable","sections","component","docs","Home","gridElements","grid_section_GridSection","NoMatch","location","pathname","AppRouter","routes","react_router","exact","render","home_Home","App","appState","translatedSections","containerElement","feedbackElement","CircularProgress","FeedbackSnackbar_component","conf","HeaderBar","appName","Sidebar_component","onChangeSection","app_router_AppRouter","childContextTypes","bool","shape","theme","spacing","Spacing","fontFamily","palette","primary1Color","primary2Color","blue700","primary3Color","blue100","accent1Color","orange500","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","window","hostname","match","log","setLevel","levels","INFO","AppComponent","withRouter","process","schemas","config","apiVersion","ReactDOM","build_es","appTheme","CssReset","getElementById","asyncToGenerator","regenerator_default","mark","_callee","uiLocale","wrap","_context","prev","next","init","sent","getUserSettings","setItem","stop","apply","arguments","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e34b69b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"App_contentArea__Y_GhT\",\"contentWrapper\":\"App_contentWrapper__32IM7\",\"leftBar\":\"App_leftBar__1mpSD\",\"centered\":\"App_centered__2lsYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Page_section__48ljQ\",\"mainButton\":\"Page_mainButton__38d7P\",\"appTable\":\"Page_appTable__3ksZt\",\"right\":\"Page_right__oLgt0\",\"center\":\"Page_center__120Pl\",\"centerFlex\":\"Page_centerFlex__3KXC0\",\"pageHeader\":\"Page_pageHeader__1NFoO\",\"cardHeader\":\"Page_cardHeader__xj55q\",\"cardFooter\":\"Page_cardFooter__RiSMS\",\"spaceBetween\":\"Page_spaceBetween__2b-hs\",\"end\":\"Page_end__3xjyQ\",\"formLabel\":\"Page_formLabel__22ela\",\"checkboxWrapper\":\"Page_checkboxWrapper__1ypbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"validationTable\":\"ValidationRulesAnalysisTable_validationTable__IZ4f8\",\"operator\":\"ValidationRulesAnalysisTable_operator__1yruT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"AvailableDatasetsSelect_select__2RJaO\",\"options\":\"AvailableDatasetsSelect_options__2nV_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"Home_gridContainer__2RzmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBar\":\"AlertBar_alertBar__1nykA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tree\":\"AvailableOrganisationUnitsTree_tree__36zmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"downloadAs\":\"DownloadAs_downloadAs__EXpfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outlierAnalysisTable\":\"OutlierAnalysisTable_outlierAnalysisTable__eaMyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followUpAnalysisTable\":\"FollowUpAnalysisTable_followUpAnalysisTable__plQH2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionBox\":\"ValidationRulesDetails_sectionBox__3I79x\",\"sectionTitle\":\"ValidationRulesDetails_sectionTitle__j-YIb\",\"sectionSubTitle\":\"ValidationRulesDetails_sectionSubTitle__3oXtg\",\"noData\":\"ValidationRulesDetails_noData__csWGG\"};","import i18n from '@dhis2/d2-i18n'\nimport moment from 'moment'\n\nconst isLangRTL = code => {\n    const langs = ['ar', 'fa', 'ur']\n    const prefixed = langs.map(c => `${c}-`)\n\n    return (\n        langs.includes(code) ||\n        prefixed.filter(c => code.startsWith(c)).length > 0\n    )\n}\n\nexport const configI18n = userSettings => {\n    const lang = userSettings.keyUiLocale\n\n    if (isLangRTL(lang)) {\n        document.body.setAttribute('dir', 'rtl')\n    }\n    i18n.changeLanguage(lang)\n    moment.locale(lang)\n}\n\nexport const injectTranslationsToD2 = d2 => {\n    if (d2) {\n        const translations = {\n            settings: 'Settings',\n            app_search_placeholder: 'Search apps',\n            profile: 'Profile',\n            account: 'Account',\n            help: 'Help',\n            log_out: 'Log out',\n            about_dhis2: 'About DHIS 2',\n            manage_my_apps: 'Manage my apps',\n            no_results_found: 'No results found',\n            interpretations: 'Interpretations',\n            messages: 'Messages',\n        }\n        const translationKeys = Object.keys(translations)\n\n        translationKeys.forEach(key => {\n            translations[key] = i18n.t(translations[key])\n        })\n\n        Object.assign(d2.i18n.translations, translations)\n    }\n}\n\nexport default configI18n\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'data-quality-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { GridTile } from 'material-ui/GridList'\nimport FontIcon from 'material-ui/FontIcon'\nimport classNames from 'classnames'\nimport i18n from '@dhis2/d2-i18n'\nimport styles from './GridSection.module.css'\n\nclass GridSection extends PureComponent {\n    static propTypes = {\n        section: PropTypes.shape({\n            key: PropTypes.string,\n            path: PropTypes.string,\n            info: PropTypes.shape({\n                label: PropTypes.string,\n                description: PropTypes.string,\n                icon: PropTypes.string,\n                actionText: PropTypes.string,\n            }),\n        }).isRequired,\n    }\n\n    render() {\n        return (\n            <Link className=\"link\" to={this.props.section.path}>\n                <GridTile\n                    key={this.props.section.key}\n                    className={classNames('section', styles.gridElement)}\n                >\n                    <div className={classNames('row', styles.gridTitleBar)}>\n                        <span\n                            className={classNames(\n                                'section-title',\n                                styles.gridTitleDescription\n                            )}\n                        >\n                            {this.props.section.info.label}\n                        </span>\n                        <FontIcon\n                            className={classNames(\n                                'material-icons',\n                                'icon',\n                                styles.gridIcon\n                            )}\n                        >\n                            {this.props.section.info.icon}\n                        </FontIcon>\n                    </div>\n                    <span\n                        className={classNames(\n                            'section-description',\n                            'row',\n                            styles.gridDescription\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.description)}\n                    </span>\n                    <span\n                        className={classNames(\n                            'section-action-text',\n                            'row',\n                            styles.gridActionText\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.actionText)}\n                    </span>\n                </GridTile>\n            </Link>\n        )\n    }\n}\n\nexport default GridSection\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ERROR } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport i18n from '@dhis2/d2-i18n'\n\nclass Page extends Component {\n    static propTypes = {\n        sectionKey: PropTypes.string.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    componentWillMount() {\n        this.pageMounted = true\n\n        // update section on side bar\n        if (this.context.currentSection !== this.props.sectionKey) {\n            this.context.updateAppState({\n                currentSection: this.props.sectionKey,\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this.pageMounted = false\n    }\n\n    isPageMounted() {\n        return this.pageMounted\n    }\n\n    manageError(error) {\n        if (this.isPageMounted()) {\n            const messageError =\n                error && error.message\n                    ? error.message\n                    : i18n.t('An unexpected error happened during analysis')\n\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: ERROR,\n                    message: messageError,\n                },\n                pageState: {\n                    loading: false,\n                },\n            })\n        }\n    }\n}\n\nexport default Page\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Paper } from 'material-ui'\nimport styles from './AlertBar.module.css'\nimport i18n from '@dhis2/d2-i18n'\n\nclass AlertBar extends PureComponent {\n    static propTypes = {\n        show: PropTypes.bool.isRequired,\n    }\n\n    render() {\n        return (\n            <Paper>\n                <div\n                    className={styles.alertBar}\n                    style={{ display: this.props.show ? 'flex' : 'none' }}\n                >\n                    {i18n.t(\n                        'More than 500 values found, please narrow the search to see all'\n                    )}\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default AlertBar\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport i18n from '@dhis2/d2-i18n'\n\nexport const ALL_VALIDATION_RULE_GROUPS_ID = -1\nexport const ALL_VALIDATION_RULE_GROUPS_OPTION = {\n    id: ALL_VALIDATION_RULE_GROUPS_ID,\n    displayName: '[All Validation Rules]',\n}\n\nclass ValidationRuleGroupsSelect extends PureComponent {\n    static propTypes = {\n        style: PropTypes.object,\n        onChange: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        style: {},\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            validationRuleGroups: [ALL_VALIDATION_RULE_GROUPS_OPTION],\n            selected: ALL_VALIDATION_RULE_GROUPS_ID,\n        }\n\n        this.onChange = this.onChange.bind(this)\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        const translatedAllValidationRulesOption = ALL_VALIDATION_RULE_GROUPS_OPTION\n        translatedAllValidationRulesOption.displayName = i18n.t(\n            ALL_VALIDATION_RULE_GROUPS_OPTION.displayName\n        )\n        d2.models.validationRuleGroup\n            .list({\n                paging: false,\n                fields: 'id,displayName',\n            })\n            .then(validationRuleGroupsResponse => {\n                this.setState({\n                    validationRuleGroups: [\n                        translatedAllValidationRulesOption,\n                        ...validationRuleGroupsResponse.toArray(),\n                    ],\n                })\n            })\n            .catch(() => {\n                this.manageError()\n            })\n    }\n\n    onChange(event, index, value) {\n        this.setState({\n            selected: value,\n            selectedName:\n                value === ALL_VALIDATION_RULE_GROUPS_ID\n                    ? '[All Validation Rules]'\n                    : this.state.validationRuleGroups[index].displayName,\n        })\n\n        this.props.onChange(event, index, value)\n    }\n\n    render() {\n        return (\n            <SelectField\n                style={this.props.style}\n                floatingLabelText={i18n.t('Validation Rule Group')}\n                onChange={this.onChange}\n                value={this.state.selected}\n            >\n                {this.state.validationRuleGroups.map(item => (\n                    <MenuItem\n                        key={item.id}\n                        value={item.id}\n                        primaryText={item.displayName}\n                    />\n                ))}\n            </SelectField>\n        )\n    }\n}\n\nexport default ValidationRuleGroupsSelect\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component'\nimport i18n from '@dhis2/d2-i18n'\nimport styles from './AvailableOrganisationUnitsTree.module.css'\n\nclass AvailableOrganisationUnitsTree extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        onChange: PropTypes.func,\n    }\n\n    static defaultProps = {\n        onChange: null,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            selected: [],\n            rootWithMember: null,\n        }\n\n        this.handleOrgUnitClick = this.handleOrgUnitClick.bind(this)\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        if (this.state.rootWithMember == null) {\n            d2.models.organisationUnits\n                .list({\n                    paging: false,\n                    level: 1,\n                    fields:\n                        'id,displayName,path,children::isNotEmpty,memberCount',\n                })\n                .then(organisationUnitsResponse => {\n                    const organisationUnits = organisationUnitsResponse.toArray()\n                    this.setState({\n                        rootWithMembers: organisationUnits[0],\n                    })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    handleOrgUnitClick(event, orgUnit) {\n        if (!this.state.selected.includes(orgUnit.path)) {\n            this.setState({ selected: [orgUnit.path] })\n            if (this.props.onChange) {\n                const selectedOrganisationUnitSplitted = orgUnit.path.split('/')\n                const selectedOrganisationUnitId =\n                    selectedOrganisationUnitSplitted[\n                        selectedOrganisationUnitSplitted.length - 1\n                    ]\n                this.props.onChange(selectedOrganisationUnitId)\n            }\n        }\n    }\n\n    render() {\n        if (this.state.rootWithMembers) {\n            return (\n                <div className={styles.tree}>\n                    <OrgUnitTree\n                        hideMemberCount={Boolean(true)}\n                        root={this.state.rootWithMembers}\n                        selected={this.state.selected}\n                        initiallyExpanded={[\n                            `/${this.state.rootWithMembers.id}`,\n                        ]}\n                        onSelectClick={this.handleOrgUnitClick}\n                    />\n                </div>\n            )\n        }\n\n        return <span>{i18n.t('Updating Organisation Units Tree...')}</span>\n    }\n}\n\nexport default AvailableOrganisationUnitsTree\n","export const DOCS_LINK = 'https://docs.dhis2.org'\nexport const DOCS_TOOLTIP_LABEL = 'Open user guide'\n\n/**\n * Returns the \"version\" of the documentation that corresponds with the current dhis2 version.\n *\n * @param {Object} version - The version definition as provided by d2.system.version.\n * @param {number} version.minor - The minor dhis2 version. e.g. The 25 in 2.25.\n * @param {boolean} version.snapshot - True when the current version is the snapshot(master/development) branch.\n *\n * @returns {string} `master` for a snapshot branch. `25` for 2.25 etc.\n */\nexport const getDocsVersion = ({ major, minor, snapshot }) => {\n    if (snapshot) {\n        return 'master'\n    }\n    return `${major}.${minor}`\n}\n\nexport default getDocsVersion\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { IconButton } from 'material-ui'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    getDocsVersion,\n    DOCS_LINK,\n    DOCS_TOOLTIP_LABEL,\n} from '../../helpers/docs'\n\nclass PageHelper extends PureComponent {\n    static propTypes = {\n        lng: PropTypes.string,\n        sectionDocsKey: PropTypes.string.isRequired,\n    }\n\n    static defaultProps = {\n        lng: 'en',\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    render() {\n        const { d2 } = this.context\n        const { lng, sectionDocsKey } = this.props\n        return (\n            <IconButton\n                className=\"helper-icon\"\n                iconStyle={{ color: '#276696' }}\n                href={`${DOCS_LINK}/${getDocsVersion(\n                    d2.system.version\n                )}/${lng}/user/html/${sectionDocsKey}.html`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                tooltip={i18n.t(DOCS_TOOLTIP_LABEL)}\n                tooltipPosition=\"bottom-center\"\n                iconClassName=\"material-icons\"\n            >\n                help\n            </IconButton>\n        )\n    }\n}\n\nexport default PageHelper\n","const pageStyles = {\n    inputForm: {\n        width: '100%',\n    },\n    iconColor: {\n        fill: '#ff9900',\n    },\n    cursorStyle: {\n        cursor: 'pointer',\n    },\n}\n\nexport default pageStyles\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FormattedNumber = props => (\n    <span>\n        {new Intl.NumberFormat(sessionStorage.getItem('uiLocale'), {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n        }).format(props.value)}\n    </span>\n)\n\nFormattedNumber.propTypes = {\n    value: PropTypes.number.isRequired,\n}\n\nexport default FormattedNumber\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport styles from './DownloadAs.module.css'\n\nclass DownloadAs extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        endpoint: PropTypes.string.isRequired,\n    }\n\n    render() {\n        const api = this.context.d2.Api.getApi()\n        const timestamp = Date.now()\n        return (\n            <div className={styles.downloadAs}>\n                <a\n                    className=\"export-pdf-action\"\n                    href={`${api.baseUrl}${\n                        this.props.endpoint\n                    }.pdf?t=${timestamp}`}\n                    download\n                >\n                    {i18n.t('DOWNLOAD AS PDF')}\n                </a>\n                <a\n                    className=\"export-xls-action\"\n                    href={`${api.baseUrl}${\n                        this.props.endpoint\n                    }.xls?t=${timestamp}`}\n                    download\n                >\n                    {i18n.t('DOWNLOAD AS XLS')}\n                </a>\n                <a\n                    className=\"export-csv-action\"\n                    href={`${api.baseUrl}${\n                        this.props.endpoint\n                    }.csv?t=${timestamp}`}\n                    download\n                >\n                    {i18n.t('DOWNLOAD AS CSV')}\n                </a>\n            </div>\n        )\n    }\n}\n\nexport default DownloadAs\n","export const apiConf = {\n    endpoints: {\n        validationRulesAnalysis: '/dataAnalysis/validationRules',\n        validationRulesExpression: '/dataAnalysis/validationRulesExpression',\n        validationRulesReport: '/dataAnalysis/validationRules/report',\n        validationRules: '/validationRules',\n        minMaxOutliersAnalysis: '/dataAnalysis/minMaxOutlier',\n        standardDeviationOutliersAnalysis: '/dataAnalysis/stdDevOutlier',\n        folloupAnalysis: '/dataAnalysis/followup',\n        markDataValue: '/dataAnalysis/followup/mark',\n        reportAnalysis: '/dataAnalysis/report',\n    },\n    results: {\n        analysis: {\n            limit: 500,\n        },\n    },\n}\n\nexport default apiConf\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dialog, FlatButton, FontIcon } from 'material-ui'\nimport classNames from 'classnames'\nimport i18n from '@dhis2/d2-i18n'\nimport Page from '../../Page'\nimport jsPageStyles from '../../PageStyles'\nimport cssPageStyles from '../../Page.module.css'\nimport styles from './ValidationRulesDetails.module.css'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport { apiConf } from '../../../server.conf'\nimport ValidationRulesAnalysis from '../ValidationRulesAnalysis'\n\nclass ValidationRulesDetails extends Page {\n    static STATE_PROPERTIES = ['loading']\n\n    static propTypes = {\n        validationRuleId: PropTypes.string.isRequired,\n        periodId: PropTypes.string.isRequired,\n        organisationUnitId: PropTypes.string.isRequired,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            loading: false,\n            openDetails: false,\n            rule: {},\n            expression: {\n                leftSide: [],\n                rightSide: [],\n            },\n        }\n\n        this.loadDetails = this.loadDetails.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ValidationRulesAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    loadDetails() {\n        if (!this.state.loading) {\n            const api = this.context.d2.Api.getApi()\n            const requestRule = `${apiConf.endpoints.validationRules}/${\n                this.props.validationRuleId\n            }`\n            const requestExpression =\n                `${apiConf.endpoints.validationRulesExpression}` +\n                `?validationRuleId=${this.props.validationRuleId}` +\n                `&periodId=${this.props.periodId}` +\n                `&organisationUnitId=${this.props.organisationUnitId}`\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n            Promise.all([api.get(requestRule), api.get(requestExpression)])\n                .then(([rule, expression]) => {\n                    this.context.updateAppState({\n                        pageState: {\n                            loading: false,\n                        },\n                    })\n                    this.setState({ openDetails: true, rule, expression })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    handleClose() {\n        this.setState({ openDetails: false })\n    }\n\n    render() {\n        // Details Actions\n        const dialogActions = [\n            <FlatButton\n                className=\"close-action\"\n                key={`FB${this.props.organisationUnitId}-${\n                    this.props.periodId\n                }-${this.props.validationRuleId}`}\n                label={i18n.t('Close')}\n                primary={Boolean(true)}\n                onClick={this.handleClose}\n            />,\n        ]\n\n        const result = (\n            <div\n                className={classNames('row', 'results-row', styles.sectionBox)}\n            >\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {i18n.t('VALIDATIONS RESULT DETAILS')}\n                </div>\n                <div\n                    className={classNames('col-xs-12', styles.sectionSubTitle)}\n                >\n                    {i18n.t('VALIDATION RULE')}\n                </div>\n                <div className={'col-xs-3'}>{i18n.t('Name')}</div>\n                <div className={'col-xs-9'}>{this.state.rule.displayName}</div>\n                <div className={'col-xs-3'}>{i18n.t('Description')}</div>\n                <div className={'col-xs-9'}>\n                    {this.state.rule.displayDescription}\n                </div>\n            </div>\n        )\n\n        const showNoData = side => (\n            <div className={classNames('row', styles.sectionBox)}>\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {side}\n                </div>\n                <div className={classNames('col-xs-12', cssPageStyles.center)}>\n                    <div className={styles.noData}>\n                        {i18n.t('no data available')}\n                    </div>\n                </div>\n            </div>\n        )\n\n        const buildSection = (side, elements, classNameRow) => (\n            <div className={classNames('row', classNameRow, styles.sectionBox)}>\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {side}\n                </div>\n                <div\n                    className={classNames('col-xs-10', styles.sectionSubTitle)}\n                >\n                    {i18n.t('DATA ELEMENT')}\n                </div>\n                <div\n                    className={classNames(\n                        'col-xs-2',\n                        styles.sectionSubTitle,\n                        cssPageStyles.right\n                    )}\n                >\n                    {i18n.t('VALUE')}\n                </div>\n                {elements.map(element => (\n                    <div key={element.name} className={'col-xs-12'}>\n                        <div className={'row'}>\n                            <div className={'col-xs-10'}>{element.name}</div>\n                            <div\n                                className={classNames(\n                                    'col-xs-2',\n                                    cssPageStyles.right\n                                )}\n                            >\n                                {element.value ? (\n                                    <FormattedNumber\n                                        value={Number(element.value)}\n                                    />\n                                ) : (\n                                    '-'\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        )\n\n        return (\n            <div>\n                <FontIcon\n                    key={`FI|${this.props.organisationUnitId}-${\n                        this.props.periodId\n                    }-${this.props.validationRuleId}`}\n                    className={\n                        'validation-rules-show-details-action material-icons'\n                    }\n                    style={jsPageStyles.cursorStyle}\n                    onClick={this.loadDetails}\n                >\n                    info\n                </FontIcon>\n                <Dialog\n                    className=\"validation-rules-details-dialog\"\n                    key={`D${this.props.organisationUnitId}-${\n                        this.props.periodId\n                    }-${this.props.validationRuleId}`}\n                    autoScrollBodyContent={Boolean(true)}\n                    title={i18n.t('Validation Details')}\n                    actions={dialogActions}\n                    modal={Boolean(true)}\n                    open={this.state.openDetails}\n                    onRequestClose={this.handleClose}\n                >\n                    {/* Result */}\n                    {result}\n                    {/* Left Side */}\n                    {this.state.expression.leftSide &&\n                    this.state.expression.leftSide.length > 0\n                        ? buildSection(\n                              i18n.t('LEFT SIDE'),\n                              this.state.expression.leftSide,\n                              'left-side-row'\n                          )\n                        : showNoData(i18n.t('LEFT SIDE'))}\n                    {/* Right Side */}\n                    {this.state.expression.rightSide &&\n                    this.state.expression.rightSide.length > 0\n                        ? buildSection(\n                              i18n.t('RIGHT SIDE'),\n                              this.state.expression.rightSide,\n                              'right-side-row'\n                          )\n                        : showNoData(i18n.t('RIGHT SIDE'))}\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesDetails\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../../components/download-as/DownloadAs'\nimport cssPageStyles from '../../Page.module.css'\nimport styles from './ValidationRulesAnalysisTable.module.css'\nimport i18n from '@dhis2/d2-i18n'\nimport ValidationRulesDetails from '../validation-rules-details/ValidationRulesDetails'\nimport { apiConf } from '../../../server.conf'\n\nclass ValidationRulesAnalysisTable extends PureComponent {\n    static propTypes = {\n        elements: PropTypes.array.isRequired,\n    }\n\n    render() {\n        const elements = this.props.elements\n\n        // Table Rows\n        const rows = elements.map(element => (\n            <TableRow key={element.key}>\n                <TableRowColumn>{element.organisation}</TableRowColumn>\n                <TableRowColumn>{element.period}</TableRowColumn>\n                <TableRowColumn>{element.importance}</TableRowColumn>\n                <TableRowColumn>{element.validationRule}</TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.leftValue} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <span className={styles.operator}>{element.operator}</span>\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.rightValue} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.center}>\n                    <ValidationRulesDetails\n                        validationRuleId={element.validationRuleId}\n                        periodId={element.periodId}\n                        organisationUnitId={element.organisationUnitId}\n                    />\n                </TableRowColumn>\n            </TableRow>\n        ))\n\n        return (\n            <div>\n                <div className={cssPageStyles.cardHeader}>\n                    <DownloadAs\n                        endpoint={apiConf.endpoints.validationRulesReport}\n                    />\n                </div>\n                <Table\n                    selectable={false}\n                    className={classNames(\n                        cssPageStyles.appTable,\n                        styles.validationTable\n                    )}\n                >\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                    >\n                        <TableRow>\n                            <TableHeaderColumn>\n                                {i18n.t('Organisation Unit')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Period')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Importance')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Validation Rule')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Operator')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Details')}\n                            </TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody displayRowCheckbox={false} stripedRows={false}>\n                        {rows}\n                    </TableBody>\n                </Table>\n                <div\n                    className={classNames(\n                        cssPageStyles.cardFooter,\n                        cssPageStyles.end\n                    )}\n                >\n                    <DownloadAs\n                        endpoint={apiConf.endpoints.validationRulesReport}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesAnalysisTable\n","// get Date from YYYY-MM-DDTHH:mm:ss.mmmm\nexport const convertDateToApiDateFormat = date =>\n    date.toISOString().split('T')[0]\n\nexport default convertDateToApiDateFormat\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport Checkbox from 'material-ui/Checkbox'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport Page from '../Page'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport ValidationRuleGroupsSelect, {\n    ALL_VALIDATION_RULE_GROUPS_ID,\n} from '../../components/validation-rule-groups-select/ValidationRuleGroupsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport i18n from '@dhis2/d2-i18n'\nimport jsPageStyles from '../PageStyles'\nimport cssPageStyles from '../Page.module.css'\nimport ValidationRulesAnalysisTable from './validation-rules-analysis-table/ValidationRulesAnalysisTable'\nimport { apiConf } from '../../server.conf'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\n\nclass ValidationRulesAnalysis extends Page {\n    static STATE_PROPERTIES = ['loading', 'elements', 'showTable']\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            validationRuleGroupId: ALL_VALIDATION_RULE_GROUPS_ID,\n            notification: false,\n            persist: false,\n            elements: [],\n            loading: false,\n        }\n\n        this.validate = this.validate.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.validationRuleGroupOnChange = this.validationRuleGroupOnChange.bind(\n            this\n        )\n        this.updateSendNotifications = this.updateSendNotifications.bind(this)\n        this.updatePersistNewResults = this.updatePersistNewResults.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ValidationRulesAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    static generateElementKey = e =>\n        `${e.validationRuleId}-${e.periodId}-${e.organisationUnitId}`\n\n    static convertElementFromApiResponse = e => ({\n        key: ValidationRulesAnalysis.generateElementKey(e),\n        validationRuleId: e.validationRuleId,\n        organisation: e.organisationUnitDisplayName,\n        organisationUnitId: e.organisationUnitId,\n        period: e.periodDisplayName,\n        periodId: e.periodId,\n        importance: e.importance,\n        validationRule: e.validationRuleDescription,\n        leftValue: e.leftSideValue,\n        operator: e.operator,\n        rightValue: e.rightSideValue,\n    })\n\n    validate() {\n        const api = this.context.d2.Api.getApi()\n\n        if (this.isFormValid()) {\n            const request = {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                notification: this.state.notification,\n                persist: this.state.persist,\n            }\n\n            if (\n                this.state.validationRuleGroupId !==\n                ALL_VALIDATION_RULE_GROUPS_ID\n            ) {\n                request.vrg = this.state.validationRuleGroupId\n            }\n\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.validationRulesAnalysis, { ...request })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            ValidationRulesAnalysis.convertElementFromApiResponse\n                        )\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t(\n                                              'Validation passed successfully'\n                                          ),\n                                      },\n                                  }\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    validationRuleGroupOnChange(event, index, value) {\n        this.setState({ validationRuleGroupId: value })\n    }\n\n    updateSendNotifications(event, checked) {\n        this.setState({ notification: checked })\n    }\n\n    updatePersistNewResults(event, checked) {\n        this.setState({ persist: checked })\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Validation Rule Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                className={classNames(\n                                    'col-md-6',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-6',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    value={this.state.startDate}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    value={this.state.endDate}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                />\n                                <div id=\"validation-rule-groups\">\n                                    <ValidationRuleGroupsSelect\n                                        style={jsPageStyles.inputForm}\n                                        onChange={\n                                            this.validationRuleGroupOnChange\n                                        }\n                                    />\n                                </div>\n                                <div id=\"send-notifications-option\">\n                                    <Checkbox\n                                        label={i18n.t('Send Notifications')}\n                                        labelPosition=\"left\"\n                                        checked={this.state.notification}\n                                        onCheck={this.updateSendNotifications}\n                                    />\n                                </div>\n                                <div id=\"persist-results-option\">\n                                    <Checkbox\n                                        label={i18n.t('Persist new results')}\n                                        labelPosition=\"left\"\n                                        checked={this.state.persist}\n                                        onCheck={this.updatePersistNewResults}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            label={i18n.t('validate')}\n                            primary\n                            disabled={this.isActionDisabled()}\n                            onClick={this.validate}\n                        />\n                    </CardText>\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <ValidationRulesAnalysisTable\n                            elements={this.state.elements}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesAnalysis\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './AvailableDatasetsSelect.module.css'\n\nclass AvailableDatasetsSelect extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        onChange: PropTypes.func,\n    }\n\n    static defaultProps = {\n        onChange: null,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            dataSets: null,\n        }\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        if (this.state.dataSets == null) {\n            d2.models.dataSet\n                .list({\n                    paging: false,\n                    fields: 'id,displayName',\n                })\n                .then(dataSetsResponse => {\n                    this.setState({\n                        dataSets: dataSetsResponse.toArray(),\n                    })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    render() {\n        return (\n            <select\n                multiple\n                className={styles.select}\n                onChange={this.props.onChange}\n            >\n                {(this.state.dataSets || []).map(item => (\n                    <option\n                        key={item.id}\n                        value={item.id}\n                        className={styles.options}\n                    >\n                        {item.displayName}\n                    </option>\n                ))}\n            </select>\n        )\n    }\n}\n\nexport default AvailableDatasetsSelect\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Checkbox,\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui'\nimport FormattedNumber from '../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../components/download-as/DownloadAs'\nimport i18n from '@dhis2/d2-i18n'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../../pages/Page.module.css'\nimport jsPageStyles from '../../pages/PageStyles'\nimport styles from './OutlierAnalysisTable.module.css'\n\nconst OutlierAnalyisTable = props => {\n    const elements = props.elements\n    const parentToggleCheckbox = props.toggleCheckbox\n\n    // Table Rows\n    const rows = elements.map(element => {\n        const updateCheckbox = () => {\n            parentToggleCheckbox(element)\n        }\n\n        return (\n            <TableRow key={element.key}>\n                <TableRowColumn>{element.dataElement}</TableRowColumn>\n                <TableRowColumn>{element.organisation}</TableRowColumn>\n                <TableRowColumn>{element.period}</TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.min} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.value} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.max} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.centerFlex}>\n                    <span className={cssPageStyles.checkboxWrapper}>\n                        <Checkbox\n                            checked={element.marked}\n                            onCheck={updateCheckbox}\n                            iconStyle={jsPageStyles.iconColor}\n                        />\n                    </span>\n                </TableRowColumn>\n            </TableRow>\n        )\n    })\n\n    return (\n        <div>\n            <div className={cssPageStyles.cardHeader}>\n                <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n            </div>\n            <Table\n                selectable={false}\n                className={classNames(\n                    cssPageStyles.appTable,\n                    styles.outlierAnalysisTable\n                )}\n            >\n                <TableHeader\n                    displaySelectAll={false}\n                    adjustForCheckbox={false}\n                    enableSelectAll={false}\n                >\n                    <TableRow>\n                        <TableHeaderColumn>\n                            {i18n.t('Data Element')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn>\n                            {i18n.t('Organisation Unit')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn>\n                            {i18n.t('Period')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Min')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Value')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Max')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.center}>\n                            {i18n.t('Mark')}\n                        </TableHeaderColumn>\n                    </TableRow>\n                </TableHeader>\n                <TableBody displayRowCheckbox={false} stripedRows={false}>\n                    {rows}\n                </TableBody>\n            </Table>\n            <div\n                className={classNames(\n                    cssPageStyles.cardFooter,\n                    cssPageStyles.end\n                )}\n            >\n                <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n            </div>\n        </div>\n    )\n}\n\nOutlierAnalyisTable.generateElementKey = e =>\n    `${e.attributeOptionComboId}-${e.categoryOptionComboId}-${e.periodId}-${\n        e.sourceId\n    }-${e.dataElementId}`\n\nOutlierAnalyisTable.convertElementFromApiResponse = e => ({\n    key: OutlierAnalyisTable.generateElementKey(e),\n    attributeOptionComboId: e.attributeOptionComboId,\n    categoryOptionComboId: e.categoryOptionComboId,\n    periodId: e.periodId,\n    organisationUnitId: e.sourceId,\n    dataElementId: e.dataElementId,\n    dataElement: e.dataElementName,\n    organisation: e.sourceName,\n    period: e.period.name,\n    min: e.min,\n    max: e.max,\n    value: Number.parseFloat(e.value),\n    marked: e.followup,\n})\n\nOutlierAnalyisTable.convertElementToToggleFollowupRequest = e => ({\n    dataElementId: e.dataElementId,\n    periodId: e.periodId,\n    organisationUnitId: e.organisationUnitId,\n    categoryOptionComboId: e.categoryOptionComboId,\n    attributeOptionComboId: e.attributeOptionComboId,\n    followup: !e.marked,\n})\n\nOutlierAnalyisTable.propTypes = {\n    elements: PropTypes.array.isRequired,\n    toggleCheckbox: PropTypes.func.isRequired,\n}\n\nOutlierAnalyisTable.contextTypes = {\n    d2: PropTypes.object,\n}\n\nexport default OutlierAnalyisTable\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport OutlierAnalyisTable from '../../components/outlier-analysis-table/OutlierAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '@dhis2/d2-i18n'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nexport const DEFAULT_STANDARD_DEVIATION = 3.0\n\nclass StdDevOutlierAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'standardDeviation',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            standardDeviation: DEFAULT_STANDARD_DEVIATION,\n        }\n\n        this.start = this.start.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.standardDeviationOnChange = this.standardDeviationOnChange.bind(\n            this\n        )\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                StdDevOutlierAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    start() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.standardDeviationOutliersAnalysis, {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n                standardDeviation: this.state.standardDeviation,\n            })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            OutlierAnalyisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    standardDeviationOnChange(event, index, value) {\n        this.setState({ standardDeviation: value })\n    }\n\n    toggleCheckbox(element) {\n        const api = this.context.d2.Api.getApi()\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                this.context.updateAppState({\n                    pageState: {\n                        loading: true,\n                    },\n                })\n                api.post(apiConf.endpoints.markDataValue, {\n                    followups: [\n                        OutlierAnalyisTable.convertElementToToggleFollowupRequest(\n                            currentElement\n                        ),\n                    ],\n                })\n                    .then(() => {\n                        if (this.isPageMounted()) {\n                            currentElement.marked = !currentElement.marked\n                            elements[i] = currentElement\n\n                            this.context.updateAppState({\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(\n                                        currentElement.marked\n                                            ? 'Marked'\n                                            : 'Unmarked'\n                                    ),\n                                },\n                                pageState: {\n                                    elements,\n                                    loading: false,\n                                },\n                            })\n                        }\n                    })\n                    .catch(() => {\n                        this.manageError()\n                    })\n                break\n            }\n        }\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.standardDeviation &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Std Dev Outlier Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                                <SelectField\n                                    id=\"standard-deviation\"\n                                    style={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t(\n                                        'Select number of standard deviations'\n                                    )}\n                                    onChange={this.standardDeviationOnChange}\n                                    value={this.state.standardDeviation}\n                                >\n                                    <MenuItem value={1.0} primaryText=\"1.0\" />\n                                    <MenuItem value={1.5} primaryText=\"1.5\" />\n                                    <MenuItem value={2.0} primaryText=\"2.0\" />\n                                    <MenuItem value={2.5} primaryText=\"2.5\" />\n                                    <MenuItem value={3} primaryText=\"3.0\" />\n                                    <MenuItem value={3.5} primaryText=\"3.5\" />\n                                    <MenuItem value={4} primaryText=\"4.0\" />\n                                    <MenuItem value={4.5} primaryText=\"4.5\" />\n                                    <MenuItem value={5} primaryText=\"5.0\" />\n                                </SelectField>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('start')}\n                            onClick={this.start}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <OutlierAnalyisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default StdDevOutlierAnalysis\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport OutlierAnalyisTable from '../../components/outlier-analysis-table/OutlierAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '@dhis2/d2-i18n'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nclass MinMaxOutlierAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            loading: false,\n        }\n\n        this.start = this.start.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                MinMaxOutlierAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    start() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.minMaxOutliersAnalysis, {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n            })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            OutlierAnalyisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    toggleCheckbox(element) {\n        const api = this.context.d2.Api.getApi()\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                this.context.updateAppState({\n                    pageState: {\n                        loading: true,\n                    },\n                })\n                api.post(apiConf.endpoints.markDataValue, {\n                    followups: [\n                        OutlierAnalyisTable.convertElementToToggleFollowupRequest(\n                            currentElement\n                        ),\n                    ],\n                })\n                    .then(() => {\n                        if (this.isPageMounted()) {\n                            currentElement.marked = !currentElement.marked\n                            elements[i] = currentElement\n\n                            this.context.updateAppState({\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(\n                                        currentElement.marked\n                                            ? 'Marked'\n                                            : 'Unmarked'\n                                    ),\n                                },\n                                pageState: {\n                                    elements,\n                                    loading: false,\n                                },\n                            })\n                        }\n                    })\n                    .catch(() => {\n                        this.manageError()\n                    })\n                break\n            }\n        }\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Min-Max Outlier Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('start')}\n                            onClick={this.start}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <OutlierAnalyisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default MinMaxOutlierAnalysis\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Checkbox,\n    FontIcon,\n    RaisedButton,\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n    IconButton,\n    Dialog,\n    FlatButton,\n} from 'material-ui'\nimport i18n from '@dhis2/d2-i18n'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../../components/download-as/DownloadAs'\nimport cssPageStyles from '../../Page.module.css'\nimport jsPageStyles from '../../PageStyles'\nimport styles from './FollowUpAnalysisTable.module.css'\nimport { apiConf } from '../../../server.conf'\n\nclass FollowUpAnalysisTable extends Component {\n    static propTypes = {\n        elements: PropTypes.array.isRequired,\n        toggleCheckbox: PropTypes.func.isRequired,\n        unfollow: PropTypes.func.isRequired,\n        loading: PropTypes.bool.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static generateElementKey = e =>\n        `${e.attributeOptionComboId}-${e.categoryOptionComboId}-${e.periodId}-${\n            e.sourceId\n        }-${e.dataElementId}`\n\n    static convertElementFromApiResponse = e => ({\n        key: FollowUpAnalysisTable.generateElementKey(e),\n        attributeOptionComboId: e.attributeOptionComboId,\n        categoryOptionComboId: e.categoryOptionComboId,\n        periodId: e.periodId,\n        organisationUnitId: e.sourceId,\n        dataElementId: e.dataElementId,\n        dataElement: e.dataElementName,\n        organisation: e.sourceName,\n        period: e.period.name,\n        min: e.min,\n        max: e.max,\n        value: Number.parseFloat(e.value, 10),\n        marked: !e.followup,\n        comment: e.comment,\n    })\n\n    static convertElementToUnFollowupRequest = e => ({\n        dataElementId: e.dataElementId,\n        periodId: e.periodId,\n        organisationUnitId: e.organisationUnitId,\n        categoryOptionComboId: e.categoryOptionComboId,\n        attributeOptionComboId: e.attributeOptionComboId,\n        followup: false,\n    })\n\n    static areElementsTheSame(element1, element2) {\n        return (\n            element1.attributeOptionComboId ===\n                element2.attributeOptionComboId &&\n            element1.categoryOptionComboId === element2.categoryOptionComboId &&\n            element1.periodId === element2.periodId &&\n            element1.organisationUnitId === element2.organisationUnitId &&\n            element1.dataElementId === element2.dataElementId\n        )\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            showComment: false,\n            comment: null,\n        }\n\n        this.unfollow = this.unfollow.bind(this)\n        this.closeCommentDialog = this.closeCommentDialog.bind(this)\n    }\n\n    unfollow() {\n        const unfollowups = []\n        for (let i = 0; i < this.props.elements.length; i++) {\n            const e = this.props.elements[i]\n            if (e.marked) {\n                unfollowups.push(\n                    FollowUpAnalysisTable.convertElementToUnFollowupRequest(e)\n                )\n            }\n        }\n\n        this.props.unfollow(unfollowups)\n    }\n\n    closeCommentDialog() {\n        this.setState({ showComment: false })\n    }\n\n    updateCheckbox(element) {\n        this.props.toggleCheckbox(element)\n    }\n\n    showComment(element) {\n        if (element.comment) {\n            this.setState({\n                showComment: true,\n                comment: element.comment,\n            })\n        }\n    }\n\n    render() {\n        let oneChecked = false\n\n        const commentDialogActions = [\n            <FlatButton\n                label={i18n.t('Close')}\n                primary\n                onClick={this.closeCommentDialog}\n            />,\n        ]\n\n        // Table Rows\n        const rows = this.props.elements.map(element => {\n            const updateCheckbox = () => {\n                this.updateCheckbox(element)\n            }\n\n            const showComment = () => {\n                this.showComment(element)\n            }\n\n            oneChecked = element.marked ? true : oneChecked\n\n            return (\n                <TableRow key={element.key}>\n                    <TableRowColumn>{element.dataElement}</TableRowColumn>\n                    <TableRowColumn>{element.organisation}</TableRowColumn>\n                    <TableRowColumn>{element.period}</TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.min} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.value} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.max} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.centerFlex}>\n                        <span className={cssPageStyles.checkboxWrapper}>\n                            <Checkbox\n                                checked={element.marked}\n                                onCheck={updateCheckbox}\n                                iconStyle={jsPageStyles.iconColor}\n                            />\n                        </span>\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.center}>\n                        {element.comment && (\n                            <IconButton key={element.key} onClick={showComment}>\n                                <FontIcon\n                                    className={'material-icons'}\n                                    style={jsPageStyles.cursorStyle}\n                                >\n                                    speaker_notes\n                                </FontIcon>\n                            </IconButton>\n                        )}\n                    </TableRowColumn>\n                </TableRow>\n            )\n        })\n\n        return (\n            <div>\n                <Dialog\n                    title={i18n.t('Comment')}\n                    actions={commentDialogActions}\n                    modal={false}\n                    open={this.state.showComment}\n                    onRequestClose={this.closeCommentDialog}\n                >\n                    <div id={'comment-content'}>{this.state.comment}</div>\n                </Dialog>\n                <div className={cssPageStyles.cardHeader}>\n                    <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n                </div>\n                <Table\n                    selectable={false}\n                    className={classNames(\n                        cssPageStyles.appTable,\n                        styles.followUpAnalysisTable\n                    )}\n                >\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                    >\n                        <TableRow>\n                            <TableHeaderColumn>\n                                {i18n.t('Data Element')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Organisation Unit')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Period')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Min')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Max')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Unfollow')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Comment')}\n                            </TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody displayRowCheckbox={false} stripedRows={false}>\n                        {rows}\n                    </TableBody>\n                </Table>\n                <div\n                    className={classNames(\n                        cssPageStyles.cardFooter,\n                        cssPageStyles.spaceBetween\n                    )}\n                >\n                    <RaisedButton\n                        id=\"unfollow-action\"\n                        primary\n                        disabled={this.props.loading || !oneChecked}\n                        label={i18n.t('unfollow')}\n                        onClick={this.unfollow}\n                    />\n                    <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FollowUpAnalysisTable\n","import React from 'react'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport FollowUpAnalysisTable from './follow-up-analysis-table/FollowUpAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '@dhis2/d2-i18n'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nclass FollowUpAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            loading: false,\n        }\n\n        this.getFollowUpList = this.getFollowUpList.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n        this.unfollow = this.unfollow.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                FollowUpAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    getFollowUpList() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            const request = {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n            }\n\n            api.post(apiConf.endpoints.folloupAnalysis, request)\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            FollowUpAnalysisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    toggleCheckbox(element) {\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                currentElement.marked = !currentElement.marked\n                elements[i] = currentElement\n                this.setState({ elements })\n                break\n            }\n        }\n    }\n\n    unfollow(unfollowups) {\n        const api = this.context.d2.Api.getApi()\n        this.context.updateAppState({\n            pageState: {\n                loading: true,\n            },\n        })\n\n        api.post(apiConf.endpoints.markDataValue, {\n            followups: unfollowups,\n        })\n            .then(() => {\n                if (this.isPageMounted()) {\n                    // remove unfollowed elements\n                    const elements = this.state.elements.filter(element => {\n                        for (let j = 0; j < unfollowups.length; j++) {\n                            const unfollow = unfollowups[j]\n                            if (\n                                FollowUpAnalysisTable.areElementsTheSame(\n                                    element,\n                                    unfollow\n                                )\n                            ) {\n                                return false\n                            }\n                        }\n\n                        return true\n                    })\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: i18n.t('Unfollow done'),\n                        },\n                        pageState: {\n                            loading: false,\n                            elements,\n                        },\n                    })\n                }\n            })\n            .catch(() => {\n                this.manageError()\n            })\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    <span>{i18n.t('Follow-Up Analysis')}</span>\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('follow up')}\n                            onClick={this.getFollowUpList}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <FollowUpAnalysisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                            unfollow={this.unfollow}\n                            loading={this.state.loading}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default FollowUpAnalysis\n","import ValidationRulesAnalysis from './validation-rules-analysis/ValidationRulesAnalysis'\nimport StdDevOutlierAnalysis from './std-dev-outlier-analysis/StdDevOutlierAnalysis'\nimport MinMaxOutlierAnalysis from './min-max-outlier-analysis/MinMaxOutlierAnalysis'\nimport FollowUpAnalysis from './follow-up-analysis/FollowUpAnalysis'\n\nexport const VALIDATION_RULES_ANALYSIS_SECTION_KEY = 'validationRulesAnalysis'\nexport const STD_DEV_OUTLIER_ANALYSIS_SECTION_KEY = 'stdDevOutlierAnalysis'\nexport const MIN_MAX_OUTLIER_ANALYSIS_SECTION_KEY = 'minMaxOutlierAnalysis'\nexport const FOLLOW_UP_ANALYSIS_SECTION_KEY = 'followUpAnalysis'\n\nexport const sections = [\n    {\n        key: VALIDATION_RULES_ANALYSIS_SECTION_KEY,\n        path: '/validation-rules-analysis',\n        component: ValidationRulesAnalysis,\n        info: {\n            label: 'Validation Rule Analysis',\n            icon: 'done_all',\n            description:\n                'Run validation rules in order to unveil anomalies and errors in the data in the database.',\n            actionText: 'Run Validation',\n            docs: 'validation_rule_analysis',\n        },\n    },\n    {\n        key: STD_DEV_OUTLIER_ANALYSIS_SECTION_KEY,\n        path: '/std-dev-outlier-analysis',\n        component: StdDevOutlierAnalysis,\n        info: {\n            label: 'Std Dev Outlier Analysis',\n            icon: 'show_chart',\n            description:\n                'Analyze potential outlier values based on standard deviations. Outlier values can be examined and marked for follow-up.',\n            actionText: 'Analyze',\n            docs: 'standard_deviation_analysis',\n        },\n    },\n    {\n        key: MIN_MAX_OUTLIER_ANALYSIS_SECTION_KEY,\n        path: '/min-max-outlier-analysis',\n        component: MinMaxOutlierAnalysis,\n        info: {\n            label: 'Min-Max Outlier Analysis',\n            icon: 'compare_arrows',\n            description:\n                'Analyze potential outlier values based on min and max values. Outlier values can be examined and marked for follow-up.',\n            actionText: 'Analyze',\n            docs: 'min_max_analysis',\n        },\n    },\n    {\n        key: FOLLOW_UP_ANALYSIS_SECTION_KEY,\n        path: '/follow-up-analysis',\n        component: FollowUpAnalysis,\n        info: {\n            label: 'Follow-Up Analysis',\n            icon: 'description',\n            description:\n                'View or edit data values marked for further follow-up during data entry or analysis.',\n            actionText: 'View Data Values',\n            docs: 'follow_up_analysis',\n        },\n    },\n]\n\nexport const getDocsKeyForSection = sectionKey => {\n    for (let i = 0; i < sections.length; i++) {\n        const section = sections[i]\n        if (section.key === sectionKey) {\n            return section.info.docs\n        }\n    }\n\n    return ''\n}\n\nexport default sections\n","import React from 'react'\nimport classNames from 'classnames'\nimport GridSection from './grid-section/GridSection'\nimport styles from './Home.module.css'\nimport { sections } from '../sections.conf'\n\nconst Home = () => {\n    const gridElements = sections.map(section => (\n        <div\n            key={section.key}\n            className={classNames(\n                'col-sm-12 col-md-6 col-lg-4',\n                styles.gridContainer\n            )}\n        >\n            <GridSection key={section.key} section={section} />\n        </div>\n    ))\n\n    return (\n        <div id=\"grid-list-id\" className=\"row\">\n            {gridElements}\n        </div>\n    )\n}\n\nexport default Home\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nclass NoMatch extends PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>\n                    No match for <code>{this.props.location.pathname}</code>\n                </h3>\n            </div>\n        )\n    }\n}\n\nexport default NoMatch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from '../../pages/home/Home'\nimport NoMatch from './NoMatch'\nimport { sections } from '../../pages/sections.conf'\n\nconst AppRouter = ({ pageState }) => {\n    const routes = sections.map(section => {\n        const routeRender = () => {\n            const Page = section.component\n            return <Page sectionKey={section.key} {...pageState} />\n        }\n        return (\n            <Route\n                key={section.key}\n                exact\n                path={section.path}\n                render={routeRender}\n            />\n        )\n    })\n\n    /* Home route */\n    const homeRouteRender = () => <Home sectionKey=\"home\" />\n\n    routes.push(<Route key=\"home\" exact path=\"/\" render={homeRouteRender} />)\n\n    /* No Match Route */\n    routes.push(<Route key=\"no-match-route\" component={NoMatch} />)\n\n    return (\n        <main>\n            <Switch>{routes}</Switch>\n        </main>\n    )\n}\n\nAppRouter.propTypes = {\n    pageState: PropTypes.object,\n}\n\nAppRouter.defaultProps = {\n    pageState: {},\n}\n\nexport default AppRouter\n","import 'typeface-roboto'\nimport 'material-design-icons-iconfont'\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { HeaderBar } from '@dhis2/ui-widgets'\nimport Sidebar from 'd2-ui/lib/sidebar/Sidebar.component'\nimport CircularProgress from 'd2-ui/lib/circular-progress/CircularProgress'\nimport FeedbackSnackbar from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbar.component'\nimport './custom-css/D2UISidebarOverrides.css'\nimport i18n from './locales'\nimport AppRouter from './components/app-router/AppRouter'\nimport styles from './App.module.css'\nimport { sections } from './pages/sections.conf'\n\nclass App extends PureComponent {\n    static childContextTypes = {\n        d2: PropTypes.object,\n        showSnackbar: PropTypes.bool,\n        snackbarConf: PropTypes.shape({\n            type: PropTypes.string,\n            message: PropTypes.string,\n        }),\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currentSection: '',\n            showSnackbar: false,\n            snackbarConf: {\n                type: '',\n                message: '',\n            },\n            pageState: {},\n        }\n\n        this.updateAppState = this.updateAppState.bind(this)\n    }\n\n    getChildContext() {\n        return {\n            d2: this.props.d2,\n            showSnackbar: this.state.showSnackbar,\n            snackbarConf: this.state.snackbarConf,\n            currentSection: this.state.currentSection,\n            updateAppState: this.updateAppState,\n        }\n    }\n\n    updateAppState(appState) {\n        if (\n            appState.currentSection &&\n            !appState.pageState &&\n            this.state.currentSection !== appState.currentSection\n        ) {\n            // clear page state because we are updating page\n            this.setState({ ...appState, pageState: {}, showSnackbar: false })\n        } else {\n            this.setState(appState)\n        }\n    }\n\n    render() {\n        const nonOnChangeSection = () => null\n        const translatedSections = sections.map(section =>\n            Object.assign(section, {\n                icon: section.info.icon,\n                label: i18n.t(section.info.label),\n                containerElement: <Link to={section.path} />,\n            })\n        )\n\n        const feedbackElement = this.state.pageState.loading ? (\n            <div className={styles.centered}>\n                <CircularProgress />\n            </div>\n        ) : (\n            <FeedbackSnackbar\n                show={this.state.showSnackbar}\n                conf={this.state.snackbarConf}\n            />\n        )\n\n        return (\n            <div>\n                <HeaderBar appName={i18n.t('Data Quality')} />\n                <Sidebar\n                    sections={translatedSections}\n                    currentSection={this.state.currentSection}\n                    onChangeSection={nonOnChangeSection}\n                />\n                <div className={styles.contentWrapper}>\n                    <div className={styles.contentArea}>\n                        <AppRouter pageState={this.state.pageState} />\n                    </div>\n                </div>\n                <div id=\"feedback-snackbar\">{feedbackElement}</div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import Spacing from 'material-ui/styles/spacing'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport {\n    blue100,\n    blue700,\n    grey100,\n    grey400,\n    orange500,\n    orangeA200,\n    darkBlack,\n    white,\n} from 'material-ui/styles/colors'\nimport { fade } from 'material-ui/utils/colorManipulator'\n\nconst theme = {\n    spacing: Spacing,\n    fontFamily: 'Roboto, sans-serif',\n    palette: {\n        primary1Color: '#004ba0',\n        primary2Color: blue700,\n        primary3Color: blue100,\n        accent1Color: orange500,\n        accent2Color: grey100,\n        accent3Color: orangeA200,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey400,\n        disabledColor: fade(darkBlack, 0.3),\n    },\n}\n\nconst muiTheme = getMuiTheme(theme)\n\nexport default muiTheme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, withRouter } from 'react-router-dom'\nimport { getUserSettings, init } from 'd2/lib/d2'\nimport log from 'loglevel'\nimport { configI18n, injectTranslationsToD2 } from './configI18n'\nimport './index.css'\nimport App from './App'\nimport appTheme from './theme'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from '@dhis2/app-runtime'\nimport { CssReset } from '@dhis2/ui-core'\nimport { MuiThemeProvider } from 'material-ui/styles'\n\nlog.setLevel(\n    process.env.NODE_ENV === 'production' ? log.levels.INFO : log.levels.DEBUG\n)\n\nconst AppComponent = withRouter(App)\nconst baseUrl = `${process.env.REACT_APP_DHIS2_BASE_URL}/api/${\n    process.env.REACT_APP_DHIS2_API_VERSION\n}`\nconst schemas = ['organisationUnit', 'dataSet', 'validationRuleGroup']\n\nconst config = {\n    baseUrl: process.env.REACT_APP_DHIS2_BASE_URL,\n    apiVersion: process.env.REACT_APP_DHIS2_API_VERSION,\n}\n\nconst render = d2 =>\n    ReactDOM.render(\n        <Provider config={config}>\n            <MuiThemeProvider muiTheme={appTheme}>\n                <div>\n                    <CssReset />\n                    <HashRouter>\n                        <AppComponent d2={d2} />\n                    </HashRouter>\n                </div>\n            </MuiThemeProvider>\n        </Provider>,\n        document.getElementById('root')\n    )\n\nconst start = async () => {\n    const d2 = await init({ baseUrl, schemas })\n    const userSettings = await getUserSettings()\n    const uiLocale = userSettings.keyUiLocale\n\n    sessionStorage.setItem('uiLocale', uiLocale || 'en')\n    injectTranslationsToD2(d2)\n    configI18n(userSettings)\n    render(d2)\n}\n\nstart()\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridElement\":\"GridSection_gridElement__3DOqL\",\"gridTitleBar\":\"GridSection_gridTitleBar__2-OEV\",\"gridTitleDescription\":\"GridSection_gridTitleDescription__1jy96\",\"gridIcon\":\"GridSection_gridIcon__1INTx\",\"gridDescription\":\"GridSection_gridDescription__1NNso\",\"gridActionText\":\"GridSection_gridActionText__1S-Gc\"};"],"sourceRoot":""}