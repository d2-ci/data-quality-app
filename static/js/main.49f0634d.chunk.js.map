{"version":3,"sources":["pages/Page.module.css","pages/validation-rules-analysis/validation-rules-analysis-table/ValidationRulesAnalysisTable.module.css","components/table/TableCellContent.module.css","components/available-datasets-select/AvailableDatasetsSelect.module.css","pages/home/Home.module.css","components/alert-bar/AlertBar.module.css","components/available-organisation-units-tree/AvailableOrganisationUnitsTree.module.css","components/download-as/DownloadAs.module.css","components/outlier-analysis-table/OutlierAnalysisTable.module.css","pages/follow-up-analysis/follow-up-analysis-table/FollowUpAnalysisTable.module.css","pages/validation-rules-analysis/validation-rules-details/ValidationRulesDetails.module.css","configI18n.js","locales/index.js","pages/home/grid-section/GridSection.js","pages/Page.js","components/alert-bar/AlertBar.js","components/validation-rule-groups-select/ValidationRuleGroupsSelect.js","components/available-organisation-units-tree/AvailableOrganisationUnitsTree.js","helpers/docs.js","components/page-helper/PageHelper.js","pages/PageStyles.js","components/formatters/FormattedNumber.js","components/download-as/DownloadAs.js","server.conf.js","pages/validation-rules-analysis/validation-rules-details/ValidationRulesDetails.js","components/table/TableCellContent.js","pages/validation-rules-analysis/validation-rules-analysis-table/ValidationRulesAnalysisTable.js","helpers/dates.js","pages/validation-rules-analysis/ValidationRulesAnalysis.js","components/available-datasets-select/AvailableDatasetsSelect.js","components/outlier-analysis-table/OutlierAnalysisTable.js","pages/outlier-detection/OutlierDetection.js","pages/follow-up-analysis/follow-up-analysis-table/FollowUpAnalysisTable.js","pages/follow-up-analysis/FollowUpAnalysis.js","pages/sections.conf.js","pages/home/Home.js","components/app-router/NoMatch.js","components/app-router/AppRouter.js","App.js","theme.js","serviceWorker.js","index.js","pages/home/grid-section/GridSection.module.css","App.module.css"],"names":["module","exports","section","mainButton","appTable","right","center","centerFlex","pageHeader","cardHeader","cardFooter","spaceBetween","end","formLabel","checkboxWrapper","validationTable","operator","tableCellContent","tableCellContent-narrow","tableCellContent-medium","tableCellContent-wide","select","options","gridContainer","alertBar","tree","downloadAs","outlierAnalysisTable","followUpAnalysisTable","sectionBox","sectionTitle","sectionSubTitle","noData","configI18n","userSettings","lang","keyUiLocale","code","langs","prefixed","map","c","concat","includes","filter","startsWith","length","isLangRTL","document","body","setAttribute","i18n","changeLanguage","moment","locale","injectTranslationsToD2","d2","translations","settings","app_search_placeholder","profile","account","help","log_out","about_dhis2","manage_my_apps","no_results_found","interpretations","messages","Object","keys","forEach","key","t","assign","namespace","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","uz_LatnTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","GridSection","react_default","a","createElement","react_router_dom","className","to","this","props","path","GridList","classNames","styles","gridElement","gridTitleBar","gridTitleDescription","info","label","FontIcon_default","gridIcon","icon","gridDescription","description","gridActionText","actionText","PureComponent","Page","pageMounted","context","currentSection","sectionKey","updateAppState","error","isPageMounted","messageError","message","showSnackbar","snackbarConf","type","ERROR","pageState","loading","Component","contextTypes","PropTypes","object","string","func","AlertBar","index_es","style","display","show","ALL_VALIDATION_RULE_GROUPS_ID","ALL_VALIDATION_RULE_GROUPS_OPTION","id","displayName","ValidationRuleGroupsSelect","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","validationRuleGroups","selected","onChange","bind","assertThisInitialized","_this2","translatedAllValidationRulesOption","models","validationRuleGroup","list","paging","fields","then","validationRuleGroupsResponse","setState","toConsumableArray","toArray","catch","manageError","event","index","value","selectedName","SelectField_default","floatingLabelText","item","MenuItem_default","primaryText","defaultProps","AvailableOrganisationUnitsTree","rootsWithMembers","getOrgUnitIdFromPath","handleOrgUnitClickSingle","handleOrgUnitClickMulti","loadAvailableOrgUnits","organisationUnitsResponse","organisationUnits","currentUser","getOrganisationUnits","orgUnits","size","authorities","has","level","split","pop","orgUnit","_ref","paths","selectedPath","_this3","onSelectClick","multiselect","rootOrgUnit","OrgUnitTree_component","hideMemberCount","Boolean","root","initiallyExpanded","getDocsVersion","major","minor","snapshot","PageHelper","_this$props","lng","sectionDocsKey","iconStyle","color","href","system","version","target","rel","tooltip","tooltipPosition","iconClassName","pageStyles","inputForm","width","iconColor","fill","cursorStyle","cursor","FormattedNumber","minimumFractionDigits","maximumFractionDigits","Intl","NumberFormat","sessionStorage","getItem","format","DownloadAs","baseUrl","Api","getApi","endpoint","fileTypes","timestamp","Date","now","queryStr","reduce","acc","hrefs","getHrefs","pdf","download","xls","csv","apiConf","endpoints","validationRulesAnalysis","validationRulesExpression","validationRulesReport","validationRules","outlierDetection","folloupAnalysis","markOutlierDataValue","markFollowUpDataValue","reportAnalysis","results","analysis","limit","ValidationRulesDetails","openDetails","rule","expression","leftSide","rightSide","loadDetails","handleClose","nextProps","nextState","property","hasOwnProperty","ValidationRulesAnalysis","STATE_PROPERTIES","api","requestRule","validationRuleId","requestExpression","periodId","organisationUnitId","attributeOptionComboId","Promise","all","get","_ref2","slicedToArray","dialogActions","primary","onClick","result","displayDescription","showNoData","side","cssPageStyles","buildSection","elements","classNameRow","element","name","formatters_FormattedNumber","Number","jsPageStyles","autoScrollBodyContent","title","actions","modal","open","onRequestClose","propTypes","isRequired","TableCellContent","cx","defineProperty","children","ValidationRulesAnalysisTable","shouldDisplayAttributeOptionCombo","some","e","attributeOptionCombo","rows","organisation","table_TableCellContent","period","importance","validationRule","leftValue","rightValue","validation_rules_details_ValidationRulesDetails","download_as_DownloadAs","selectable","fixedHeader","bodyStyle","overflowX","displaySelectAll","adjustForCheckbox","enableSelectAll","displayRowCheckbox","stripedRows","convertDateToApiDateFormat","date","toISOString","showTable","startDate","endDate","validationRuleGroupId","notification","persist","validate","back","startDateOnChange","endDateOnChange","organisationUnitOnChange","validationRuleGroupOnChange","updateSendNotifications","updatePersistNewResults","isFormValid","request","ou","vrg","post","objectSpread","response","convertElementFromApiResponse","feedback","SUCCESS","checked","page_helper_PageHelper","getDocsKeyForSection","alert_bar_AlertBar","showAlertBar","Card","available_organisation_units_tree_AvailableOrganisationUnitsTree","DatePicker_default","textFieldStyle","defaultDate","maxDate","minDate","validation_rule_groups_select_ValidationRuleGroupsSelect","Checkbox_default","labelPosition","onCheck","RaisedButton_default","disabled","isActionDisabled","validation_rules_analysis_table_ValidationRulesAnalysisTable","generateElementKey","attributeOptionComboDisplayName","organisationUnitDisplayName","periodDisplayName","validationRuleDescription","leftSideValue","rightSideValue","AvailableDatasetsSelect","dataSets","dataSet","dataSetsResponse","multiple","OutlierAnalyisTable","csvQueryStr","toggleCheckbox","isZScoreAlgorithm","algorithm","downloadLink","pe","ouName","zScore","absDev","stdDev","mean","lowerBound","upperBound","marked","getDisplayName","str","deName","cocName","aocName","categoryOptionComboId","sourceId","dataElementId","aoc","coc","de","followup","convertElementToToggleFollowupRequest","dataElement","categoryOptionCombo","DEFAULT_THRESHOLD","DEFAULT_ALGORITHM","DEFAULT_MAX_RESULTS","DEFAULT_SORT_BY","threeMonthsAgo","setMonth","getMonth","OutlierDetection","organisationUnitIds","dataSetIds","threshold","showAdvancedZScoreFields","dataStartDate","dataEndDate","maxResults","sortBy","start","dataSetsOnChange","thresholdOnChange","algorithmOnChange","dataStartDateOnChange","dataEndDateOnChange","maxResultsOnChange","sortByOnChange","toggleShowAdvancedZScoreFields","createQueryString","outlierValues","querySegments","push","join","selectedOptions","i","currentElementIndex","findIndex","currentElement","data","update","updatedElement","slice","buttonLabel","Fragment","FlatButton_default","fullWidth","marginTop","available_datasets_select_AvailableDatasetsSelect","renderThresholdField","renderZScoreFields","OutlierAnalysisTable","FollowUpAnalysisTable","showComment","comment","unfollow","closeCommentDialog","element1","element2","unfollowups","convertElementToUnFollowupRequest","oneChecked","commentDialogActions","min","max","updateCheckbox","dataElementName","sourceName","parseFloat","FollowUpAnalysis","getFollowUpList","ds","followups","j","areElementsTheSame","follow_up_analysis_table_FollowUpAnalysisTable","sections","component","docs","Home","gridElements","grid_section_GridSection","NoMatch","location","pathname","AppRouter","routes","react_router","exact","render","home_Home","App","appState","translatedSections","containerElement","feedbackElement","centered","CircularProgress","FeedbackSnackbar_component","conf","hideSidebar","contentWrapperClassName","contentWrapperNoMargin","contentWrapper","HeaderBar","appName","Sidebar_component","onChangeSection","contentArea","app_router_AppRouter","childContextTypes","bool","shape","theme","spacing","Spacing","fontFamily","palette","primary1Color","primary2Color","blue700","primary3Color","blue100","accent1Color","orange500","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","window","hostname","match","log","setLevel","levels","INFO","AppComponent","withRouter","process","schemas","config","apiVersion","ReactDOM","build_es","appTheme","CssReset","getElementById","asyncToGenerator","regenerator_default","mark","_callee","uiLocale","wrap","_context","prev","next","init","sent","getUserSettings","setItem","stop","apply","arguments","navigator","serviceWorker","ready","registration","unregister","leftBar"],"mappings":"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","file":"static/js/main.49f0634d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Page_section__48ljQ\",\"mainButton\":\"Page_mainButton__38d7P\",\"appTable\":\"Page_appTable__3ksZt\",\"right\":\"Page_right__oLgt0\",\"center\":\"Page_center__120Pl\",\"centerFlex\":\"Page_centerFlex__3KXC0\",\"pageHeader\":\"Page_pageHeader__1NFoO\",\"cardHeader\":\"Page_cardHeader__xj55q\",\"cardFooter\":\"Page_cardFooter__RiSMS\",\"spaceBetween\":\"Page_spaceBetween__2b-hs\",\"end\":\"Page_end__3xjyQ\",\"formLabel\":\"Page_formLabel__22ela\",\"checkboxWrapper\":\"Page_checkboxWrapper__1ypbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"validationTable\":\"ValidationRulesAnalysisTable_validationTable__IZ4f8\",\"operator\":\"ValidationRulesAnalysisTable_operator__1yruT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCellContent\":\"TableCellContent_tableCellContent__1MUDr\",\"tableCellContent-narrow\":\"TableCellContent_tableCellContent-narrow__1aY0P\",\"tableCellContent-medium\":\"TableCellContent_tableCellContent-medium__2drVF\",\"tableCellContent-wide\":\"TableCellContent_tableCellContent-wide__kE-pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"AvailableDatasetsSelect_select__2RJaO\",\"options\":\"AvailableDatasetsSelect_options__2nV_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"Home_gridContainer__2RzmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBar\":\"AlertBar_alertBar__1nykA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tree\":\"AvailableOrganisationUnitsTree_tree__36zmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"downloadAs\":\"DownloadAs_downloadAs__EXpfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outlierAnalysisTable\":\"OutlierAnalysisTable_outlierAnalysisTable__eaMyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followUpAnalysisTable\":\"FollowUpAnalysisTable_followUpAnalysisTable__plQH2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionBox\":\"ValidationRulesDetails_sectionBox__3I79x\",\"sectionTitle\":\"ValidationRulesDetails_sectionTitle__j-YIb\",\"sectionSubTitle\":\"ValidationRulesDetails_sectionSubTitle__3oXtg\",\"noData\":\"ValidationRulesDetails_noData__csWGG\"};","import i18n from '@dhis2/d2-i18n'\nimport moment from 'moment'\n\nconst isLangRTL = code => {\n    const langs = ['ar', 'fa', 'ur']\n    const prefixed = langs.map(c => `${c}-`)\n\n    return (\n        langs.includes(code) ||\n        prefixed.filter(c => code.startsWith(c)).length > 0\n    )\n}\n\nexport const configI18n = userSettings => {\n    const lang = userSettings.keyUiLocale\n\n    if (isLangRTL(lang)) {\n        document.body.setAttribute('dir', 'rtl')\n    }\n    i18n.changeLanguage(lang)\n    moment.locale(lang)\n}\n\nexport const injectTranslationsToD2 = d2 => {\n    if (d2) {\n        const translations = {\n            settings: 'Settings',\n            app_search_placeholder: 'Search apps',\n            profile: 'Profile',\n            account: 'Account',\n            help: 'Help',\n            log_out: 'Log out',\n            about_dhis2: 'About DHIS 2',\n            manage_my_apps: 'Manage my apps',\n            no_results_found: 'No results found',\n            interpretations: 'Interpretations',\n            messages: 'Messages',\n        }\n        const translationKeys = Object.keys(translations)\n\n        translationKeys.forEach(key => {\n            translations[key] = i18n.t(translations[key])\n        })\n\n        Object.assign(d2.i18n.translations, translations)\n    }\n}\n\nexport default configI18n\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport uz_LatnTranslations from './uz_Latn/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'data-quality-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('uz_Latn', namespace, uz_LatnTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { GridTile } from 'material-ui/GridList'\nimport FontIcon from 'material-ui/FontIcon'\nimport classNames from 'classnames'\nimport styles from './GridSection.module.css'\n\nclass GridSection extends PureComponent {\n    static propTypes = {\n        section: PropTypes.shape({\n            key: PropTypes.string,\n            path: PropTypes.string,\n            info: PropTypes.shape({\n                label: PropTypes.func,\n                description: PropTypes.func,\n                icon: PropTypes.string,\n                actionText: PropTypes.func,\n            }),\n        }).isRequired,\n    }\n\n    render() {\n        return (\n            <Link className=\"link\" to={this.props.section.path}>\n                <GridTile\n                    key={this.props.section.key}\n                    className={classNames('section', styles.gridElement)}\n                >\n                    <div className={classNames('row', styles.gridTitleBar)}>\n                        <span\n                            className={classNames(\n                                'section-title',\n                                styles.gridTitleDescription\n                            )}\n                        >\n                            {this.props.section.info.label()}\n                        </span>\n                        <FontIcon\n                            className={classNames(\n                                'material-icons',\n                                'icon',\n                                styles.gridIcon\n                            )}\n                        >\n                            {this.props.section.info.icon}\n                        </FontIcon>\n                    </div>\n                    <span\n                        className={classNames(\n                            'section-description',\n                            'row',\n                            styles.gridDescription\n                        )}\n                    >\n                        {this.props.section.info.description()}\n                    </span>\n                    <span\n                        className={classNames(\n                            'section-action-text',\n                            'row',\n                            styles.gridActionText\n                        )}\n                    >\n                        {this.props.section.info.actionText()}\n                    </span>\n                </GridTile>\n            </Link>\n        )\n    }\n}\n\nexport default GridSection\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ERROR } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport i18n from '@dhis2/d2-i18n'\n\nclass Page extends Component {\n    static propTypes = {\n        sectionKey: PropTypes.string.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    componentWillMount() {\n        this.pageMounted = true\n\n        // update section on side bar\n        if (this.context.currentSection !== this.props.sectionKey) {\n            this.context.updateAppState({\n                currentSection: this.props.sectionKey,\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this.pageMounted = false\n    }\n\n    isPageMounted() {\n        return this.pageMounted\n    }\n\n    manageError(error) {\n        if (this.isPageMounted()) {\n            const messageError =\n                error && error.message\n                    ? error.message\n                    : i18n.t('An unexpected error happened during analysis')\n\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: ERROR,\n                    message: messageError,\n                },\n                pageState: {\n                    loading: false,\n                },\n            })\n        }\n    }\n}\n\nexport default Page\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Paper } from 'material-ui'\nimport styles from './AlertBar.module.css'\nimport i18n from '@dhis2/d2-i18n'\n\nclass AlertBar extends PureComponent {\n    static propTypes = {\n        show: PropTypes.bool.isRequired,\n    }\n\n    render() {\n        return (\n            <Paper>\n                <div\n                    className={styles.alertBar}\n                    style={{ display: this.props.show ? 'flex' : 'none' }}\n                >\n                    {i18n.t(\n                        'More than 500 values found, please narrow the search to see all'\n                    )}\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default AlertBar\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport i18n from '@dhis2/d2-i18n'\n\nexport const ALL_VALIDATION_RULE_GROUPS_ID = -1\nexport const ALL_VALIDATION_RULE_GROUPS_OPTION = {\n    id: ALL_VALIDATION_RULE_GROUPS_ID,\n    displayName: '[All Validation Rules]',\n}\n\nclass ValidationRuleGroupsSelect extends PureComponent {\n    static propTypes = {\n        style: PropTypes.object,\n        onChange: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        style: {},\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            validationRuleGroups: [ALL_VALIDATION_RULE_GROUPS_OPTION],\n            selected: ALL_VALIDATION_RULE_GROUPS_ID,\n        }\n\n        this.onChange = this.onChange.bind(this)\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        const translatedAllValidationRulesOption = ALL_VALIDATION_RULE_GROUPS_OPTION\n        translatedAllValidationRulesOption.displayName = i18n.t(\n            ALL_VALIDATION_RULE_GROUPS_OPTION.displayName\n        )\n        d2.models.validationRuleGroup\n            .list({\n                paging: false,\n                fields: 'id,displayName',\n            })\n            .then(validationRuleGroupsResponse => {\n                this.setState({\n                    validationRuleGroups: [\n                        translatedAllValidationRulesOption,\n                        ...validationRuleGroupsResponse.toArray(),\n                    ],\n                })\n            })\n            .catch(() => {\n                this.manageError()\n            })\n    }\n\n    onChange(event, index, value) {\n        this.setState({\n            selected: value,\n            selectedName:\n                value === ALL_VALIDATION_RULE_GROUPS_ID\n                    ? '[All Validation Rules]'\n                    : this.state.validationRuleGroups[index].displayName,\n        })\n\n        this.props.onChange(event, index, value)\n    }\n\n    render() {\n        return (\n            <SelectField\n                style={this.props.style}\n                floatingLabelText={i18n.t('Validation Rule Group')}\n                onChange={this.onChange}\n                value={this.state.selected}\n            >\n                {this.state.validationRuleGroups.map(item => (\n                    <MenuItem\n                        key={item.id}\n                        value={item.id}\n                        primaryText={item.displayName}\n                    />\n                ))}\n            </SelectField>\n        )\n    }\n}\n\nexport default ValidationRuleGroupsSelect\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component'\nimport i18n from '@dhis2/d2-i18n'\nimport styles from './AvailableOrganisationUnitsTree.module.css'\n\nclass AvailableOrganisationUnitsTree extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        onChange: PropTypes.func,\n        multiselect: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        onChange: null,\n        multiselect: false,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            selected: [],\n            rootsWithMembers: null,\n        }\n\n        this.getOrgUnitIdFromPath = this.getOrgUnitIdFromPath.bind(this)\n        this.handleOrgUnitClickSingle = this.handleOrgUnitClickSingle.bind(this)\n        this.handleOrgUnitClickMulti = this.handleOrgUnitClickMulti.bind(this)\n        this.loadAvailableOrgUnits = this.loadAvailableOrgUnits.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.state.rootsWithMembers === null) {\n            this.loadAvailableOrgUnits()\n                .then(organisationUnitsResponse => {\n                    const organisationUnits = organisationUnitsResponse.toArray()\n                    this.setState({\n                        rootsWithMembers: organisationUnits,\n                    })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    async loadAvailableOrgUnits() {\n        const d2 = this.context.d2\n\n        const orgUnits = await d2.currentUser.getOrganisationUnits({\n            fields: 'id,displayName,path,children::isNotEmpty,memberCount',\n            paging: false,\n        })\n\n        if (!orgUnits.size && d2.currentUser.authorities.has('ALL')) {\n            // if special all-authority we have access to all orgunits\n            return d2.models.organisationUnits.list({\n                paging: false,\n                level: 1,\n                fields: 'id,displayName,path,children::isNotEmpty,memberCount',\n            })\n        }\n\n        return orgUnits\n    }\n\n    getOrgUnitIdFromPath(path) {\n        return path.split('/').pop()\n    }\n\n    handleOrgUnitClickSingle(event, orgUnit) {\n        if (this.state.selected.includes(orgUnit.path)) {\n            return\n        }\n        const id = this.getOrgUnitIdFromPath(orgUnit.path)\n        this.setState({ selected: [orgUnit.path] })\n        this.props.onChange && this.props.onChange(id)\n    }\n\n    handleOrgUnitClickMulti(event, { path }) {\n        const { selected } = this.state\n        const paths = selected.includes(path)\n            ? selected.filter(selectedPath => selectedPath !== path)\n            : [...this.state.selected, path]\n\n        this.setState({ selected: paths })\n        this.props.onChange &&\n            this.props.onChange(paths.map(this.getOrgUnitIdFromPath))\n    }\n\n    render() {\n        if (!this.state.rootsWithMembers) {\n            return <span>{i18n.t('Updating Organisation Units Tree...')}</span>\n        }\n\n        if (this.state.rootsWithMembers.length < 1) {\n            return (\n                <p>\n                    {i18n.t(\n                        'You do not have access to any organisation units.'\n                    )}\n                </p>\n            )\n        }\n\n        const onSelectClick = this.props.multiselect\n            ? this.handleOrgUnitClickMulti\n            : this.handleOrgUnitClickSingle\n\n        return (\n            <div className={styles.tree}>\n                {this.state.rootsWithMembers.map(rootOrgUnit => (\n                    <OrgUnitTree\n                        key={rootOrgUnit.id}\n                        hideMemberCount={Boolean(true)}\n                        root={rootOrgUnit}\n                        selected={this.state.selected}\n                        initiallyExpanded={[`/${rootOrgUnit.id}`]}\n                        onSelectClick={onSelectClick}\n                    />\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default AvailableOrganisationUnitsTree\n","export const DOCS_LINK = 'https://docs.dhis2.org'\nexport const DOCS_TOOLTIP_LABEL = 'Open user guide'\n\n/**\n * Returns the \"version\" of the documentation that corresponds with the current dhis2 version.\n *\n * @param {Object} version - The version definition as provided by d2.system.version.\n * @param {number} version.minor - The minor dhis2 version. e.g. The 25 in 2.25.\n * @param {boolean} version.snapshot - True when the current version is the snapshot(master/development) branch.\n *\n * @returns {string} `master` for a snapshot branch. `25` for 2.25 etc.\n */\nexport const getDocsVersion = ({ major, minor, snapshot }) => {\n    if (snapshot) {\n        return 'master'\n    }\n    return `${major}.${minor}`\n}\n\nexport default getDocsVersion\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { IconButton } from 'material-ui'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    getDocsVersion,\n    DOCS_LINK,\n    DOCS_TOOLTIP_LABEL,\n} from '../../helpers/docs'\n\nclass PageHelper extends PureComponent {\n    static propTypes = {\n        lng: PropTypes.string,\n        sectionDocsKey: PropTypes.string.isRequired,\n    }\n\n    static defaultProps = {\n        lng: 'en',\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    render() {\n        const { d2 } = this.context\n        const { lng, sectionDocsKey } = this.props\n        return (\n            <IconButton\n                className=\"helper-icon\"\n                iconStyle={{ color: '#276696' }}\n                href={`${DOCS_LINK}/${getDocsVersion(\n                    d2.system.version\n                )}/${lng}/user/html/${sectionDocsKey}.html`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                tooltip={i18n.t(DOCS_TOOLTIP_LABEL)}\n                tooltipPosition=\"bottom-center\"\n                iconClassName=\"material-icons\"\n            >\n                help\n            </IconButton>\n        )\n    }\n}\n\nexport default PageHelper\n","const pageStyles = {\n    inputForm: {\n        width: '100%',\n    },\n    iconColor: {\n        fill: '#ff9900',\n    },\n    cursorStyle: {\n        cursor: 'pointer',\n    },\n}\n\nexport default pageStyles\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FormattedNumber = ({\n    value,\n    minimumFractionDigits,\n    maximumFractionDigits,\n}) => (\n    <span>\n        {new Intl.NumberFormat(sessionStorage.getItem('uiLocale'), {\n            minimumFractionDigits,\n            maximumFractionDigits,\n        }).format(value)}\n    </span>\n)\n\nFormattedNumber.defaultProps = {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n}\n\nFormattedNumber.propTypes = {\n    value: PropTypes.number.isRequired,\n    minimumFractionDigits: PropTypes.number,\n    maximumFractionDigits: PropTypes.number,\n}\n\nexport default FormattedNumber\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport styles from './DownloadAs.module.css'\n\nclass DownloadAs extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        endpoint: PropTypes.string.isRequired,\n        fileTypes: PropTypes.arrayOf(PropTypes.oneOf(['pdf', 'xls', 'csv'])),\n        queryStr: PropTypes.string,\n    }\n\n    static defaultProps = {\n        fileTypes: ['pdf', 'xls', 'csv'],\n    }\n\n    getHrefs() {\n        const { baseUrl } = this.context.d2.Api.getApi()\n        const { endpoint, fileTypes } = this.props\n        const timestamp = Date.now()\n        // The new outlierDetection endpoint produces the correct report\n        // based on query params, but older endpoints only take a timestamp\n        const queryStr = this.props.queryStr || `t=${timestamp}`\n\n        return fileTypes.reduce((acc, type) => {\n            acc[type] = `${baseUrl}${endpoint}.${type}?${queryStr}`\n            return acc\n        }, {})\n    }\n\n    render() {\n        const { fileTypes } = this.props\n        const hrefs = this.getHrefs()\n        return (\n            <div className={styles.downloadAs}>\n                {fileTypes.includes('pdf') && (\n                    <a className=\"export-pdf-action\" href={hrefs.pdf} download>\n                        {i18n.t('DOWNLOAD AS PDF')}\n                    </a>\n                )}\n                {fileTypes.includes('xls') && (\n                    <a className=\"export-xls-action\" href={hrefs.xls} download>\n                        {i18n.t('DOWNLOAD AS XLS')}\n                    </a>\n                )}\n                {fileTypes.includes('csv') && (\n                    <a className=\"export-csv-action\" href={hrefs.csv} download>\n                        {i18n.t('DOWNLOAD AS CSV')}\n                    </a>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default DownloadAs\n","export const apiConf = {\n    endpoints: {\n        validationRulesAnalysis: '/dataAnalysis/validationRules',\n        validationRulesExpression: '/dataAnalysis/validationRulesExpression',\n        validationRulesReport: '/dataAnalysis/validationRules/report',\n        validationRules: '/validationRules',\n        outlierDetection: '/outlierDetection',\n        folloupAnalysis: '/dataAnalysis/followup',\n        markOutlierDataValue: '/dataValues/followup',\n        markFollowUpDataValue: '/dataAnalysis/followup/mark',\n        reportAnalysis: '/dataAnalysis/report',\n    },\n    results: {\n        analysis: {\n            limit: 500,\n        },\n    },\n}\n\nexport default apiConf\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dialog, FlatButton, FontIcon } from 'material-ui'\nimport classNames from 'classnames'\nimport i18n from '@dhis2/d2-i18n'\nimport Page from '../../Page'\nimport jsPageStyles from '../../PageStyles'\nimport cssPageStyles from '../../Page.module.css'\nimport styles from './ValidationRulesDetails.module.css'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport { apiConf } from '../../../server.conf'\nimport ValidationRulesAnalysis from '../ValidationRulesAnalysis'\n\nclass ValidationRulesDetails extends Page {\n    static STATE_PROPERTIES = ['loading']\n\n    static propTypes = {\n        validationRuleId: PropTypes.string.isRequired,\n        periodId: PropTypes.string.isRequired,\n        organisationUnitId: PropTypes.string.isRequired,\n        attributeOptionComboId: PropTypes.string.isRequired,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            loading: false,\n            openDetails: false,\n            rule: {},\n            expression: {\n                leftSide: [],\n                rightSide: [],\n            },\n        }\n\n        this.loadDetails = this.loadDetails.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ValidationRulesAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    loadDetails() {\n        if (!this.state.loading) {\n            const api = this.context.d2.Api.getApi()\n            const requestRule = `${apiConf.endpoints.validationRules}/${\n                this.props.validationRuleId\n            }`\n            const requestExpression =\n                `${apiConf.endpoints.validationRulesExpression}` +\n                `?validationRuleId=${this.props.validationRuleId}` +\n                `&periodId=${this.props.periodId}` +\n                `&organisationUnitId=${this.props.organisationUnitId}` +\n                `&attributeOptionComboId=${this.props.attributeOptionComboId}`\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n            Promise.all([api.get(requestRule), api.get(requestExpression)])\n                .then(([rule, expression]) => {\n                    this.context.updateAppState({\n                        pageState: {\n                            loading: false,\n                        },\n                    })\n                    this.setState({ openDetails: true, rule, expression })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    handleClose() {\n        this.setState({ openDetails: false })\n    }\n\n    render() {\n        // Details Actions\n        const dialogActions = [\n            <FlatButton\n                className=\"close-action\"\n                key={`FB${this.props.organisationUnitId}-${\n                    this.props.periodId\n                }-${this.props.validationRuleId}`}\n                label={i18n.t('Close')}\n                primary={Boolean(true)}\n                onClick={this.handleClose}\n            />,\n        ]\n\n        const result = (\n            <div\n                className={classNames('row', 'results-row', styles.sectionBox)}\n            >\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {i18n.t('VALIDATIONS RESULT DETAILS')}\n                </div>\n                <div\n                    className={classNames('col-xs-12', styles.sectionSubTitle)}\n                >\n                    {i18n.t('VALIDATION RULE')}\n                </div>\n                <div className={'col-xs-3'}>{i18n.t('Name')}</div>\n                <div className={'col-xs-9'}>{this.state.rule.displayName}</div>\n                <div className={'col-xs-3'}>{i18n.t('Description')}</div>\n                <div className={'col-xs-9'}>\n                    {this.state.rule.displayDescription}\n                </div>\n            </div>\n        )\n\n        const showNoData = side => (\n            <div className={classNames('row', styles.sectionBox)}>\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {side}\n                </div>\n                <div className={classNames('col-xs-12', cssPageStyles.center)}>\n                    <div className={styles.noData}>\n                        {i18n.t('no data available')}\n                    </div>\n                </div>\n            </div>\n        )\n\n        const buildSection = (side, elements, classNameRow) => (\n            <div className={classNames('row', classNameRow, styles.sectionBox)}>\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {side}\n                </div>\n                <div\n                    className={classNames('col-xs-10', styles.sectionSubTitle)}\n                >\n                    {i18n.t('DATA ELEMENT')}\n                </div>\n                <div\n                    className={classNames(\n                        'col-xs-2',\n                        styles.sectionSubTitle,\n                        cssPageStyles.right\n                    )}\n                >\n                    {i18n.t('VALUE')}\n                </div>\n                {elements.map(element => (\n                    <div key={element.name} className={'col-xs-12'}>\n                        <div className={'row'}>\n                            <div className={'col-xs-10'}>{element.name}</div>\n                            <div\n                                className={classNames(\n                                    'col-xs-2',\n                                    cssPageStyles.right\n                                )}\n                            >\n                                {element.value ? (\n                                    <FormattedNumber\n                                        value={Number(element.value)}\n                                    />\n                                ) : (\n                                    '-'\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        )\n\n        return (\n            <div>\n                <FontIcon\n                    key={`FI|${this.props.organisationUnitId}-${\n                        this.props.periodId\n                    }-${this.props.validationRuleId}`}\n                    className={\n                        'validation-rules-show-details-action material-icons'\n                    }\n                    style={jsPageStyles.cursorStyle}\n                    onClick={this.loadDetails}\n                >\n                    info\n                </FontIcon>\n                <Dialog\n                    className=\"validation-rules-details-dialog\"\n                    key={`D${this.props.organisationUnitId}-${\n                        this.props.periodId\n                    }-${this.props.validationRuleId}`}\n                    autoScrollBodyContent={Boolean(true)}\n                    title={i18n.t('Validation Details')}\n                    actions={dialogActions}\n                    modal={Boolean(true)}\n                    open={this.state.openDetails}\n                    onRequestClose={this.handleClose}\n                >\n                    {/* Result */}\n                    {result}\n                    {/* Left Side */}\n                    {this.state.expression.leftSide &&\n                    this.state.expression.leftSide.length > 0\n                        ? buildSection(\n                              i18n.t('LEFT SIDE'),\n                              this.state.expression.leftSide,\n                              'left-side-row'\n                          )\n                        : showNoData(i18n.t('LEFT SIDE'))}\n                    {/* Right Side */}\n                    {this.state.expression.rightSide &&\n                    this.state.expression.rightSide.length > 0\n                        ? buildSection(\n                              i18n.t('RIGHT SIDE'),\n                              this.state.expression.rightSide,\n                              'right-side-row'\n                          )\n                        : showNoData(i18n.t('RIGHT SIDE'))}\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesDetails\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './TableCellContent.module.css'\nimport cx from 'classnames'\n\nconst TableCellContent = props => (\n    <div\n        className={cx(styles.tableCellContent, props.className, {\n            [styles[`tableCellContent-${props.size}`]]: props.size,\n        })}\n    >\n        {props.children}\n    </div>\n)\n\nTableCellContent.propTypes = {\n    size: PropTypes.oneOf(['narrow', 'medium', 'wide']),\n}\n\nexport default TableCellContent\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../../components/download-as/DownloadAs'\nimport cssPageStyles from '../../Page.module.css'\nimport styles from './ValidationRulesAnalysisTable.module.css'\nimport i18n from '@dhis2/d2-i18n'\nimport ValidationRulesDetails from '../validation-rules-details/ValidationRulesDetails'\nimport { apiConf } from '../../../server.conf'\nimport TableCellContent from '../../../components/table/TableCellContent'\n\nclass ValidationRulesAnalysisTable extends PureComponent {\n    static propTypes = {\n        elements: PropTypes.array.isRequired,\n    }\n\n    render() {\n        const elements = this.props.elements\n\n        const shouldDisplayAttributeOptionCombo = elements.some(\n            e => e.attributeOptionCombo && e.attributeOptionCombo !== 'default'\n        )\n\n        // Table Rows\n        const rows = elements.map(element => (\n            <TableRow key={element.key}>\n                <TableRowColumn title={element.organisation}>\n                    <TableCellContent>{element.organisation}</TableCellContent>\n                </TableRowColumn>\n                {shouldDisplayAttributeOptionCombo && (\n                    <TableRowColumn title={element.attributeOptionCombo}>\n                        <TableCellContent size=\"wide\">\n                            {element.attributeOptionCombo}\n                        </TableCellContent>\n                    </TableRowColumn>\n                )}\n                <TableRowColumn title={element.period}>\n                    <TableCellContent>{element.period}</TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.importance}>\n                    <TableCellContent>{element.importance}</TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.validationRule}>\n                    <TableCellContent size={'medium'}>\n                        {element.validationRule}\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.leftValue}>\n                    <TableCellContent>\n                        <FormattedNumber value={element.leftValue} />\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.operator}>\n                    <TableCellContent className={styles.operator}>\n                        {element.operator}\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.rightValue}>\n                    <TableCellContent>\n                        <FormattedNumber value={element.rightValue} />\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn>\n                    <TableCellContent>\n                        <ValidationRulesDetails\n                            validationRuleId={element.validationRuleId}\n                            periodId={element.periodId}\n                            organisationUnitId={element.organisationUnitId}\n                            attributeOptionComboId={\n                                element.attributeOptionComboId\n                            }\n                        />\n                    </TableCellContent>\n                </TableRowColumn>\n            </TableRow>\n        ))\n\n        return (\n            <div>\n                <div className={cssPageStyles.cardHeader}>\n                    <DownloadAs\n                        endpoint={apiConf.endpoints.validationRulesReport}\n                    />\n                </div>\n                <Table\n                    selectable={false}\n                    className={classNames(\n                        cssPageStyles.appTable,\n                        styles.validationTable\n                    )}\n                    fixedHeader={false}\n                    bodyStyle={{ overflowX: 'auto' }}\n                >\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                    >\n                        <TableRow>\n                            <TableHeaderColumn\n                                title={i18n.t('Organisation Unit')}\n                            >\n                                {i18n.t('Organisation Unit')}\n                            </TableHeaderColumn>\n                            {shouldDisplayAttributeOptionCombo && (\n                                <TableHeaderColumn\n                                    title={i18n.t(\n                                        'Attribute Option Combination'\n                                    )}\n                                >\n                                    {i18n.t('Attr. Opt. Combo')}\n                                </TableHeaderColumn>\n                            )}\n                            <TableHeaderColumn title={i18n.t('Period')}>\n                                {i18n.t('Period')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Importance')}>\n                                {i18n.t('Importance')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn\n                                title={i18n.t('Validation Rule')}\n                            >\n                                {i18n.t('Validation Rule')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Value')}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Operator')}>\n                                {i18n.t('Operator')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Value')}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Details')}>\n                                {i18n.t('Details')}\n                            </TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody displayRowCheckbox={false} stripedRows={false}>\n                        {rows}\n                    </TableBody>\n                </Table>\n                <div\n                    className={classNames(\n                        cssPageStyles.cardFooter,\n                        cssPageStyles.end\n                    )}\n                >\n                    <DownloadAs\n                        endpoint={apiConf.endpoints.validationRulesReport}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesAnalysisTable\n","// get Date from YYYY-MM-DDTHH:mm:ss.mmmm\nexport const convertDateToApiDateFormat = date =>\n    date.toISOString().split('T')[0]\n\nexport default convertDateToApiDateFormat\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport Checkbox from 'material-ui/Checkbox'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport Page from '../Page'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport ValidationRuleGroupsSelect, {\n    ALL_VALIDATION_RULE_GROUPS_ID,\n} from '../../components/validation-rule-groups-select/ValidationRuleGroupsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport i18n from '@dhis2/d2-i18n'\nimport jsPageStyles from '../PageStyles'\nimport cssPageStyles from '../Page.module.css'\nimport ValidationRulesAnalysisTable from './validation-rules-analysis-table/ValidationRulesAnalysisTable'\nimport { apiConf } from '../../server.conf'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\n\nclass ValidationRulesAnalysis extends Page {\n    static STATE_PROPERTIES = ['loading', 'elements', 'showTable']\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            validationRuleGroupId: ALL_VALIDATION_RULE_GROUPS_ID,\n            notification: false,\n            persist: false,\n            elements: [],\n            loading: false,\n        }\n\n        this.validate = this.validate.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.validationRuleGroupOnChange = this.validationRuleGroupOnChange.bind(\n            this\n        )\n        this.updateSendNotifications = this.updateSendNotifications.bind(this)\n        this.updatePersistNewResults = this.updatePersistNewResults.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ValidationRulesAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    static generateElementKey = e =>\n        `${e.validationRuleId}-${e.periodId}-${e.organisationUnitId}-${\n            e.attributeOptionComboId\n        }`\n\n    static convertElementFromApiResponse = e => ({\n        key: ValidationRulesAnalysis.generateElementKey(e),\n        validationRuleId: e.validationRuleId,\n        attributeOptionCombo: e.attributeOptionComboDisplayName,\n        attributeOptionComboId: e.attributeOptionComboId,\n        organisation: e.organisationUnitDisplayName,\n        organisationUnitId: e.organisationUnitId,\n        period: e.periodDisplayName,\n        periodId: e.periodId,\n        importance: e.importance,\n        validationRule: e.validationRuleDescription,\n        leftValue: e.leftSideValue,\n        operator: e.operator,\n        rightValue: e.rightSideValue,\n    })\n\n    validate() {\n        const api = this.context.d2.Api.getApi()\n\n        if (this.isFormValid()) {\n            const request = {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                notification: this.state.notification,\n                persist: this.state.persist,\n            }\n\n            if (\n                this.state.validationRuleGroupId !==\n                ALL_VALIDATION_RULE_GROUPS_ID\n            ) {\n                request.vrg = this.state.validationRuleGroupId\n            }\n\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.validationRulesAnalysis, { ...request })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            ValidationRulesAnalysis.convertElementFromApiResponse\n                        )\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t(\n                                              'Validation passed successfully'\n                                          ),\n                                      },\n                                  }\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n        this.context.updateAppState({\n            pageState: { showTable: false },\n        })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    validationRuleGroupOnChange(event, index, value) {\n        this.setState({ validationRuleGroupId: value })\n    }\n\n    updateSendNotifications(event, checked) {\n        this.setState({ notification: checked })\n    }\n\n    updatePersistNewResults(event, checked) {\n        this.setState({ persist: checked })\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Validation Rule Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                className={classNames(\n                                    'col-md-6',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-6',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    value={this.state.startDate}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    value={this.state.endDate}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                />\n                                <div id=\"validation-rule-groups\">\n                                    <ValidationRuleGroupsSelect\n                                        style={jsPageStyles.inputForm}\n                                        onChange={\n                                            this.validationRuleGroupOnChange\n                                        }\n                                    />\n                                </div>\n                                <div id=\"send-notifications-option\">\n                                    <Checkbox\n                                        label={i18n.t('Send Notifications')}\n                                        labelPosition=\"left\"\n                                        checked={this.state.notification}\n                                        onCheck={this.updateSendNotifications}\n                                    />\n                                </div>\n                                <div id=\"persist-results-option\">\n                                    <Checkbox\n                                        label={i18n.t('Persist new results')}\n                                        labelPosition=\"left\"\n                                        checked={this.state.persist}\n                                        onCheck={this.updatePersistNewResults}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            label={i18n.t('validate')}\n                            primary\n                            disabled={this.isActionDisabled()}\n                            onClick={this.validate}\n                        />\n                    </CardText>\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <ValidationRulesAnalysisTable\n                            elements={this.state.elements}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesAnalysis\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './AvailableDatasetsSelect.module.css'\n\nclass AvailableDatasetsSelect extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        onChange: PropTypes.func,\n    }\n\n    static defaultProps = {\n        onChange: null,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            dataSets: null,\n        }\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        if (this.state.dataSets == null) {\n            d2.models.dataSet\n                .list({\n                    paging: false,\n                    fields: 'id,displayName',\n                })\n                .then(dataSetsResponse => {\n                    this.setState({\n                        dataSets: dataSetsResponse.toArray(),\n                    })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    render() {\n        return (\n            <select\n                multiple\n                className={styles.select}\n                onChange={this.props.onChange}\n            >\n                {(this.state.dataSets || []).map(item => (\n                    <option\n                        key={item.id}\n                        value={item.id}\n                        className={styles.options}\n                    >\n                        {item.displayName}\n                    </option>\n                ))}\n            </select>\n        )\n    }\n}\n\nexport default AvailableDatasetsSelect\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Checkbox,\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui'\nimport FormattedNumber from '../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../components/download-as/DownloadAs'\nimport i18n from '@dhis2/d2-i18n'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../../pages/Page.module.css'\nimport jsPageStyles from '../../pages/PageStyles'\nimport styles from './OutlierAnalysisTable.module.css'\n\nconst OutlierAnalyisTable = ({\n    csvQueryStr,\n    elements,\n    toggleCheckbox,\n    algorithm,\n}) => {\n    const isZScoreAlgorithm = algorithm === 'Z_SCORE'\n\n    const downloadLink = (\n        <DownloadAs\n            fileTypes={['csv']}\n            endpoint={apiConf.endpoints.outlierDetection}\n            queryStr={csvQueryStr}\n        />\n    )\n\n    // Table Rows\n    const rows = elements.map(element => {\n        const updateCheckbox = () => {\n            toggleCheckbox(element)\n        }\n\n        return (\n            <TableRow key={element.key}>\n                <TableRowColumn>{element.displayName}</TableRowColumn>\n                <TableRowColumn>{element.pe}</TableRowColumn>\n                <TableRowColumn>{element.ouName}</TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber\n                        value={element.value}\n                        minimumFractionDigits={0}\n                    />\n                </TableRowColumn>\n                {isZScoreAlgorithm && (\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.zScore} />\n                    </TableRowColumn>\n                )}\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber\n                        value={element.absDev}\n                        minimumFractionDigits={0}\n                    />\n                </TableRowColumn>\n                {isZScoreAlgorithm && (\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.stdDev} />\n                    </TableRowColumn>\n                )}\n                {isZScoreAlgorithm && (\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber\n                            value={element.mean}\n                            minimumFractionDigits={0}\n                        />\n                    </TableRowColumn>\n                )}\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber\n                        value={element.lowerBound}\n                        minimumFractionDigits={0}\n                    />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber\n                        value={element.upperBound}\n                        minimumFractionDigits={0}\n                    />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.centerFlex}>\n                    <span className={cssPageStyles.checkboxWrapper}>\n                        <Checkbox\n                            checked={element.marked}\n                            onCheck={updateCheckbox}\n                            iconStyle={jsPageStyles.iconColor}\n                        />\n                    </span>\n                </TableRowColumn>\n            </TableRow>\n        )\n    })\n\n    return (\n        <div>\n            <div className={cssPageStyles.cardHeader}>{downloadLink}</div>\n            <Table\n                selectable={false}\n                className={classNames(\n                    cssPageStyles.appTable,\n                    styles.outlierAnalysisTable\n                )}\n            >\n                <TableHeader\n                    displaySelectAll={false}\n                    adjustForCheckbox={false}\n                    enableSelectAll={false}\n                >\n                    <TableRow>\n                        <TableHeaderColumn>\n                            {i18n.t('Data Element')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn>\n                            {i18n.t('Period')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn>\n                            {i18n.t('Organisation Unit')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Value')}\n                        </TableHeaderColumn>\n                        {isZScoreAlgorithm && (\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Z-Score')}\n                            </TableHeaderColumn>\n                        )}\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Deviation')}\n                        </TableHeaderColumn>\n                        {isZScoreAlgorithm && (\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Std Dev')}\n                            </TableHeaderColumn>\n                        )}\n                        {isZScoreAlgorithm && (\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Mean')}\n                            </TableHeaderColumn>\n                        )}\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Min')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Max')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.center}>\n                            {i18n.t('Follow-up')}\n                        </TableHeaderColumn>\n                    </TableRow>\n                </TableHeader>\n                <TableBody displayRowCheckbox={false} stripedRows={false}>\n                    {rows}\n                </TableBody>\n            </Table>\n            <div\n                className={classNames(\n                    cssPageStyles.cardFooter,\n                    cssPageStyles.end\n                )}\n            >\n                {downloadLink}\n            </div>\n        </div>\n    )\n}\n\nOutlierAnalyisTable.generateElementKey = e =>\n    `${e.attributeOptionComboId}-${e.categoryOptionComboId}-${e.periodId}-${\n        e.sourceId\n    }-${e.dataElementId}`\n\nOutlierAnalyisTable.convertElementFromApiResponse = e => ({\n    displayName: getDisplayName(e),\n    key: `${e.aoc}-${e.coc}-${e.de}-${e.pe}-${e.ou}`,\n    marked: e.followup,\n    ...e,\n})\n\nOutlierAnalyisTable.convertElementToToggleFollowupRequest = e => ({\n    dataElement: e.de,\n    period: e.pe,\n    orgUnit: e.ou,\n    categoryOptionCombo: e.coc || null,\n    attributeOptionCombo: e.aoc || null,\n    followup: !e.marked,\n})\n\nOutlierAnalyisTable.propTypes = {\n    algorithm: PropTypes.oneOf(['Z_SCORE', 'MIN_MAX']),\n    csvQueryStr: PropTypes.string.isRequired,\n    elements: PropTypes.array.isRequired,\n    toggleCheckbox: PropTypes.func.isRequired,\n}\n\nOutlierAnalyisTable.contextTypes = {\n    d2: PropTypes.object,\n}\n\nfunction getDisplayName(e) {\n    let str = e.deName\n\n    // In the context of a dataElement, the default COC or AOC means \"none\".\n    // The \"default\" string is not localised, and probably won't ever be.\n    // That is why the conditions below should work in the foreseeable future.\n    if (e.cocName !== 'default') {\n        str += ` (${e.cocName})`\n    }\n\n    if (e.aocName !== 'default') {\n        str += ` (${e.aocName})`\n    }\n\n    return str\n}\n\nexport default OutlierAnalyisTable\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport FlatButton from 'material-ui/FlatButton'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport OutlierAnalyisTable from '../../components/outlier-analysis-table/OutlierAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '@dhis2/d2-i18n'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nexport const Z_SCORE = 'Z_SCORE'\nexport const DEFAULT_THRESHOLD = 3.0\nexport const DEFAULT_ALGORITHM = Z_SCORE\nexport const DEFAULT_MAX_RESULTS = 500\nexport const DEFAULT_SORT_BY = Z_SCORE\n\nconst threeMonthsAgo = () => {\n    const date = new Date()\n    date.setMonth(date.getMonth() - 3)\n    return date\n}\n\nconst getMarkedForFollowUpSuccesMessage = marked =>\n    marked ? i18n.t('Marked for follow-up') : i18n.t('Unmarked for follow-up')\n\nclass OutlierDetection extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitIds',\n        'dataSetIds',\n        'elements',\n        'threshold',\n        'loading',\n        'csvQueryStr',\n        'showAdvancedZScoreFields',\n        'dataStartDate',\n        'dataEndDate',\n        'maxResults',\n        'sortBy',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: threeMonthsAgo(),\n            endDate: new Date(),\n            organisationUnitIds: [],\n            dataSetIds: [],\n            elements: [],\n            algorithm: DEFAULT_ALGORITHM,\n            threshold: DEFAULT_THRESHOLD,\n            csvQueryStr: null,\n            showAdvancedZScoreFields: false,\n            dataStartDate: null,\n            dataEndDate: null,\n            maxResults: DEFAULT_MAX_RESULTS,\n            sortBy: DEFAULT_SORT_BY,\n        }\n\n        this.start = this.start.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.thresholdOnChange = this.thresholdOnChange.bind(this)\n        this.algorithmOnChange = this.algorithmOnChange.bind(this)\n        this.dataStartDateOnChange = this.dataStartDateOnChange.bind(this)\n        this.dataEndDateOnChange = this.dataEndDateOnChange.bind(this)\n        this.maxResultsOnChange = this.maxResultsOnChange.bind(this)\n        this.sortByOnChange = this.sortByOnChange.bind(this)\n\n        this.toggleShowAdvancedZScoreFields = this.toggleShowAdvancedZScoreFields.bind(\n            this\n        )\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                OutlierDetection.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    start() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            const endpoint = apiConf.endpoints.outlierDetection\n            const csvQueryStr = this.createQueryString()\n\n            api.get(`${endpoint}?${csvQueryStr}`)\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.outlierValues.map(\n                            OutlierAnalyisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                                csvQueryStr,\n                            },\n                        })\n                    }\n                })\n                .catch(error => {\n                    this.manageError(error)\n                })\n        }\n    }\n\n    createQueryString() {\n        const isZScoreAlgorithm = this.state.algorithm === Z_SCORE\n        const querySegments = [\n            ...this.state.dataSetIds.map(id => `ds=${id}`),\n            ...this.state.organisationUnitIds.map(id => `ou=${id}`),\n            `startDate=${convertDateToApiDateFormat(this.state.startDate)}`,\n            `endDate=${convertDateToApiDateFormat(this.state.endDate)}`,\n            `algorithm=${this.state.algorithm}`,\n            `maxResults=${this.state.maxResults}`,\n            `sortBy=${this.state.sortBy}`,\n        ]\n\n        if (isZScoreAlgorithm) {\n            querySegments.push(`threshold=${this.state.threshold}`)\n        }\n\n        if (isZScoreAlgorithm && this.state.dataStartDate) {\n            querySegments.push(\n                `dataStartDate=${convertDateToApiDateFormat(\n                    this.state.dataStartDate\n                )}`\n            )\n        }\n\n        if (isZScoreAlgorithm && this.state.dataEndDate) {\n            querySegments.push(\n                `dataEndDate=${convertDateToApiDateFormat(\n                    this.state.dataEndDate\n                )}`\n            )\n        }\n\n        return querySegments.join('&')\n    }\n\n    back() {\n        this.setState({ showTable: false, csvQueryStr: null })\n        this.context.updateAppState({\n            pageState: { showTable: false },\n        })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    dataStartDateOnChange(event, date) {\n        this.setState({ dataStartDate: new Date(date) })\n    }\n\n    dataEndDateOnChange(event, date) {\n        this.setState({ dataEndDate: new Date(date) })\n    }\n\n    maxResultsOnChange(event, index, value) {\n        this.setState({ maxResults: value })\n    }\n\n    sortByOnChange(event, index, value) {\n        this.setState({ sortBy: value })\n    }\n\n    toggleShowAdvancedZScoreFields(event, index, value) {\n        const shouldShow = !this.state.showAdvancedZScoreFields\n\n        if (shouldShow) {\n            this.setState({\n                showAdvancedZScoreFields: true,\n            })\n        } else {\n            this.setState({\n                showAdvancedZScoreFields: false,\n                // Also reset advanced fields\n                dataStartDate: null,\n                dataEndDate: null,\n                sortBy: DEFAULT_SORT_BY,\n            })\n        }\n    }\n\n    organisationUnitOnChange(organisationUnitIds) {\n        this.setState({ organisationUnitIds })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    thresholdOnChange(event, index, value) {\n        this.setState({ threshold: value })\n    }\n\n    algorithmOnChange(event, index, value) {\n        this.setState({ algorithm: value })\n    }\n\n    toggleCheckbox(element) {\n        const api = this.context.d2.Api.getApi()\n        const currentElementIndex = this.state.elements.findIndex(\n            ({ key }) => key === element.key\n        )\n        const currentElement = this.state.elements[currentElementIndex]\n\n        if (!currentElement) {\n            return\n        }\n\n        this.context.updateAppState({\n            pageState: {\n                loading: true,\n                elements: this.state.elements,\n                showTable: true,\n            },\n        })\n        const data = OutlierAnalyisTable.convertElementToToggleFollowupRequest(\n            currentElement\n        )\n        api.update(apiConf.endpoints.markOutlierDataValue, data)\n            .then(() => {\n                if (this.isPageMounted()) {\n                    const updatedElement = {\n                        ...currentElement,\n                        marked: !currentElement.marked,\n                    }\n                    const elements = [\n                        ...this.state.elements.slice(0, currentElementIndex),\n                        updatedElement,\n                        ...this.state.elements.slice(currentElementIndex + 1),\n                    ]\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: getMarkedForFollowUpSuccesMessage(\n                                updatedElement.marked\n                            ),\n                        },\n                        pageState: {\n                            elements,\n                            loading: false,\n                            showTable: true,\n                        },\n                    })\n                }\n            })\n            .catch(error => {\n                this.manageError(error)\n            })\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitIds &&\n            this.state.organisationUnitIds.length > 0 &&\n            this.state.threshold &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    renderThresholdField() {\n        return (\n            <SelectField\n                id=\"threshold\"\n                style={jsPageStyles.inputForm}\n                floatingLabelText={i18n.t('Threshold')}\n                onChange={this.thresholdOnChange}\n                value={this.state.threshold}\n            >\n                <MenuItem value={1.0} primaryText=\"1.0\" />\n                <MenuItem value={1.5} primaryText=\"1.5\" />\n                <MenuItem value={2.0} primaryText=\"2.0\" />\n                <MenuItem value={2.5} primaryText=\"2.5\" />\n                <MenuItem value={3} primaryText=\"3.0\" />\n                <MenuItem value={3.5} primaryText=\"3.5\" />\n                <MenuItem value={4} primaryText=\"4.0\" />\n                <MenuItem value={4.5} primaryText=\"4.5\" />\n                <MenuItem value={5} primaryText=\"5.0\" />\n            </SelectField>\n        )\n    }\n\n    renderZScoreFields() {\n        const { showAdvancedZScoreFields } = this.state\n        const buttonLabel = showAdvancedZScoreFields\n            ? i18n.t('Hide advanced options')\n            : i18n.t('Show advanced options')\n\n        return (\n            <>\n                <FlatButton\n                    fullWidth\n                    label={buttonLabel}\n                    onClick={this.toggleShowAdvancedZScoreFields}\n                    style={{ marginTop: '12px' }}\n                />\n                {showAdvancedZScoreFields && (\n                    <>\n                        <DatePicker\n                            id=\"data-start-date\"\n                            textFieldStyle={jsPageStyles.inputForm}\n                            floatingLabelText={i18n.t('Data start date')}\n                            onChange={this.dataStartDateOnChange}\n                            maxDate={this.state.dataEndDate}\n                            value={this.state.dataStartDate}\n                        />\n                        <DatePicker\n                            id=\"data-end-date\"\n                            textFieldStyle={jsPageStyles.inputForm}\n                            floatingLabelText={i18n.t('Data end date')}\n                            onChange={this.dataEndDateOnChange}\n                            minDate={this.state.dataStartDate}\n                            value={this.state.dataEndDate}\n                        />\n                        <SelectField\n                            id=\"sort-by\"\n                            style={jsPageStyles.inputForm}\n                            floatingLabelText={i18n.t('Sort by')}\n                            onChange={this.sortByOnChange}\n                            value={this.state.sortBy}\n                        >\n                            <MenuItem value={Z_SCORE} primaryText=\"Z-score\" />\n                            <MenuItem\n                                value=\"MEAN_ABS_DEV\"\n                                primaryText=\"Absolute Deviation from Mean\"\n                            />\n                        </SelectField>\n                    </>\n                )}\n            </>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Outlier Detection')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Organisation units')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    multiselect\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                                <SelectField\n                                    id=\"algorithm\"\n                                    style={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Algorithm')}\n                                    onChange={this.algorithmOnChange}\n                                    value={this.state.algorithm}\n                                >\n                                    <MenuItem\n                                        value={Z_SCORE}\n                                        primaryText=\"Z-score\"\n                                    />\n                                    <MenuItem\n                                        value=\"MIN_MAX\"\n                                        primaryText=\"Min-max values\"\n                                    />\n                                </SelectField>\n                                {this.state.algorithm === Z_SCORE &&\n                                    this.renderThresholdField()}\n                                <SelectField\n                                    id=\"max-results\"\n                                    style={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Max results')}\n                                    onChange={this.maxResultsOnChange}\n                                    value={this.state.maxResults}\n                                >\n                                    <MenuItem value={100} primaryText=\"100\" />\n                                    <MenuItem value={200} primaryText=\"200\" />\n                                    <MenuItem value={500} primaryText=\"500\" />\n                                </SelectField>\n                                {this.state.algorithm === Z_SCORE &&\n                                    this.renderZScoreFields()}\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('Start')}\n                            onClick={this.start}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    {this.state.showTable && this.state.csvQueryStr && (\n                        <CardText id=\"results-table\">\n                            <OutlierAnalyisTable\n                                algorithm={this.state.algorithm}\n                                csvQueryStr={this.state.csvQueryStr}\n                                elements={this.state.elements}\n                                toggleCheckbox={this.toggleCheckbox}\n                            />\n                        </CardText>\n                    )}\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default OutlierDetection\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Checkbox,\n    FontIcon,\n    RaisedButton,\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n    IconButton,\n    Dialog,\n    FlatButton,\n} from 'material-ui'\nimport i18n from '@dhis2/d2-i18n'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../../components/download-as/DownloadAs'\nimport cssPageStyles from '../../Page.module.css'\nimport jsPageStyles from '../../PageStyles'\nimport styles from './FollowUpAnalysisTable.module.css'\nimport { apiConf } from '../../../server.conf'\n\nclass FollowUpAnalysisTable extends Component {\n    static propTypes = {\n        elements: PropTypes.array.isRequired,\n        toggleCheckbox: PropTypes.func.isRequired,\n        unfollow: PropTypes.func.isRequired,\n        loading: PropTypes.bool.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static generateElementKey = e =>\n        `${e.attributeOptionComboId}-${e.categoryOptionComboId}-${e.periodId}-${\n            e.sourceId\n        }-${e.dataElementId}`\n\n    static convertElementFromApiResponse = e => ({\n        key: FollowUpAnalysisTable.generateElementKey(e),\n        attributeOptionComboId: e.attributeOptionComboId,\n        categoryOptionComboId: e.categoryOptionComboId,\n        periodId: e.periodId,\n        organisationUnitId: e.sourceId,\n        dataElementId: e.dataElementId,\n        dataElement: e.dataElementName,\n        organisation: e.sourceName,\n        period: e.period.name,\n        min: e.min,\n        max: e.max,\n        value: Number.parseFloat(e.value, 10),\n        marked: !e.followup,\n        comment: e.comment,\n    })\n\n    static convertElementToUnFollowupRequest = e => ({\n        dataElementId: e.dataElementId,\n        periodId: e.periodId,\n        organisationUnitId: e.organisationUnitId,\n        categoryOptionComboId: e.categoryOptionComboId,\n        attributeOptionComboId: e.attributeOptionComboId,\n        followup: false,\n    })\n\n    static areElementsTheSame(element1, element2) {\n        return (\n            element1.attributeOptionComboId ===\n                element2.attributeOptionComboId &&\n            element1.categoryOptionComboId === element2.categoryOptionComboId &&\n            element1.periodId === element2.periodId &&\n            element1.organisationUnitId === element2.organisationUnitId &&\n            element1.dataElementId === element2.dataElementId\n        )\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            showComment: false,\n            comment: null,\n        }\n\n        this.unfollow = this.unfollow.bind(this)\n        this.closeCommentDialog = this.closeCommentDialog.bind(this)\n    }\n\n    unfollow() {\n        const unfollowups = []\n        for (let i = 0; i < this.props.elements.length; i++) {\n            const e = this.props.elements[i]\n            if (e.marked) {\n                unfollowups.push(\n                    FollowUpAnalysisTable.convertElementToUnFollowupRequest(e)\n                )\n            }\n        }\n\n        this.props.unfollow(unfollowups)\n    }\n\n    closeCommentDialog() {\n        this.setState({ showComment: false })\n    }\n\n    updateCheckbox(element) {\n        this.props.toggleCheckbox(element)\n    }\n\n    showComment(element) {\n        if (element.comment) {\n            this.setState({\n                showComment: true,\n                comment: element.comment,\n            })\n        }\n    }\n\n    render() {\n        let oneChecked = false\n\n        const commentDialogActions = [\n            <FlatButton\n                label={i18n.t('Close')}\n                primary\n                onClick={this.closeCommentDialog}\n            />,\n        ]\n\n        // Table Rows\n        const rows = this.props.elements.map(element => {\n            const updateCheckbox = () => {\n                this.updateCheckbox(element)\n            }\n\n            const showComment = () => {\n                this.showComment(element)\n            }\n\n            oneChecked = element.marked ? true : oneChecked\n\n            return (\n                <TableRow key={element.key}>\n                    <TableRowColumn>{element.dataElement}</TableRowColumn>\n                    <TableRowColumn>{element.organisation}</TableRowColumn>\n                    <TableRowColumn>{element.period}</TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.min} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.value} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.max} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.centerFlex}>\n                        <span className={cssPageStyles.checkboxWrapper}>\n                            <Checkbox\n                                checked={element.marked}\n                                onCheck={updateCheckbox}\n                                iconStyle={jsPageStyles.iconColor}\n                            />\n                        </span>\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.center}>\n                        {element.comment && (\n                            <IconButton key={element.key} onClick={showComment}>\n                                <FontIcon\n                                    className={'material-icons'}\n                                    style={jsPageStyles.cursorStyle}\n                                >\n                                    speaker_notes\n                                </FontIcon>\n                            </IconButton>\n                        )}\n                    </TableRowColumn>\n                </TableRow>\n            )\n        })\n\n        return (\n            <div>\n                <Dialog\n                    title={i18n.t('Comment')}\n                    actions={commentDialogActions}\n                    modal={false}\n                    open={this.state.showComment}\n                    onRequestClose={this.closeCommentDialog}\n                >\n                    <div id={'comment-content'}>{this.state.comment}</div>\n                </Dialog>\n                <div className={cssPageStyles.cardHeader}>\n                    <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n                </div>\n                <Table\n                    selectable={false}\n                    className={classNames(\n                        cssPageStyles.appTable,\n                        styles.followUpAnalysisTable\n                    )}\n                >\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                    >\n                        <TableRow>\n                            <TableHeaderColumn>\n                                {i18n.t('Data Element')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Organisation Unit')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Period')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Min')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Max')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Unfollow')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Comment')}\n                            </TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody displayRowCheckbox={false} stripedRows={false}>\n                        {rows}\n                    </TableBody>\n                </Table>\n                <div\n                    className={classNames(\n                        cssPageStyles.cardFooter,\n                        cssPageStyles.spaceBetween\n                    )}\n                >\n                    <RaisedButton\n                        id=\"unfollow-action\"\n                        primary\n                        disabled={this.props.loading || !oneChecked}\n                        label={i18n.t('unfollow')}\n                        onClick={this.unfollow}\n                    />\n                    <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FollowUpAnalysisTable\n","import React from 'react'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport FollowUpAnalysisTable from './follow-up-analysis-table/FollowUpAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '@dhis2/d2-i18n'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nclass FollowUpAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            loading: false,\n        }\n\n        this.getFollowUpList = this.getFollowUpList.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n        this.unfollow = this.unfollow.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                FollowUpAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    getFollowUpList() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            const request = {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n            }\n\n            api.post(apiConf.endpoints.folloupAnalysis, request)\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            FollowUpAnalysisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n        this.context.updateAppState({\n            pageState: { showTable: false },\n        })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    toggleCheckbox(element) {\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                currentElement.marked = !currentElement.marked\n                elements[i] = currentElement\n                this.setState({ elements })\n                break\n            }\n        }\n    }\n\n    unfollow(unfollowups) {\n        const api = this.context.d2.Api.getApi()\n        this.context.updateAppState({\n            pageState: {\n                loading: true,\n            },\n        })\n\n        api.post(apiConf.endpoints.markFollowUpDataValue, {\n            followups: unfollowups,\n        })\n            .then(() => {\n                if (this.isPageMounted()) {\n                    // remove unfollowed elements\n                    const elements = this.state.elements.filter(element => {\n                        for (let j = 0; j < unfollowups.length; j++) {\n                            const unfollow = unfollowups[j]\n                            if (\n                                FollowUpAnalysisTable.areElementsTheSame(\n                                    element,\n                                    unfollow\n                                )\n                            ) {\n                                return false\n                            }\n                        }\n\n                        return true\n                    })\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: i18n.t('Unfollow done'),\n                        },\n                        pageState: {\n                            loading: false,\n                            elements,\n                        },\n                    })\n                }\n            })\n            .catch(() => {\n                this.manageError()\n            })\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    <span>{i18n.t('Follow-Up Analysis')}</span>\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('follow up')}\n                            onClick={this.getFollowUpList}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <FollowUpAnalysisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                            unfollow={this.unfollow}\n                            loading={this.state.loading}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default FollowUpAnalysis\n","import i18n from '@dhis2/d2-i18n'\nimport ValidationRulesAnalysis from './validation-rules-analysis/ValidationRulesAnalysis'\nimport OutlierDetection from './outlier-detection/OutlierDetection'\nimport FollowUpAnalysis from './follow-up-analysis/FollowUpAnalysis'\n\nexport const VALIDATION_RULES_ANALYSIS_SECTION_KEY = 'validationRulesAnalysis'\nexport const OUTLIER_DETECTION_SECTION_KEY = 'outlierDetection'\nexport const FOLLOW_UP_ANALYSIS_SECTION_KEY = 'followUpAnalysis'\n\nexport const sections = [\n    {\n        key: VALIDATION_RULES_ANALYSIS_SECTION_KEY,\n        path: '/validation-rules-analysis',\n        component: ValidationRulesAnalysis,\n        info: {\n            label: () => i18n.t('Validation Rule Analysis'),\n            icon: 'done_all',\n            description: () =>\n                i18n.t(\n                    'Run validation rules in order to unveil anomalies and errors in the data in the database.'\n                ),\n            actionText: () => i18n.t('Run Validation'),\n            docs: 'validation_rule_analysis',\n        },\n    },\n    {\n        key: OUTLIER_DETECTION_SECTION_KEY,\n        path: '/outlier-detection',\n        component: OutlierDetection,\n        info: {\n            label: () => i18n.t('Outlier detection'),\n            icon: 'show_chart',\n            description: () =>\n                i18n.t(\n                    'Analyze potential outlier values based on standard deviations or min-max values. Outlier values can be examined and marked for follow-up.'\n                ),\n            actionText: () => i18n.t('Analyze'),\n            docs: 'outlier_detection',\n        },\n    },\n    {\n        key: FOLLOW_UP_ANALYSIS_SECTION_KEY,\n        path: '/follow-up-analysis',\n        component: FollowUpAnalysis,\n        info: {\n            label: () => i18n.t('Follow-Up Analysis'),\n            icon: 'description',\n            description: () =>\n                i18n.t(\n                    'View or edit data values marked for further follow-up during data entry or analysis.'\n                ),\n            actionText: () => i18n.t('View Data Values'),\n            docs: 'follow_up_analysis',\n        },\n    },\n]\n\nexport const getDocsKeyForSection = sectionKey => {\n    for (let i = 0; i < sections.length; i++) {\n        const section = sections[i]\n        if (section.key === sectionKey) {\n            return section.info.docs\n        }\n    }\n\n    return ''\n}\n\nexport default sections\n","import React from 'react'\nimport classNames from 'classnames'\nimport GridSection from './grid-section/GridSection'\nimport styles from './Home.module.css'\nimport { sections } from '../sections.conf'\n\nconst Home = () => {\n    const gridElements = sections.map(section => (\n        <div\n            key={section.key}\n            className={classNames(\n                'col-sm-12 col-md-6 col-lg-4',\n                styles.gridContainer\n            )}\n        >\n            <GridSection key={section.key} section={section} />\n        </div>\n    ))\n\n    return (\n        <div id=\"grid-list-id\" className=\"row\">\n            {gridElements}\n        </div>\n    )\n}\n\nexport default Home\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nclass NoMatch extends PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>\n                    No match for <code>{this.props.location.pathname}</code>\n                </h3>\n            </div>\n        )\n    }\n}\n\nexport default NoMatch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from '../../pages/home/Home'\nimport NoMatch from './NoMatch'\nimport { sections } from '../../pages/sections.conf'\n\nconst AppRouter = ({ pageState }) => {\n    const routes = sections.map(section => {\n        const routeRender = () => {\n            const Page = section.component\n            return <Page sectionKey={section.key} {...pageState} />\n        }\n        return (\n            <Route\n                key={section.key}\n                exact\n                path={section.path}\n                render={routeRender}\n            />\n        )\n    })\n\n    /* Home route */\n    const homeRouteRender = () => <Home sectionKey=\"home\" />\n\n    routes.push(<Route key=\"home\" exact path=\"/\" render={homeRouteRender} />)\n\n    /* No Match Route */\n    routes.push(<Route key=\"no-match-route\" component={NoMatch} />)\n\n    return (\n        <main>\n            <Switch>{routes}</Switch>\n        </main>\n    )\n}\n\nAppRouter.propTypes = {\n    pageState: PropTypes.object,\n}\n\nAppRouter.defaultProps = {\n    pageState: {},\n}\n\nexport default AppRouter\n","import 'typeface-roboto'\nimport 'material-design-icons-iconfont'\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { HeaderBar } from '@dhis2/ui-widgets'\nimport Sidebar from 'd2-ui/lib/sidebar/Sidebar.component'\nimport CircularProgress from 'd2-ui/lib/circular-progress/CircularProgress'\nimport FeedbackSnackbar from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbar.component'\nimport './custom-css/D2UISidebarOverrides.css'\nimport i18n from './locales'\nimport AppRouter from './components/app-router/AppRouter'\nimport styles from './App.module.css'\nimport { sections } from './pages/sections.conf'\n\nclass App extends PureComponent {\n    static childContextTypes = {\n        d2: PropTypes.object,\n        showSnackbar: PropTypes.bool,\n        snackbarConf: PropTypes.shape({\n            type: PropTypes.string,\n            message: PropTypes.string,\n        }),\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currentSection: '',\n            showSnackbar: false,\n            snackbarConf: {\n                type: '',\n                message: '',\n            },\n            pageState: {},\n        }\n\n        this.updateAppState = this.updateAppState.bind(this)\n    }\n\n    getChildContext() {\n        return {\n            d2: this.props.d2,\n            showSnackbar: this.state.showSnackbar,\n            snackbarConf: this.state.snackbarConf,\n            currentSection: this.state.currentSection,\n            updateAppState: this.updateAppState,\n        }\n    }\n\n    updateAppState(appState) {\n        if (\n            appState.currentSection &&\n            !appState.pageState &&\n            this.state.currentSection !== appState.currentSection\n        ) {\n            // clear page state because we are updating page\n            this.setState({ ...appState, pageState: {}, showSnackbar: false })\n        } else {\n            this.setState(appState)\n        }\n    }\n\n    render() {\n        const nonOnChangeSection = () => null\n        const translatedSections = sections.map(section =>\n            Object.assign(section, {\n                icon: section.info.icon,\n                label: section.info.label(),\n                containerElement: <Link to={section.path} />,\n            })\n        )\n\n        const feedbackElement = this.state.pageState.loading ? (\n            <div className={styles.centered}>\n                <CircularProgress />\n            </div>\n        ) : (\n            <FeedbackSnackbar\n                show={this.state.showSnackbar}\n                conf={this.state.snackbarConf}\n            />\n        )\n\n        const hideSidebar =\n            this.state.pageState && this.state.pageState.showTable\n        const contentWrapperClassName = hideSidebar\n            ? styles.contentWrapperNoMargin\n            : styles.contentWrapper\n\n        return (\n            <div>\n                <HeaderBar appName={i18n.t('Data Quality')} />\n                {!hideSidebar && (\n                    <Sidebar\n                        sections={translatedSections}\n                        currentSection={this.state.currentSection}\n                        onChangeSection={nonOnChangeSection}\n                    />\n                )}\n                <div className={contentWrapperClassName}>\n                    <div className={styles.contentArea}>\n                        <AppRouter pageState={this.state.pageState} />\n                    </div>\n                </div>\n                <div id=\"feedback-snackbar\">{feedbackElement}</div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import Spacing from 'material-ui/styles/spacing'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport {\n    blue100,\n    blue700,\n    grey100,\n    grey400,\n    orange500,\n    orangeA200,\n    darkBlack,\n    white,\n} from 'material-ui/styles/colors'\nimport { fade } from 'material-ui/utils/colorManipulator'\n\nconst theme = {\n    spacing: Spacing,\n    fontFamily: 'Roboto, sans-serif',\n    palette: {\n        primary1Color: '#004ba0',\n        primary2Color: blue700,\n        primary3Color: blue100,\n        accent1Color: orange500,\n        accent2Color: grey100,\n        accent3Color: orangeA200,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey400,\n        disabledColor: fade(darkBlack, 0.3),\n    },\n}\n\nconst muiTheme = getMuiTheme(theme)\n\nexport default muiTheme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, withRouter } from 'react-router-dom'\nimport { getUserSettings, init } from 'd2/lib/d2'\nimport log from 'loglevel'\nimport { configI18n, injectTranslationsToD2 } from './configI18n'\nimport './index.css'\nimport App from './App'\nimport appTheme from './theme'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from '@dhis2/app-runtime'\nimport { CssReset } from '@dhis2/ui-core'\nimport { MuiThemeProvider } from 'material-ui/styles'\n\nlog.setLevel(\n    process.env.NODE_ENV === 'production' ? log.levels.INFO : log.levels.DEBUG\n)\n\nconst AppComponent = withRouter(App)\nconst baseUrl = `${process.env.REACT_APP_DHIS2_BASE_URL}/api/${\n    process.env.REACT_APP_DHIS2_API_VERSION\n}`\nconst schemas = ['organisationUnit', 'dataSet', 'validationRuleGroup']\n\nconst config = {\n    baseUrl: process.env.REACT_APP_DHIS2_BASE_URL,\n    apiVersion: process.env.REACT_APP_DHIS2_API_VERSION,\n}\n\nconst render = d2 =>\n    ReactDOM.render(\n        <Provider config={config}>\n            <MuiThemeProvider muiTheme={appTheme}>\n                <div>\n                    <CssReset />\n                    <HashRouter>\n                        <AppComponent d2={d2} />\n                    </HashRouter>\n                </div>\n            </MuiThemeProvider>\n        </Provider>,\n        document.getElementById('root')\n    )\n\nconst start = async () => {\n    const d2 = await init({ baseUrl, schemas })\n    const userSettings = await getUserSettings()\n    const uiLocale = userSettings.keyUiLocale\n\n    sessionStorage.setItem('uiLocale', uiLocale || 'en')\n    injectTranslationsToD2(d2)\n    configI18n(userSettings)\n    render(d2)\n}\n\nstart()\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridElement\":\"GridSection_gridElement__3DOqL\",\"gridTitleBar\":\"GridSection_gridTitleBar__2-OEV\",\"gridTitleDescription\":\"GridSection_gridTitleDescription__1jy96\",\"gridIcon\":\"GridSection_gridIcon__1INTx\",\"gridDescription\":\"GridSection_gridDescription__1NNso\",\"gridActionText\":\"GridSection_gridActionText__1S-Gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"App_contentArea__Y_GhT\",\"contentWrapper\":\"App_contentWrapper__32IM7\",\"contentWrapperNoMargin\":\"App_contentWrapperNoMargin__22Ctq\",\"leftBar\":\"App_leftBar__1mpSD\",\"centered\":\"App_centered__2lsYq\"};"],"sourceRoot":""}