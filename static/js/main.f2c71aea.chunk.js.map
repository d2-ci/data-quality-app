{"version":3,"sources":["App.module.css","pages/Page.module.css","pages/validation-rules-analysis/validation-rules-analysis-table/ValidationRulesAnalysisTable.module.css","components/table/TableCellContent.module.css","components/available-datasets-select/AvailableDatasetsSelect.module.css","pages/home/Home.module.css","components/alert-bar/AlertBar.module.css","components/available-organisation-units-tree/AvailableOrganisationUnitsTree.module.css","components/download-as/DownloadAs.module.css","components/outlier-analysis-table/OutlierAnalysisTable.module.css","pages/follow-up-analysis/follow-up-analysis-table/FollowUpAnalysisTable.module.css","pages/validation-rules-analysis/validation-rules-details/ValidationRulesDetails.module.css","locales/index.js","configI18n.js","pages/home/grid-section/GridSection.js","pages/Page.js","components/alert-bar/AlertBar.js","components/validation-rule-groups-select/ValidationRuleGroupsSelect.js","components/available-organisation-units-tree/AvailableOrganisationUnitsTree.js","helpers/docs.js","components/page-helper/PageHelper.js","pages/PageStyles.js","components/formatters/FormattedNumber.js","components/download-as/DownloadAs.js","server.conf.js","pages/validation-rules-analysis/validation-rules-details/ValidationRulesDetails.js","components/table/TableCellContent.js","pages/validation-rules-analysis/validation-rules-analysis-table/ValidationRulesAnalysisTable.js","helpers/dates.js","pages/validation-rules-analysis/ValidationRulesAnalysis.js","components/available-datasets-select/AvailableDatasetsSelect.js","components/outlier-analysis-table/OutlierAnalysisTable.js","pages/std-dev-outlier-analysis/StdDevOutlierAnalysis.js","pages/min-max-outlier-analysis/MinMaxOutlierAnalysis.js","pages/follow-up-analysis/follow-up-analysis-table/FollowUpAnalysisTable.js","pages/follow-up-analysis/FollowUpAnalysis.js","pages/sections.conf.js","pages/home/Home.js","components/app-router/NoMatch.js","components/app-router/AppRouter.js","App.js","theme.js","serviceWorker.js","index.js","pages/home/grid-section/GridSection.module.css"],"names":["module","exports","contentArea","contentWrapper","leftBar","centered","section","mainButton","appTable","right","center","centerFlex","pageHeader","cardHeader","cardFooter","spaceBetween","end","formLabel","checkboxWrapper","validationTable","operator","tableCellContent","tableCellContent-narrow","tableCellContent-medium","tableCellContent-wide","select","options","gridContainer","alertBar","tree","downloadAs","outlierAnalysisTable","followUpAnalysisTable","sectionBox","sectionTitle","sectionSubTitle","noData","namespace","moment","locale","i18n","addResources","arTranslations","ar_IQTranslations","ckbTranslations","csTranslations","daTranslations","enTranslations","esTranslations","frTranslations","idTranslations","kmTranslations","loTranslations","myTranslations","nbTranslations","prsTranslations","psTranslations","ptTranslations","pt_BRTranslations","ruTranslations","svTranslations","tetTranslations","tgTranslations","ukTranslations","urTranslations","uzTranslations","uz_CyrlTranslations","viTranslations","zhTranslations","zh_CNTranslations","setDefaultNamespace","changeLanguage","configI18n","userSettings","lang","keyUiLocale","code","langs","prefixed","map","c","concat","includes","filter","startsWith","length","isLangRTL","document","body","setAttribute","injectTranslationsToD2","d2","translations","settings","app_search_placeholder","profile","account","help","log_out","about_dhis2","manage_my_apps","no_results_found","interpretations","messages","Object","keys","forEach","key","t","assign","GridSection","react_default","a","createElement","react_router_dom","className","to","this","props","path","GridList","classNames","styles","gridElement","gridTitleBar","gridTitleDescription","info","label","FontIcon_default","gridIcon","icon","gridDescription","description","gridActionText","actionText","PureComponent","Page","pageMounted","context","currentSection","sectionKey","updateAppState","error","isPageMounted","messageError","message","showSnackbar","snackbarConf","type","ERROR","pageState","loading","Component","contextTypes","PropTypes","object","string","func","AlertBar","index_es","style","display","show","ALL_VALIDATION_RULE_GROUPS_ID","ALL_VALIDATION_RULE_GROUPS_OPTION","id","displayName","ValidationRuleGroupsSelect","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","validationRuleGroups","selected","onChange","bind","assertThisInitialized","_this2","translatedAllValidationRulesOption","models","validationRuleGroup","list","paging","fields","then","validationRuleGroupsResponse","setState","toConsumableArray","toArray","catch","manageError","event","index","value","selectedName","SelectField_default","floatingLabelText","item","MenuItem_default","primaryText","defaultProps","AvailableOrganisationUnitsTree","rootsWithMembers","handleOrgUnitClick","loadAvailableOrgUnits","organisationUnitsResponse","organisationUnits","currentUser","getDataViewOrganisationUnits","size","authorities","has","level","orgUnit","selectedOrganisationUnitSplitted","split","selectedOrganisationUnitId","_this3","rootOrgUnit","OrgUnitTree_component","hideMemberCount","Boolean","root","initiallyExpanded","onSelectClick","getDocsVersion","_ref","major","minor","snapshot","PageHelper","_this$props","lng","sectionDocsKey","iconStyle","color","href","system","version","target","rel","tooltip","tooltipPosition","iconClassName","pageStyles","inputForm","width","iconColor","fill","cursorStyle","cursor","FormattedNumber","Intl","NumberFormat","sessionStorage","getItem","minimumFractionDigits","maximumFractionDigits","format","DownloadAs","api","Api","getApi","timestamp","Date","now","baseUrl","endpoint","download","apiConf","endpoints","validationRulesAnalysis","validationRulesExpression","validationRulesReport","validationRules","minMaxOutliersAnalysis","standardDeviationOutliersAnalysis","folloupAnalysis","markDataValue","reportAnalysis","results","analysis","limit","ValidationRulesDetails","openDetails","rule","expression","leftSide","rightSide","loadDetails","handleClose","nextProps","nextState","property","hasOwnProperty","ValidationRulesAnalysis","STATE_PROPERTIES","requestRule","validationRuleId","requestExpression","periodId","organisationUnitId","attributeOptionComboId","Promise","all","get","_ref2","slicedToArray","dialogActions","primary","onClick","result","displayDescription","showNoData","side","cssPageStyles","buildSection","elements","classNameRow","element","name","formatters_FormattedNumber","Number","jsPageStyles","autoScrollBodyContent","title","actions","modal","open","onRequestClose","propTypes","isRequired","TableCellContent","cx","defineProperty","children","ValidationRulesAnalysisTable","shouldDisplayAttributeOptionCombo","some","e","attributeOptionCombo","rows","organisation","table_TableCellContent","period","importance","validationRule","leftValue","rightValue","validation_rules_details_ValidationRulesDetails","download_as_DownloadAs","selectable","fixedHeader","bodyStyle","overflowX","displaySelectAll","adjustForCheckbox","enableSelectAll","displayRowCheckbox","stripedRows","convertDateToApiDateFormat","date","toISOString","showTable","startDate","endDate","validationRuleGroupId","notification","persist","validate","back","startDateOnChange","endDateOnChange","organisationUnitOnChange","validationRuleGroupOnChange","updateSendNotifications","updatePersistNewResults","isFormValid","request","ou","vrg","post","objectSpread","response","convertElementFromApiResponse","feedback","SUCCESS","checked","page_helper_PageHelper","getDocsKeyForSection","alert_bar_AlertBar","showAlertBar","Card","available_organisation_units_tree_AvailableOrganisationUnitsTree","DatePicker_default","textFieldStyle","defaultDate","maxDate","minDate","validation_rule_groups_select_ValidationRuleGroupsSelect","Checkbox_default","labelPosition","onCheck","RaisedButton_default","disabled","isActionDisabled","validation_rules_analysis_table_ValidationRulesAnalysisTable","generateElementKey","attributeOptionComboDisplayName","organisationUnitDisplayName","periodDisplayName","validationRuleDescription","leftSideValue","rightSideValue","AvailableDatasetsSelect","dataSets","dataSet","dataSetsResponse","multiple","OutlierAnalyisTable","parentToggleCheckbox","toggleCheckbox","dataElement","min","max","marked","categoryOptionComboId","sourceId","dataElementId","dataElementName","sourceName","parseFloat","followup","convertElementToToggleFollowupRequest","DEFAULT_STANDARD_DEVIATION","StdDevOutlierAnalysis","dataSetIds","standardDeviation","start","dataSetsOnChange","standardDeviationOnChange","ds","selectedOptions","i","push","_loop","currentElement","followups","available_datasets_select_AvailableDatasetsSelect","OutlierAnalysisTable","MinMaxOutlierAnalysis","FollowUpAnalysisTable","showComment","comment","unfollow","closeCommentDialog","element1","element2","unfollowups","convertElementToUnFollowupRequest","oneChecked","commentDialogActions","updateCheckbox","FollowUpAnalysis","getFollowUpList","j","areElementsTheSame","follow_up_analysis_table_FollowUpAnalysisTable","sections","component","docs","Home","gridElements","grid_section_GridSection","NoMatch","location","pathname","AppRouter","routes","react_router","exact","render","home_Home","App","appState","translatedSections","containerElement","feedbackElement","CircularProgress","FeedbackSnackbar_component","conf","HeaderBar","appName","Sidebar_component","onChangeSection","app_router_AppRouter","childContextTypes","bool","shape","theme","spacing","Spacing","fontFamily","palette","primary1Color","primary2Color","blue700","primary3Color","blue100","accent1Color","orange500","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","setLevel","levels","INFO","AppComponent","withRouter","process","ReactDOM","build_es","apiVersion","CssReset","D2UIApp","appTheme","initConfig","schemas","getElementById","getUserSettings","uiLocale","setItem","URL","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f2c71aea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"App_contentArea__Y_GhT\",\"contentWrapper\":\"App_contentWrapper__32IM7\",\"leftBar\":\"App_leftBar__1mpSD\",\"centered\":\"App_centered__2lsYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Page_section__48ljQ\",\"mainButton\":\"Page_mainButton__38d7P\",\"appTable\":\"Page_appTable__3ksZt\",\"right\":\"Page_right__oLgt0\",\"center\":\"Page_center__120Pl\",\"centerFlex\":\"Page_centerFlex__3KXC0\",\"pageHeader\":\"Page_pageHeader__1NFoO\",\"cardHeader\":\"Page_cardHeader__xj55q\",\"cardFooter\":\"Page_cardFooter__RiSMS\",\"spaceBetween\":\"Page_spaceBetween__2b-hs\",\"end\":\"Page_end__3xjyQ\",\"formLabel\":\"Page_formLabel__22ela\",\"checkboxWrapper\":\"Page_checkboxWrapper__1ypbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"validationTable\":\"ValidationRulesAnalysisTable_validationTable__IZ4f8\",\"operator\":\"ValidationRulesAnalysisTable_operator__1yruT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCellContent\":\"TableCellContent_tableCellContent__1MUDr\",\"tableCellContent-narrow\":\"TableCellContent_tableCellContent-narrow__1aY0P\",\"tableCellContent-medium\":\"TableCellContent_tableCellContent-medium__2drVF\",\"tableCellContent-wide\":\"TableCellContent_tableCellContent-wide__kE-pQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"AvailableDatasetsSelect_select__2RJaO\",\"options\":\"AvailableDatasetsSelect_options__2nV_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"Home_gridContainer__2RzmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBar\":\"AlertBar_alertBar__1nykA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tree\":\"AvailableOrganisationUnitsTree_tree__36zmA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"downloadAs\":\"DownloadAs_downloadAs__EXpfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outlierAnalysisTable\":\"OutlierAnalysisTable_outlierAnalysisTable__eaMyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followUpAnalysisTable\":\"FollowUpAnalysisTable_followUpAnalysisTable__plQH2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionBox\":\"ValidationRulesDetails_sectionBox__3I79x\",\"sectionTitle\":\"ValidationRulesDetails_sectionTitle__j-YIb\",\"sectionSubTitle\":\"ValidationRulesDetails_sectionSubTitle__3oXtg\",\"noData\":\"ValidationRulesDetails_noData__csWGG\"};","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/lo';\nimport 'moment/locale/nb';\nimport 'moment/locale/pt';\nimport 'moment/locale/ru';\nimport 'moment/locale/sv';\nimport 'moment/locale/tg';\nimport 'moment/locale/uk';\nimport 'moment/locale/ur';\nimport 'moment/locale/vi';\nimport 'moment/locale/zh-cn';\n\nimport arTranslations from './ar/translations.json';\nimport ar_IQTranslations from './ar_IQ/translations.json';\nimport ckbTranslations from './ckb/translations.json';\nimport csTranslations from './cs/translations.json';\nimport daTranslations from './da/translations.json';\nimport enTranslations from './en/translations.json';\nimport esTranslations from './es/translations.json';\nimport frTranslations from './fr/translations.json';\nimport idTranslations from './id/translations.json';\nimport kmTranslations from './km/translations.json';\nimport loTranslations from './lo/translations.json';\nimport myTranslations from './my/translations.json';\nimport nbTranslations from './nb/translations.json';\nimport prsTranslations from './prs/translations.json';\nimport psTranslations from './ps/translations.json';\nimport ptTranslations from './pt/translations.json';\nimport pt_BRTranslations from './pt_BR/translations.json';\nimport ruTranslations from './ru/translations.json';\nimport svTranslations from './sv/translations.json';\nimport tetTranslations from './tet/translations.json';\nimport tgTranslations from './tg/translations.json';\nimport ukTranslations from './uk/translations.json';\nimport urTranslations from './ur/translations.json';\nimport uzTranslations from './uz/translations.json';\nimport uz_CyrlTranslations from './uz_Cyrl/translations.json';\nimport viTranslations from './vi/translations.json';\nimport zhTranslations from './zh/translations.json';\nimport zh_CNTranslations from './zh_CN/translations.json';\n\nconst namespace = 'data-quality-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('ar_IQ', namespace, ar_IQTranslations);\ni18n.addResources('ckb', namespace, ckbTranslations);\ni18n.addResources('cs', namespace, csTranslations);\ni18n.addResources('da', namespace, daTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('es', namespace, esTranslations);\ni18n.addResources('fr', namespace, frTranslations);\ni18n.addResources('id', namespace, idTranslations);\ni18n.addResources('km', namespace, kmTranslations);\ni18n.addResources('lo', namespace, loTranslations);\ni18n.addResources('my', namespace, myTranslations);\ni18n.addResources('nb', namespace, nbTranslations);\ni18n.addResources('prs', namespace, prsTranslations);\ni18n.addResources('ps', namespace, psTranslations);\ni18n.addResources('pt', namespace, ptTranslations);\ni18n.addResources('pt_BR', namespace, pt_BRTranslations);\ni18n.addResources('ru', namespace, ruTranslations);\ni18n.addResources('sv', namespace, svTranslations);\ni18n.addResources('tet', namespace, tetTranslations);\ni18n.addResources('tg', namespace, tgTranslations);\ni18n.addResources('uk', namespace, ukTranslations);\ni18n.addResources('ur', namespace, urTranslations);\ni18n.addResources('uz', namespace, uzTranslations);\ni18n.addResources('uz_Cyrl', namespace, uz_CyrlTranslations);\ni18n.addResources('vi', namespace, viTranslations);\ni18n.addResources('zh', namespace, zhTranslations);\ni18n.addResources('zh_CN', namespace, zh_CNTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","import i18n from './locales'\n\nconst isLangRTL = code => {\n    const langs = ['ar', 'fa', 'ur']\n    const prefixed = langs.map(c => `${c}-`)\n\n    return (\n        langs.includes(code) ||\n        prefixed.filter(c => code.startsWith(c)).length > 0\n    )\n}\n\nexport const configI18n = userSettings => {\n    const lang = userSettings.keyUiLocale\n\n    if (isLangRTL(lang)) {\n        document.body.setAttribute('dir', 'rtl')\n    }\n\n    i18n.changeLanguage(lang)\n}\n\nexport const injectTranslationsToD2 = d2 => {\n    if (d2) {\n        const translations = {\n            settings: 'Settings',\n            app_search_placeholder: 'Search apps',\n            profile: 'Profile',\n            account: 'Account',\n            help: 'Help',\n            log_out: 'Log out',\n            about_dhis2: 'About DHIS 2',\n            manage_my_apps: 'Manage my apps',\n            no_results_found: 'No results found',\n            interpretations: 'Interpretations',\n            messages: 'Messages',\n        }\n        const translationKeys = Object.keys(translations)\n\n        translationKeys.forEach(key => {\n            translations[key] = i18n.t(translations[key])\n        })\n\n        Object.assign(d2.i18n.translations, translations)\n    }\n}\n\nexport default configI18n\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { GridTile } from 'material-ui/GridList'\nimport FontIcon from 'material-ui/FontIcon'\nimport classNames from 'classnames'\nimport i18n from '../../../locales'\nimport styles from './GridSection.module.css'\n\nclass GridSection extends PureComponent {\n    static propTypes = {\n        section: PropTypes.shape({\n            key: PropTypes.string,\n            path: PropTypes.string,\n            info: PropTypes.shape({\n                label: PropTypes.string,\n                description: PropTypes.string,\n                icon: PropTypes.string,\n                actionText: PropTypes.string,\n            }),\n        }).isRequired,\n    }\n\n    render() {\n        return (\n            <Link className=\"link\" to={this.props.section.path}>\n                <GridTile\n                    key={this.props.section.key}\n                    className={classNames('section', styles.gridElement)}\n                >\n                    <div className={classNames('row', styles.gridTitleBar)}>\n                        <span\n                            className={classNames(\n                                'section-title',\n                                styles.gridTitleDescription\n                            )}\n                        >\n                            {this.props.section.info.label}\n                        </span>\n                        <FontIcon\n                            className={classNames(\n                                'material-icons',\n                                'icon',\n                                styles.gridIcon\n                            )}\n                        >\n                            {this.props.section.info.icon}\n                        </FontIcon>\n                    </div>\n                    <span\n                        className={classNames(\n                            'section-description',\n                            'row',\n                            styles.gridDescription\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.description)}\n                    </span>\n                    <span\n                        className={classNames(\n                            'section-action-text',\n                            'row',\n                            styles.gridActionText\n                        )}\n                    >\n                        {i18n.t(this.props.section.info.actionText)}\n                    </span>\n                </GridTile>\n            </Link>\n        )\n    }\n}\n\nexport default GridSection\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ERROR } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport i18n from '../locales'\n\nclass Page extends Component {\n    static propTypes = {\n        sectionKey: PropTypes.string.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    componentWillMount() {\n        this.pageMounted = true\n\n        // update section on side bar\n        if (this.context.currentSection !== this.props.sectionKey) {\n            this.context.updateAppState({\n                currentSection: this.props.sectionKey,\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this.pageMounted = false\n    }\n\n    isPageMounted() {\n        return this.pageMounted\n    }\n\n    manageError(error) {\n        if (this.isPageMounted()) {\n            const messageError =\n                error && error.message\n                    ? error.message\n                    : i18n.t('An unexpected error happened during analysis')\n\n            this.context.updateAppState({\n                showSnackbar: true,\n                snackbarConf: {\n                    type: ERROR,\n                    message: messageError,\n                },\n                pageState: {\n                    loading: false,\n                },\n            })\n        }\n    }\n}\n\nexport default Page\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Paper } from 'material-ui'\nimport styles from './AlertBar.module.css'\nimport i18n from '../../locales'\n\nclass AlertBar extends PureComponent {\n    static propTypes = {\n        show: PropTypes.bool.isRequired,\n    }\n\n    render() {\n        return (\n            <Paper>\n                <div\n                    className={styles.alertBar}\n                    style={{ display: this.props.show ? 'flex' : 'none' }}\n                >\n                    {i18n.t(\n                        'More than 500 values found, please narrow the search to see all'\n                    )}\n                </div>\n            </Paper>\n        )\n    }\n}\n\nexport default AlertBar\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport i18n from '../../locales'\n\nexport const ALL_VALIDATION_RULE_GROUPS_ID = -1\nexport const ALL_VALIDATION_RULE_GROUPS_OPTION = {\n    id: ALL_VALIDATION_RULE_GROUPS_ID,\n    displayName: '[All Validation Rules]',\n}\n\nclass ValidationRuleGroupsSelect extends PureComponent {\n    static propTypes = {\n        style: PropTypes.object,\n        onChange: PropTypes.func.isRequired,\n    }\n\n    static defaultProps = {\n        style: {},\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            validationRuleGroups: [ALL_VALIDATION_RULE_GROUPS_OPTION],\n            selected: ALL_VALIDATION_RULE_GROUPS_ID,\n        }\n\n        this.onChange = this.onChange.bind(this)\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        const translatedAllValidationRulesOption = ALL_VALIDATION_RULE_GROUPS_OPTION\n        translatedAllValidationRulesOption.displayName = i18n.t(\n            ALL_VALIDATION_RULE_GROUPS_OPTION.displayName\n        )\n        d2.models.validationRuleGroup\n            .list({\n                paging: false,\n                fields: 'id,displayName',\n            })\n            .then(validationRuleGroupsResponse => {\n                this.setState({\n                    validationRuleGroups: [\n                        translatedAllValidationRulesOption,\n                        ...validationRuleGroupsResponse.toArray(),\n                    ],\n                })\n            })\n            .catch(() => {\n                this.manageError()\n            })\n    }\n\n    onChange(event, index, value) {\n        this.setState({\n            selected: value,\n            selectedName:\n                value === ALL_VALIDATION_RULE_GROUPS_ID\n                    ? '[All Validation Rules]'\n                    : this.state.validationRuleGroups[index].displayName,\n        })\n\n        this.props.onChange(event, index, value)\n    }\n\n    render() {\n        return (\n            <SelectField\n                style={this.props.style}\n                floatingLabelText={i18n.t('Validation Rule Group')}\n                onChange={this.onChange}\n                value={this.state.selected}\n            >\n                {this.state.validationRuleGroups.map(item => (\n                    <MenuItem\n                        key={item.id}\n                        value={item.id}\n                        primaryText={item.displayName}\n                    />\n                ))}\n            </SelectField>\n        )\n    }\n}\n\nexport default ValidationRuleGroupsSelect\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport OrgUnitTree from 'd2-ui/lib/org-unit-tree/OrgUnitTree.component'\nimport i18n from '../../locales'\nimport styles from './AvailableOrganisationUnitsTree.module.css'\n\nclass AvailableOrganisationUnitsTree extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        onChange: PropTypes.func,\n    }\n\n    static defaultProps = {\n        onChange: null,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            selected: [],\n            rootsWithMembers: null,\n        }\n\n        this.handleOrgUnitClick = this.handleOrgUnitClick.bind(this)\n        this.loadAvailableOrgUnits = this.loadAvailableOrgUnits.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.state.rootsWithMembers === null) {\n            this.loadAvailableOrgUnits()\n                .then(organisationUnitsResponse => {\n                    const organisationUnits = organisationUnitsResponse.toArray()\n                    this.setState({\n                        rootsWithMembers: organisationUnits,\n                    })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    async loadAvailableOrgUnits() {\n        const d2 = this.context.d2\n\n        const orgUnits = await d2.currentUser.getDataViewOrganisationUnits({\n            fields: 'id,displayName,path,children::isNotEmpty,memberCount',\n            paging: false,\n        })\n\n        if (!orgUnits.size && d2.currentUser.authorities.has('ALL')) {\n            // if special all-authority we have access to all orgunits\n            return d2.models.organisationUnits.list({\n                paging: false,\n                level: 1,\n                fields: 'id,displayName,path,children::isNotEmpty,memberCount',\n            })\n        }\n\n        return d2.currentUser.getDataViewOrganisationUnits({\n            paging: false,\n            fields: 'id,displayName,path,children::isNotEmpty,memberCount',\n        })\n    }\n\n    handleOrgUnitClick(event, orgUnit) {\n        if (!this.state.selected.includes(orgUnit.path)) {\n            this.setState({ selected: [orgUnit.path] })\n            if (this.props.onChange) {\n                const selectedOrganisationUnitSplitted = orgUnit.path.split('/')\n                const selectedOrganisationUnitId =\n                    selectedOrganisationUnitSplitted[\n                        selectedOrganisationUnitSplitted.length - 1\n                    ]\n                this.props.onChange(selectedOrganisationUnitId)\n            }\n        }\n    }\n\n    render() {\n        if (!this.state.rootsWithMembers) {\n            return <span>{i18n.t('Updating Organisation Units Tree...')}</span>\n        }\n\n        if (this.state.rootsWithMembers.length < 1) {\n            return (\n                <p>\n                    {i18n.t(\n                        'You do not have access to any organisation units.'\n                    )}\n                </p>\n            )\n        }\n\n        return (\n            <div className={styles.tree}>\n                {this.state.rootsWithMembers.map(rootOrgUnit => (\n                    <OrgUnitTree\n                        key={rootOrgUnit.id}\n                        hideMemberCount={Boolean(true)}\n                        root={rootOrgUnit}\n                        selected={this.state.selected}\n                        initiallyExpanded={[`/${rootOrgUnit.id}`]}\n                        onSelectClick={this.handleOrgUnitClick}\n                    />\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default AvailableOrganisationUnitsTree\n","export const DOCS_LINK = 'https://docs.dhis2.org'\nexport const DOCS_TOOLTIP_LABEL = 'Open user guide'\n\n/**\n * Returns the \"version\" of the documentation that corresponds with the current dhis2 version.\n *\n * @param {Object} version - The version definition as provided by d2.system.version.\n * @param {number} version.minor - The minor dhis2 version. e.g. The 25 in 2.25.\n * @param {boolean} version.snapshot - True when the current version is the snapshot(master/development) branch.\n *\n * @returns {string} `master` for a snapshot branch. `25` for 2.25 etc.\n */\nexport const getDocsVersion = ({ major, minor, snapshot }) => {\n    if (snapshot) {\n        return 'master'\n    }\n    return `${major}.${minor}`\n}\n\nexport default getDocsVersion\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { IconButton } from 'material-ui'\nimport i18n from '../../locales'\nimport {\n    getDocsVersion,\n    DOCS_LINK,\n    DOCS_TOOLTIP_LABEL,\n} from '../../helpers/docs'\n\nclass PageHelper extends PureComponent {\n    static propTypes = {\n        lng: PropTypes.string,\n        sectionDocsKey: PropTypes.string.isRequired,\n    }\n\n    static defaultProps = {\n        lng: 'en',\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    render() {\n        const { d2 } = this.context\n        const { lng, sectionDocsKey } = this.props\n        return (\n            <IconButton\n                className=\"helper-icon\"\n                iconStyle={{ color: '#276696' }}\n                href={`${DOCS_LINK}/${getDocsVersion(\n                    d2.system.version\n                )}/${lng}/user/html/${sectionDocsKey}.html`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                tooltip={i18n.t(DOCS_TOOLTIP_LABEL)}\n                tooltipPosition=\"bottom-center\"\n                iconClassName=\"material-icons\"\n            >\n                help\n            </IconButton>\n        )\n    }\n}\n\nexport default PageHelper\n","const pageStyles = {\n    inputForm: {\n        width: '100%',\n    },\n    iconColor: {\n        fill: '#ff9900',\n    },\n    cursorStyle: {\n        cursor: 'pointer',\n    },\n}\n\nexport default pageStyles\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FormattedNumber = props => (\n    <span>\n        {new Intl.NumberFormat(sessionStorage.getItem('uiLocale'), {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n        }).format(props.value)}\n    </span>\n)\n\nFormattedNumber.propTypes = {\n    value: PropTypes.number.isRequired,\n}\n\nexport default FormattedNumber\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '../../locales'\nimport styles from './DownloadAs.module.css'\n\nclass DownloadAs extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        endpoint: PropTypes.string.isRequired,\n    }\n\n    render() {\n        const api = this.context.d2.Api.getApi()\n        const timestamp = Date.now()\n        return (\n            <div className={styles.downloadAs}>\n                <a\n                    className=\"export-pdf-action\"\n                    href={`${api.baseUrl}${\n                        this.props.endpoint\n                    }.pdf?t=${timestamp}`}\n                    download\n                >\n                    {i18n.t('DOWNLOAD AS PDF')}\n                </a>\n                <a\n                    className=\"export-xls-action\"\n                    href={`${api.baseUrl}${\n                        this.props.endpoint\n                    }.xls?t=${timestamp}`}\n                    download\n                >\n                    {i18n.t('DOWNLOAD AS XLS')}\n                </a>\n                <a\n                    className=\"export-csv-action\"\n                    href={`${api.baseUrl}${\n                        this.props.endpoint\n                    }.csv?t=${timestamp}`}\n                    download\n                >\n                    {i18n.t('DOWNLOAD AS CSV')}\n                </a>\n            </div>\n        )\n    }\n}\n\nexport default DownloadAs\n","export const apiConf = {\n    endpoints: {\n        validationRulesAnalysis: '/dataAnalysis/validationRules',\n        validationRulesExpression: '/dataAnalysis/validationRulesExpression',\n        validationRulesReport: '/dataAnalysis/validationRules/report',\n        validationRules: '/validationRules',\n        minMaxOutliersAnalysis: '/dataAnalysis/minMaxOutlier',\n        standardDeviationOutliersAnalysis: '/dataAnalysis/stdDevOutlier',\n        folloupAnalysis: '/dataAnalysis/followup',\n        markDataValue: '/dataAnalysis/followup/mark',\n        reportAnalysis: '/dataAnalysis/report',\n    },\n    results: {\n        analysis: {\n            limit: 500,\n        },\n    },\n}\n\nexport default apiConf\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Dialog, FlatButton, FontIcon } from 'material-ui'\nimport classNames from 'classnames'\nimport i18n from '../../../locales'\nimport Page from '../../Page'\nimport jsPageStyles from '../../PageStyles'\nimport cssPageStyles from '../../Page.module.css'\nimport styles from './ValidationRulesDetails.module.css'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport { apiConf } from '../../../server.conf'\nimport ValidationRulesAnalysis from '../ValidationRulesAnalysis'\n\nclass ValidationRulesDetails extends Page {\n    static STATE_PROPERTIES = ['loading']\n\n    static propTypes = {\n        validationRuleId: PropTypes.string.isRequired,\n        periodId: PropTypes.string.isRequired,\n        organisationUnitId: PropTypes.string.isRequired,\n        attributeOptionComboId: PropTypes.string.isRequired,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            loading: false,\n            openDetails: false,\n            rule: {},\n            expression: {\n                leftSide: [],\n                rightSide: [],\n            },\n        }\n\n        this.loadDetails = this.loadDetails.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ValidationRulesAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    loadDetails() {\n        if (!this.state.loading) {\n            const api = this.context.d2.Api.getApi()\n            const requestRule = `${apiConf.endpoints.validationRules}/${\n                this.props.validationRuleId\n            }`\n            const requestExpression =\n                `${apiConf.endpoints.validationRulesExpression}` +\n                `?validationRuleId=${this.props.validationRuleId}` +\n                `&periodId=${this.props.periodId}` +\n                `&organisationUnitId=${this.props.organisationUnitId}` +\n                `&attributeOptionComboId=${this.props.attributeOptionComboId}`\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n            Promise.all([api.get(requestRule), api.get(requestExpression)])\n                .then(([rule, expression]) => {\n                    this.context.updateAppState({\n                        pageState: {\n                            loading: false,\n                        },\n                    })\n                    this.setState({ openDetails: true, rule, expression })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    handleClose() {\n        this.setState({ openDetails: false })\n    }\n\n    render() {\n        // Details Actions\n        const dialogActions = [\n            <FlatButton\n                className=\"close-action\"\n                key={`FB${this.props.organisationUnitId}-${\n                    this.props.periodId\n                }-${this.props.validationRuleId}`}\n                label={i18n.t('Close')}\n                primary={Boolean(true)}\n                onClick={this.handleClose}\n            />,\n        ]\n\n        const result = (\n            <div\n                className={classNames('row', 'results-row', styles.sectionBox)}\n            >\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {i18n.t('VALIDATIONS RESULT DETAILS')}\n                </div>\n                <div\n                    className={classNames('col-xs-12', styles.sectionSubTitle)}\n                >\n                    {i18n.t('VALIDATION RULE')}\n                </div>\n                <div className={'col-xs-3'}>{i18n.t('Name')}</div>\n                <div className={'col-xs-9'}>{this.state.rule.displayName}</div>\n                <div className={'col-xs-3'}>{i18n.t('Description')}</div>\n                <div className={'col-xs-9'}>\n                    {this.state.rule.displayDescription}\n                </div>\n            </div>\n        )\n\n        const showNoData = side => (\n            <div className={classNames('row', styles.sectionBox)}>\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {side}\n                </div>\n                <div className={classNames('col-xs-12', cssPageStyles.center)}>\n                    <div className={styles.noData}>\n                        {i18n.t('no data available')}\n                    </div>\n                </div>\n            </div>\n        )\n\n        const buildSection = (side, elements, classNameRow) => (\n            <div className={classNames('row', classNameRow, styles.sectionBox)}>\n                <div className={classNames('col-xs-12', styles.sectionTitle)}>\n                    {side}\n                </div>\n                <div\n                    className={classNames('col-xs-10', styles.sectionSubTitle)}\n                >\n                    {i18n.t('DATA ELEMENT')}\n                </div>\n                <div\n                    className={classNames(\n                        'col-xs-2',\n                        styles.sectionSubTitle,\n                        cssPageStyles.right\n                    )}\n                >\n                    {i18n.t('VALUE')}\n                </div>\n                {elements.map(element => (\n                    <div key={element.name} className={'col-xs-12'}>\n                        <div className={'row'}>\n                            <div className={'col-xs-10'}>{element.name}</div>\n                            <div\n                                className={classNames(\n                                    'col-xs-2',\n                                    cssPageStyles.right\n                                )}\n                            >\n                                {element.value ? (\n                                    <FormattedNumber\n                                        value={Number(element.value)}\n                                    />\n                                ) : (\n                                    '-'\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        )\n\n        return (\n            <div>\n                <FontIcon\n                    key={`FI|${this.props.organisationUnitId}-${\n                        this.props.periodId\n                    }-${this.props.validationRuleId}`}\n                    className={\n                        'validation-rules-show-details-action material-icons'\n                    }\n                    style={jsPageStyles.cursorStyle}\n                    onClick={this.loadDetails}\n                >\n                    info\n                </FontIcon>\n                <Dialog\n                    className=\"validation-rules-details-dialog\"\n                    key={`D${this.props.organisationUnitId}-${\n                        this.props.periodId\n                    }-${this.props.validationRuleId}`}\n                    autoScrollBodyContent={Boolean(true)}\n                    title={i18n.t('Validation Details')}\n                    actions={dialogActions}\n                    modal={Boolean(true)}\n                    open={this.state.openDetails}\n                    onRequestClose={this.handleClose}\n                >\n                    {/* Result */}\n                    {result}\n                    {/* Left Side */}\n                    {this.state.expression.leftSide &&\n                    this.state.expression.leftSide.length > 0\n                        ? buildSection(\n                              i18n.t('LEFT SIDE'),\n                              this.state.expression.leftSide,\n                              'left-side-row'\n                          )\n                        : showNoData(i18n.t('LEFT SIDE'))}\n                    {/* Right Side */}\n                    {this.state.expression.rightSide &&\n                    this.state.expression.rightSide.length > 0\n                        ? buildSection(\n                              i18n.t('RIGHT SIDE'),\n                              this.state.expression.rightSide,\n                              'right-side-row'\n                          )\n                        : showNoData(i18n.t('RIGHT SIDE'))}\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesDetails\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './TableCellContent.module.css'\nimport cx from 'classnames'\n\nconst TableCellContent = props => (\n    <div\n        className={cx(styles.tableCellContent, props.className, {\n            [styles[`tableCellContent-${props.size}`]]: props.size,\n        })}\n    >\n        {props.children}\n    </div>\n)\n\nTableCellContent.propTypes = {\n    size: PropTypes.oneOf(['narrow', 'medium', 'wide']),\n}\n\nexport default TableCellContent\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../../components/download-as/DownloadAs'\nimport cssPageStyles from '../../Page.module.css'\nimport styles from './ValidationRulesAnalysisTable.module.css'\nimport i18n from '../../../locales'\nimport ValidationRulesDetails from '../validation-rules-details/ValidationRulesDetails'\nimport { apiConf } from '../../../server.conf'\nimport TableCellContent from '../../../components/table/TableCellContent'\n\nclass ValidationRulesAnalysisTable extends PureComponent {\n    static propTypes = {\n        elements: PropTypes.array.isRequired,\n    }\n\n    render() {\n        const elements = this.props.elements\n\n        const shouldDisplayAttributeOptionCombo = elements.some(\n            e => e.attributeOptionCombo && e.attributeOptionCombo !== 'default'\n        )\n\n        // Table Rows\n        const rows = elements.map(element => (\n            <TableRow key={element.key}>\n                <TableRowColumn title={element.organisation}>\n                    <TableCellContent>{element.organisation}</TableCellContent>\n                </TableRowColumn>\n                {shouldDisplayAttributeOptionCombo && (\n                    <TableRowColumn title={element.attributeOptionCombo}>\n                        <TableCellContent size=\"wide\">\n                            {element.attributeOptionCombo}\n                        </TableCellContent>\n                    </TableRowColumn>\n                )}\n                <TableRowColumn title={element.period}>\n                    <TableCellContent>{element.period}</TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.importance}>\n                    <TableCellContent>{element.importance}</TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.validationRule}>\n                    <TableCellContent size={'medium'}>\n                        {element.validationRule}\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.leftValue}>\n                    <TableCellContent>\n                        <FormattedNumber value={element.leftValue} />\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.operator}>\n                    <TableCellContent className={styles.operator}>\n                        {element.operator}\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn title={element.rightValue}>\n                    <TableCellContent>\n                        <FormattedNumber value={element.rightValue} />\n                    </TableCellContent>\n                </TableRowColumn>\n                <TableRowColumn>\n                    <TableCellContent>\n                        <ValidationRulesDetails\n                            validationRuleId={element.validationRuleId}\n                            periodId={element.periodId}\n                            organisationUnitId={element.organisationUnitId}\n                            attributeOptionComboId={\n                                element.attributeOptionComboId\n                            }\n                        />\n                    </TableCellContent>\n                </TableRowColumn>\n            </TableRow>\n        ))\n\n        return (\n            <div>\n                <div className={cssPageStyles.cardHeader}>\n                    <DownloadAs\n                        endpoint={apiConf.endpoints.validationRulesReport}\n                    />\n                </div>\n                <Table\n                    selectable={false}\n                    className={classNames(\n                        cssPageStyles.appTable,\n                        styles.validationTable\n                    )}\n                    fixedHeader={false}\n                    bodyStyle={{ overflowX: 'auto' }}\n                >\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                    >\n                        <TableRow>\n                            <TableHeaderColumn\n                                title={i18n.t('Organisation Unit')}\n                            >\n                                {i18n.t('Organisation Unit')}\n                            </TableHeaderColumn>\n                            {shouldDisplayAttributeOptionCombo && (\n                                <TableHeaderColumn\n                                    title={i18n.t(\n                                        'Attribute Option Combination'\n                                    )}\n                                >\n                                    {i18n.t('Attr. Opt. Combo')}\n                                </TableHeaderColumn>\n                            )}\n                            <TableHeaderColumn title={i18n.t('Period')}>\n                                {i18n.t('Period')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Importance')}>\n                                {i18n.t('Importance')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn\n                                title={i18n.t('Validation Rule')}\n                            >\n                                {i18n.t('Validation Rule')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Value')}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Operator')}>\n                                {i18n.t('Operator')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Value')}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn title={i18n.t('Details')}>\n                                {i18n.t('Details')}\n                            </TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody displayRowCheckbox={false} stripedRows={false}>\n                        {rows}\n                    </TableBody>\n                </Table>\n                <div\n                    className={classNames(\n                        cssPageStyles.cardFooter,\n                        cssPageStyles.end\n                    )}\n                >\n                    <DownloadAs\n                        endpoint={apiConf.endpoints.validationRulesReport}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesAnalysisTable\n","// get Date from YYYY-MM-DDTHH:mm:ss.mmmm\nexport const convertDateToApiDateFormat = date =>\n    date.toISOString().split('T')[0]\n\nexport default convertDateToApiDateFormat\n","import React from 'react'\nimport classNames from 'classnames'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport Checkbox from 'material-ui/Checkbox'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport Page from '../Page'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport ValidationRuleGroupsSelect, {\n    ALL_VALIDATION_RULE_GROUPS_ID,\n} from '../../components/validation-rule-groups-select/ValidationRuleGroupsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport i18n from '../../locales'\nimport jsPageStyles from '../PageStyles'\nimport cssPageStyles from '../Page.module.css'\nimport ValidationRulesAnalysisTable from './validation-rules-analysis-table/ValidationRulesAnalysisTable'\nimport { apiConf } from '../../server.conf'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\n\nclass ValidationRulesAnalysis extends Page {\n    static STATE_PROPERTIES = ['loading', 'elements', 'showTable']\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            validationRuleGroupId: ALL_VALIDATION_RULE_GROUPS_ID,\n            notification: false,\n            persist: false,\n            elements: [],\n            loading: false,\n        }\n\n        this.validate = this.validate.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.validationRuleGroupOnChange = this.validationRuleGroupOnChange.bind(\n            this\n        )\n        this.updateSendNotifications = this.updateSendNotifications.bind(this)\n        this.updatePersistNewResults = this.updatePersistNewResults.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                ValidationRulesAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    static generateElementKey = e =>\n        `${e.validationRuleId}-${e.periodId}-${e.organisationUnitId}-${\n            e.attributeOptionComboId\n        }`\n\n    static convertElementFromApiResponse = e => ({\n        key: ValidationRulesAnalysis.generateElementKey(e),\n        validationRuleId: e.validationRuleId,\n        attributeOptionCombo: e.attributeOptionComboDisplayName,\n        attributeOptionComboId: e.attributeOptionComboId,\n        organisation: e.organisationUnitDisplayName,\n        organisationUnitId: e.organisationUnitId,\n        period: e.periodDisplayName,\n        periodId: e.periodId,\n        importance: e.importance,\n        validationRule: e.validationRuleDescription,\n        leftValue: e.leftSideValue,\n        operator: e.operator,\n        rightValue: e.rightSideValue,\n    })\n\n    validate() {\n        const api = this.context.d2.Api.getApi()\n\n        if (this.isFormValid()) {\n            const request = {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                notification: this.state.notification,\n                persist: this.state.persist,\n            }\n\n            if (\n                this.state.validationRuleGroupId !==\n                ALL_VALIDATION_RULE_GROUPS_ID\n            ) {\n                request.vrg = this.state.validationRuleGroupId\n            }\n\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.validationRulesAnalysis, { ...request })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            ValidationRulesAnalysis.convertElementFromApiResponse\n                        )\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t(\n                                              'Validation passed successfully'\n                                          ),\n                                      },\n                                  }\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    validationRuleGroupOnChange(event, index, value) {\n        this.setState({ validationRuleGroupId: value })\n    }\n\n    updateSendNotifications(event, checked) {\n        this.setState({ notification: checked })\n    }\n\n    updatePersistNewResults(event, checked) {\n        this.setState({ persist: checked })\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Validation Rule Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                className={classNames(\n                                    'col-md-6',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-6',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    value={this.state.startDate}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    value={this.state.endDate}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                />\n                                <div id=\"validation-rule-groups\">\n                                    <ValidationRuleGroupsSelect\n                                        style={jsPageStyles.inputForm}\n                                        onChange={\n                                            this.validationRuleGroupOnChange\n                                        }\n                                    />\n                                </div>\n                                <div id=\"send-notifications-option\">\n                                    <Checkbox\n                                        label={i18n.t('Send Notifications')}\n                                        labelPosition=\"left\"\n                                        checked={this.state.notification}\n                                        onCheck={this.updateSendNotifications}\n                                    />\n                                </div>\n                                <div id=\"persist-results-option\">\n                                    <Checkbox\n                                        label={i18n.t('Persist new results')}\n                                        labelPosition=\"left\"\n                                        checked={this.state.persist}\n                                        onCheck={this.updatePersistNewResults}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            label={i18n.t('validate')}\n                            primary\n                            disabled={this.isActionDisabled()}\n                            onClick={this.validate}\n                        />\n                    </CardText>\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <ValidationRulesAnalysisTable\n                            elements={this.state.elements}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default ValidationRulesAnalysis\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './AvailableDatasetsSelect.module.css'\n\nclass AvailableDatasetsSelect extends PureComponent {\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static propTypes = {\n        onChange: PropTypes.func,\n    }\n\n    static defaultProps = {\n        onChange: null,\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            dataSets: null,\n        }\n    }\n\n    componentDidMount() {\n        const d2 = this.context.d2\n        if (this.state.dataSets == null) {\n            d2.models.dataSet\n                .list({\n                    paging: false,\n                    fields: 'id,displayName',\n                })\n                .then(dataSetsResponse => {\n                    this.setState({\n                        dataSets: dataSetsResponse.toArray(),\n                    })\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    render() {\n        return (\n            <select\n                multiple\n                className={styles.select}\n                onChange={this.props.onChange}\n            >\n                {(this.state.dataSets || []).map(item => (\n                    <option\n                        key={item.id}\n                        value={item.id}\n                        className={styles.options}\n                    >\n                        {item.displayName}\n                    </option>\n                ))}\n            </select>\n        )\n    }\n}\n\nexport default AvailableDatasetsSelect\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Checkbox,\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui'\nimport FormattedNumber from '../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../components/download-as/DownloadAs'\nimport i18n from '../../locales'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../../pages/Page.module.css'\nimport jsPageStyles from '../../pages/PageStyles'\nimport styles from './OutlierAnalysisTable.module.css'\n\nconst OutlierAnalyisTable = props => {\n    const elements = props.elements\n    const parentToggleCheckbox = props.toggleCheckbox\n\n    // Table Rows\n    const rows = elements.map(element => {\n        const updateCheckbox = () => {\n            parentToggleCheckbox(element)\n        }\n\n        return (\n            <TableRow key={element.key}>\n                <TableRowColumn>{element.dataElement}</TableRowColumn>\n                <TableRowColumn>{element.organisation}</TableRowColumn>\n                <TableRowColumn>{element.period}</TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.min} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.value} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.right}>\n                    <FormattedNumber value={element.max} />\n                </TableRowColumn>\n                <TableRowColumn className={cssPageStyles.centerFlex}>\n                    <span className={cssPageStyles.checkboxWrapper}>\n                        <Checkbox\n                            checked={element.marked}\n                            onCheck={updateCheckbox}\n                            iconStyle={jsPageStyles.iconColor}\n                        />\n                    </span>\n                </TableRowColumn>\n            </TableRow>\n        )\n    })\n\n    return (\n        <div>\n            <div className={cssPageStyles.cardHeader}>\n                <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n            </div>\n            <Table\n                selectable={false}\n                className={classNames(\n                    cssPageStyles.appTable,\n                    styles.outlierAnalysisTable\n                )}\n            >\n                <TableHeader\n                    displaySelectAll={false}\n                    adjustForCheckbox={false}\n                    enableSelectAll={false}\n                >\n                    <TableRow>\n                        <TableHeaderColumn>\n                            {i18n.t('Data Element')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn>\n                            {i18n.t('Organisation Unit')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn>\n                            {i18n.t('Period')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Min')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Value')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.right}>\n                            {i18n.t('Max')}\n                        </TableHeaderColumn>\n                        <TableHeaderColumn className={cssPageStyles.center}>\n                            {i18n.t('Mark')}\n                        </TableHeaderColumn>\n                    </TableRow>\n                </TableHeader>\n                <TableBody displayRowCheckbox={false} stripedRows={false}>\n                    {rows}\n                </TableBody>\n            </Table>\n            <div\n                className={classNames(\n                    cssPageStyles.cardFooter,\n                    cssPageStyles.end\n                )}\n            >\n                <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n            </div>\n        </div>\n    )\n}\n\nOutlierAnalyisTable.generateElementKey = e =>\n    `${e.attributeOptionComboId}-${e.categoryOptionComboId}-${e.periodId}-${\n        e.sourceId\n    }-${e.dataElementId}`\n\nOutlierAnalyisTable.convertElementFromApiResponse = e => ({\n    key: OutlierAnalyisTable.generateElementKey(e),\n    attributeOptionComboId: e.attributeOptionComboId,\n    categoryOptionComboId: e.categoryOptionComboId,\n    periodId: e.periodId,\n    organisationUnitId: e.sourceId,\n    dataElementId: e.dataElementId,\n    dataElement: e.dataElementName,\n    organisation: e.sourceName,\n    period: e.period.name,\n    min: e.min,\n    max: e.max,\n    value: Number.parseFloat(e.value),\n    marked: e.followup,\n})\n\nOutlierAnalyisTable.convertElementToToggleFollowupRequest = e => ({\n    dataElementId: e.dataElementId,\n    periodId: e.periodId,\n    organisationUnitId: e.organisationUnitId,\n    categoryOptionComboId: e.categoryOptionComboId,\n    attributeOptionComboId: e.attributeOptionComboId,\n    followup: !e.marked,\n})\n\nOutlierAnalyisTable.propTypes = {\n    elements: PropTypes.array.isRequired,\n    toggleCheckbox: PropTypes.func.isRequired,\n}\n\nOutlierAnalyisTable.contextTypes = {\n    d2: PropTypes.object,\n}\n\nexport default OutlierAnalyisTable\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport SelectField from 'material-ui/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport OutlierAnalyisTable from '../../components/outlier-analysis-table/OutlierAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '../../locales'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nexport const DEFAULT_STANDARD_DEVIATION = 3.0\n\nclass StdDevOutlierAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'standardDeviation',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            standardDeviation: DEFAULT_STANDARD_DEVIATION,\n        }\n\n        this.start = this.start.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.standardDeviationOnChange = this.standardDeviationOnChange.bind(\n            this\n        )\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                StdDevOutlierAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    start() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.standardDeviationOutliersAnalysis, {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n                standardDeviation: this.state.standardDeviation,\n            })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            OutlierAnalyisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    standardDeviationOnChange(event, index, value) {\n        this.setState({ standardDeviation: value })\n    }\n\n    toggleCheckbox(element) {\n        const api = this.context.d2.Api.getApi()\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                this.context.updateAppState({\n                    pageState: {\n                        loading: true,\n                    },\n                })\n                api.post(apiConf.endpoints.markDataValue, {\n                    followups: [\n                        OutlierAnalyisTable.convertElementToToggleFollowupRequest(\n                            currentElement\n                        ),\n                    ],\n                })\n                    .then(() => {\n                        if (this.isPageMounted()) {\n                            currentElement.marked = !currentElement.marked\n                            elements[i] = currentElement\n\n                            this.context.updateAppState({\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(\n                                        currentElement.marked\n                                            ? 'Marked'\n                                            : 'Unmarked'\n                                    ),\n                                },\n                                pageState: {\n                                    elements,\n                                    loading: false,\n                                },\n                            })\n                        }\n                    })\n                    .catch(() => {\n                        this.manageError()\n                    })\n                break\n            }\n        }\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.standardDeviation &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Std Dev Outlier Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                                <SelectField\n                                    id=\"standard-deviation\"\n                                    style={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t(\n                                        'Select number of standard deviations'\n                                    )}\n                                    onChange={this.standardDeviationOnChange}\n                                    value={this.state.standardDeviation}\n                                >\n                                    <MenuItem value={1.0} primaryText=\"1.0\" />\n                                    <MenuItem value={1.5} primaryText=\"1.5\" />\n                                    <MenuItem value={2.0} primaryText=\"2.0\" />\n                                    <MenuItem value={2.5} primaryText=\"2.5\" />\n                                    <MenuItem value={3} primaryText=\"3.0\" />\n                                    <MenuItem value={3.5} primaryText=\"3.5\" />\n                                    <MenuItem value={4} primaryText=\"4.0\" />\n                                    <MenuItem value={4.5} primaryText=\"4.5\" />\n                                    <MenuItem value={5} primaryText=\"5.0\" />\n                                </SelectField>\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('start')}\n                            onClick={this.start}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <OutlierAnalyisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default StdDevOutlierAnalysis\n","import React from 'react'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport OutlierAnalyisTable from '../../components/outlier-analysis-table/OutlierAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '../../locales'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nclass MinMaxOutlierAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            loading: false,\n        }\n\n        this.start = this.start.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                MinMaxOutlierAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    start() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            api.post(apiConf.endpoints.minMaxOutliersAnalysis, {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n            })\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            OutlierAnalyisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    toggleCheckbox(element) {\n        const api = this.context.d2.Api.getApi()\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                this.context.updateAppState({\n                    pageState: {\n                        loading: true,\n                    },\n                })\n                api.post(apiConf.endpoints.markDataValue, {\n                    followups: [\n                        OutlierAnalyisTable.convertElementToToggleFollowupRequest(\n                            currentElement\n                        ),\n                    ],\n                })\n                    .then(() => {\n                        if (this.isPageMounted()) {\n                            currentElement.marked = !currentElement.marked\n                            elements[i] = currentElement\n\n                            this.context.updateAppState({\n                                showSnackbar: true,\n                                snackbarConf: {\n                                    type: SUCCESS,\n                                    message: i18n.t(\n                                        currentElement.marked\n                                            ? 'Marked'\n                                            : 'Unmarked'\n                                    ),\n                                },\n                                pageState: {\n                                    elements,\n                                    loading: false,\n                                },\n                            })\n                        }\n                    })\n                    .catch(() => {\n                        this.manageError()\n                    })\n                break\n            }\n        }\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    {i18n.t('Min-Max Outlier Analysis')}\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('start')}\n                            onClick={this.start}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <OutlierAnalyisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default MinMaxOutlierAnalysis\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport {\n    Checkbox,\n    FontIcon,\n    RaisedButton,\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n    IconButton,\n    Dialog,\n    FlatButton,\n} from 'material-ui'\nimport i18n from '../../../locales'\nimport FormattedNumber from '../../../components/formatters/FormattedNumber'\nimport DownloadAs from '../../../components/download-as/DownloadAs'\nimport cssPageStyles from '../../Page.module.css'\nimport jsPageStyles from '../../PageStyles'\nimport styles from './FollowUpAnalysisTable.module.css'\nimport { apiConf } from '../../../server.conf'\n\nclass FollowUpAnalysisTable extends Component {\n    static propTypes = {\n        elements: PropTypes.array.isRequired,\n        toggleCheckbox: PropTypes.func.isRequired,\n        unfollow: PropTypes.func.isRequired,\n        loading: PropTypes.bool.isRequired,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    static generateElementKey = e =>\n        `${e.attributeOptionComboId}-${e.categoryOptionComboId}-${e.periodId}-${\n            e.sourceId\n        }-${e.dataElementId}`\n\n    static convertElementFromApiResponse = e => ({\n        key: FollowUpAnalysisTable.generateElementKey(e),\n        attributeOptionComboId: e.attributeOptionComboId,\n        categoryOptionComboId: e.categoryOptionComboId,\n        periodId: e.periodId,\n        organisationUnitId: e.sourceId,\n        dataElementId: e.dataElementId,\n        dataElement: e.dataElementName,\n        organisation: e.sourceName,\n        period: e.period.name,\n        min: e.min,\n        max: e.max,\n        value: Number.parseFloat(e.value, 10),\n        marked: !e.followup,\n        comment: e.comment,\n    })\n\n    static convertElementToUnFollowupRequest = e => ({\n        dataElementId: e.dataElementId,\n        periodId: e.periodId,\n        organisationUnitId: e.organisationUnitId,\n        categoryOptionComboId: e.categoryOptionComboId,\n        attributeOptionComboId: e.attributeOptionComboId,\n        followup: false,\n    })\n\n    static areElementsTheSame(element1, element2) {\n        return (\n            element1.attributeOptionComboId ===\n                element2.attributeOptionComboId &&\n            element1.categoryOptionComboId === element2.categoryOptionComboId &&\n            element1.periodId === element2.periodId &&\n            element1.organisationUnitId === element2.organisationUnitId &&\n            element1.dataElementId === element2.dataElementId\n        )\n    }\n\n    constructor() {\n        super()\n\n        this.state = {\n            showComment: false,\n            comment: null,\n        }\n\n        this.unfollow = this.unfollow.bind(this)\n        this.closeCommentDialog = this.closeCommentDialog.bind(this)\n    }\n\n    unfollow() {\n        const unfollowups = []\n        for (let i = 0; i < this.props.elements.length; i++) {\n            const e = this.props.elements[i]\n            if (e.marked) {\n                unfollowups.push(\n                    FollowUpAnalysisTable.convertElementToUnFollowupRequest(e)\n                )\n            }\n        }\n\n        this.props.unfollow(unfollowups)\n    }\n\n    closeCommentDialog() {\n        this.setState({ showComment: false })\n    }\n\n    updateCheckbox(element) {\n        this.props.toggleCheckbox(element)\n    }\n\n    showComment(element) {\n        if (element.comment) {\n            this.setState({\n                showComment: true,\n                comment: element.comment,\n            })\n        }\n    }\n\n    render() {\n        let oneChecked = false\n\n        const commentDialogActions = [\n            <FlatButton\n                label={i18n.t('Close')}\n                primary\n                onClick={this.closeCommentDialog}\n            />,\n        ]\n\n        // Table Rows\n        const rows = this.props.elements.map(element => {\n            const updateCheckbox = () => {\n                this.updateCheckbox(element)\n            }\n\n            const showComment = () => {\n                this.showComment(element)\n            }\n\n            oneChecked = element.marked ? true : oneChecked\n\n            return (\n                <TableRow key={element.key}>\n                    <TableRowColumn>{element.dataElement}</TableRowColumn>\n                    <TableRowColumn>{element.organisation}</TableRowColumn>\n                    <TableRowColumn>{element.period}</TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.min} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.value} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.right}>\n                        <FormattedNumber value={element.max} />\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.centerFlex}>\n                        <span className={cssPageStyles.checkboxWrapper}>\n                            <Checkbox\n                                checked={element.marked}\n                                onCheck={updateCheckbox}\n                                iconStyle={jsPageStyles.iconColor}\n                            />\n                        </span>\n                    </TableRowColumn>\n                    <TableRowColumn className={cssPageStyles.center}>\n                        {element.comment && (\n                            <IconButton key={element.key} onClick={showComment}>\n                                <FontIcon\n                                    className={'material-icons'}\n                                    style={jsPageStyles.cursorStyle}\n                                >\n                                    speaker_notes\n                                </FontIcon>\n                            </IconButton>\n                        )}\n                    </TableRowColumn>\n                </TableRow>\n            )\n        })\n\n        return (\n            <div>\n                <Dialog\n                    title={i18n.t('Comment')}\n                    actions={commentDialogActions}\n                    modal={false}\n                    open={this.state.showComment}\n                    onRequestClose={this.closeCommentDialog}\n                >\n                    <div id={'comment-content'}>{this.state.comment}</div>\n                </Dialog>\n                <div className={cssPageStyles.cardHeader}>\n                    <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n                </div>\n                <Table\n                    selectable={false}\n                    className={classNames(\n                        cssPageStyles.appTable,\n                        styles.followUpAnalysisTable\n                    )}\n                >\n                    <TableHeader\n                        displaySelectAll={false}\n                        adjustForCheckbox={false}\n                        enableSelectAll={false}\n                    >\n                        <TableRow>\n                            <TableHeaderColumn>\n                                {i18n.t('Data Element')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Organisation Unit')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn>\n                                {i18n.t('Period')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Min')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Value')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.right}>\n                                {i18n.t('Max')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Unfollow')}\n                            </TableHeaderColumn>\n                            <TableHeaderColumn className={cssPageStyles.center}>\n                                {i18n.t('Comment')}\n                            </TableHeaderColumn>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody displayRowCheckbox={false} stripedRows={false}>\n                        {rows}\n                    </TableBody>\n                </Table>\n                <div\n                    className={classNames(\n                        cssPageStyles.cardFooter,\n                        cssPageStyles.spaceBetween\n                    )}\n                >\n                    <RaisedButton\n                        id=\"unfollow-action\"\n                        primary\n                        disabled={this.props.loading || !oneChecked}\n                        label={i18n.t('unfollow')}\n                        onClick={this.unfollow}\n                    />\n                    <DownloadAs endpoint={apiConf.endpoints.reportAnalysis} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FollowUpAnalysisTable\n","import React from 'react'\nimport { FontIcon, IconButton } from 'material-ui'\nimport { Card, CardText } from 'material-ui/Card'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport { SUCCESS } from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbarTypes'\nimport classNames from 'classnames'\nimport Page from '../Page'\nimport AvailableDatasetsSelect from '../../components/available-datasets-select/AvailableDatasetsSelect'\nimport AvailableOrganisationUnitsTree from '../../components/available-organisation-units-tree/AvailableOrganisationUnitsTree'\nimport PageHelper from '../../components/page-helper/PageHelper'\nimport FollowUpAnalysisTable from './follow-up-analysis-table/FollowUpAnalysisTable'\nimport AlertBar from '../../components/alert-bar/AlertBar'\nimport i18n from '../../locales'\nimport { convertDateToApiDateFormat } from '../../helpers/dates'\nimport { getDocsKeyForSection } from '../sections.conf'\nimport { apiConf } from '../../server.conf'\nimport cssPageStyles from '../Page.module.css'\nimport jsPageStyles from '../PageStyles'\n\nclass FollowUpAnalysis extends Page {\n    static STATE_PROPERTIES = [\n        'showTable',\n        'startDate',\n        'endDate',\n        'organisationUnitId',\n        'dataSetIds',\n        'elements',\n        'loading',\n    ]\n\n    constructor() {\n        super()\n\n        this.state = {\n            showTable: false,\n            startDate: new Date(),\n            endDate: new Date(),\n            organisationUnitId: null,\n            dataSetIds: [],\n            elements: [],\n            loading: false,\n        }\n\n        this.getFollowUpList = this.getFollowUpList.bind(this)\n        this.back = this.back.bind(this)\n\n        this.startDateOnChange = this.startDateOnChange.bind(this)\n        this.endDateOnChange = this.endDateOnChange.bind(this)\n        this.organisationUnitOnChange = this.organisationUnitOnChange.bind(this)\n        this.dataSetsOnChange = this.dataSetsOnChange.bind(this)\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n        this.unfollow = this.unfollow.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const nextState = {}\n\n        Object.keys(nextProps).forEach(property => {\n            if (\n                nextProps.hasOwnProperty(property) &&\n                FollowUpAnalysis.STATE_PROPERTIES.includes(property)\n            ) {\n                nextState[property] = nextProps[property]\n            }\n        })\n\n        if (nextState !== {}) {\n            this.setState(nextState)\n        }\n    }\n\n    getFollowUpList() {\n        const api = this.context.d2.Api.getApi()\n        if (this.isFormValid()) {\n            this.context.updateAppState({\n                pageState: {\n                    loading: true,\n                },\n            })\n\n            const request = {\n                startDate: convertDateToApiDateFormat(this.state.startDate),\n                endDate: convertDateToApiDateFormat(this.state.endDate),\n                ou: this.state.organisationUnitId,\n                ds: this.state.dataSetIds,\n            }\n\n            api.post(apiConf.endpoints.folloupAnalysis, request)\n                .then(response => {\n                    if (this.isPageMounted()) {\n                        const elements = response.map(\n                            FollowUpAnalysisTable.convertElementFromApiResponse\n                        )\n\n                        const feedback =\n                            elements && elements.length > 0\n                                ? {\n                                      showSnackbar: false,\n                                  }\n                                : {\n                                      showSnackbar: true,\n                                      snackbarConf: {\n                                          type: SUCCESS,\n                                          message: i18n.t('No values found'),\n                                      },\n                                  }\n\n                        this.context.updateAppState({\n                            ...feedback,\n                            pageState: {\n                                loading: false,\n                                elements,\n                                showTable: elements && elements.length > 0,\n                            },\n                        })\n                    }\n                })\n                .catch(() => {\n                    this.manageError()\n                })\n        }\n    }\n\n    back() {\n        this.setState({ showTable: false })\n    }\n\n    startDateOnChange(event, date) {\n        this.setState({ startDate: new Date(date) })\n    }\n\n    endDateOnChange(event, date) {\n        this.setState({ endDate: new Date(date) })\n    }\n\n    organisationUnitOnChange(organisationUnitId) {\n        this.setState({ organisationUnitId })\n    }\n\n    dataSetsOnChange(event) {\n        const dataSetIds = []\n        const selectedOptions = event.target.selectedOptions\n        for (let i = 0; i < selectedOptions.length; i++) {\n            dataSetIds.push(selectedOptions[i].value)\n        }\n        this.setState({ dataSetIds })\n    }\n\n    toggleCheckbox(element) {\n        const elements = this.state.elements\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i]\n            if (currentElement.key === element.key) {\n                currentElement.marked = !currentElement.marked\n                elements[i] = currentElement\n                this.setState({ elements })\n                break\n            }\n        }\n    }\n\n    unfollow(unfollowups) {\n        const api = this.context.d2.Api.getApi()\n        this.context.updateAppState({\n            pageState: {\n                loading: true,\n            },\n        })\n\n        api.post(apiConf.endpoints.markDataValue, {\n            followups: unfollowups,\n        })\n            .then(() => {\n                if (this.isPageMounted()) {\n                    // remove unfollowed elements\n                    const elements = this.state.elements.filter(element => {\n                        for (let j = 0; j < unfollowups.length; j++) {\n                            const unfollow = unfollowups[j]\n                            if (\n                                FollowUpAnalysisTable.areElementsTheSame(\n                                    element,\n                                    unfollow\n                                )\n                            ) {\n                                return false\n                            }\n                        }\n\n                        return true\n                    })\n\n                    this.context.updateAppState({\n                        showSnackbar: true,\n                        snackbarConf: {\n                            type: SUCCESS,\n                            message: i18n.t('Unfollow done'),\n                        },\n                        pageState: {\n                            loading: false,\n                            elements,\n                        },\n                    })\n                }\n            })\n            .catch(() => {\n                this.manageError()\n            })\n    }\n\n    isFormValid() {\n        return (\n            this.state.startDate &&\n            this.state.endDate &&\n            this.state.organisationUnitId &&\n            this.state.dataSetIds &&\n            this.state.dataSetIds.length > 0\n        )\n    }\n\n    isActionDisabled() {\n        return !this.isFormValid() || this.state.loading\n    }\n\n    showAlertBar() {\n        return (\n            this.state.showTable &&\n            this.state.elements &&\n            this.state.elements.length >= apiConf.results.analysis.limit\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={cssPageStyles.pageHeader}>\n                    <IconButton\n                        onClick={this.back}\n                        style={{\n                            display: this.state.showTable ? 'inline' : 'none',\n                        }}\n                    >\n                        <FontIcon className={'material-icons'}>\n                            arrow_back\n                        </FontIcon>\n                    </IconButton>\n                    <span>{i18n.t('Follow-Up Analysis')}</span>\n                    <PageHelper\n                        sectionDocsKey={getDocsKeyForSection(\n                            this.props.sectionKey\n                        )}\n                    />\n                </h1>\n                <AlertBar show={this.showAlertBar()} />\n                <Card>\n                    {/* FORM: hidden using style to avoid not needed api requests when going back from table */}\n                    <CardText\n                        style={{\n                            display: !this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div\n                                id=\"data-sets-container\"\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Data Set')}\n                                </div>\n                                <AvailableDatasetsSelect\n                                    onChange={this.dataSetsOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <div className={cssPageStyles.formLabel}>\n                                    {i18n.t('Parent organisation unit')}\n                                </div>\n                                <AvailableOrganisationUnitsTree\n                                    onChange={this.organisationUnitOnChange}\n                                />\n                            </div>\n                            <div\n                                className={classNames(\n                                    'col-md-4',\n                                    cssPageStyles.section\n                                )}\n                            >\n                                <DatePicker\n                                    id=\"start-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('Start Date')}\n                                    onChange={this.startDateOnChange}\n                                    defaultDate={new Date()}\n                                    maxDate={this.state.endDate}\n                                    value={this.state.startDate}\n                                />\n                                <DatePicker\n                                    id=\"end-date\"\n                                    textFieldStyle={jsPageStyles.inputForm}\n                                    floatingLabelText={i18n.t('End Date')}\n                                    onChange={this.endDateOnChange}\n                                    defaultDate={new Date()}\n                                    minDate={this.state.startDate}\n                                    value={this.state.endDate}\n                                />\n                            </div>\n                        </div>\n                        <RaisedButton\n                            id=\"start-analysis-button\"\n                            className={cssPageStyles.mainButton}\n                            primary\n                            label={i18n.t('follow up')}\n                            onClick={this.getFollowUpList}\n                            disabled={this.isActionDisabled()}\n                        />\n                    </CardText>\n                    {/* TABLE */}\n                    <CardText\n                        id=\"results-table\"\n                        style={{\n                            display: this.state.showTable ? 'block' : 'none',\n                        }}\n                    >\n                        <FollowUpAnalysisTable\n                            elements={this.state.elements}\n                            toggleCheckbox={this.toggleCheckbox}\n                            unfollow={this.unfollow}\n                            loading={this.state.loading}\n                        />\n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default FollowUpAnalysis\n","import ValidationRulesAnalysis from './validation-rules-analysis/ValidationRulesAnalysis'\nimport StdDevOutlierAnalysis from './std-dev-outlier-analysis/StdDevOutlierAnalysis'\nimport MinMaxOutlierAnalysis from './min-max-outlier-analysis/MinMaxOutlierAnalysis'\nimport FollowUpAnalysis from './follow-up-analysis/FollowUpAnalysis'\n\nexport const VALIDATION_RULES_ANALYSIS_SECTION_KEY = 'validationRulesAnalysis'\nexport const STD_DEV_OUTLIER_ANALYSIS_SECTION_KEY = 'stdDevOutlierAnalysis'\nexport const MIN_MAX_OUTLIER_ANALYSIS_SECTION_KEY = 'minMaxOutlierAnalysis'\nexport const FOLLOW_UP_ANALYSIS_SECTION_KEY = 'followUpAnalysis'\n\nexport const sections = [\n    {\n        key: VALIDATION_RULES_ANALYSIS_SECTION_KEY,\n        path: '/validation-rules-analysis',\n        component: ValidationRulesAnalysis,\n        info: {\n            label: 'Validation Rule Analysis',\n            icon: 'done_all',\n            description:\n                'Run validation rules in order to unveil anomalies and errors in the data in the database.',\n            actionText: 'Run Validation',\n            docs: 'validation_rule_analysis',\n        },\n    },\n    {\n        key: STD_DEV_OUTLIER_ANALYSIS_SECTION_KEY,\n        path: '/std-dev-outlier-analysis',\n        component: StdDevOutlierAnalysis,\n        info: {\n            label: 'Std Dev Outlier Analysis',\n            icon: 'show_chart',\n            description:\n                'Analyze potential outlier values based on standard deviations. Outlier values can be examined and marked for follow-up.',\n            actionText: 'Analyze',\n            docs: 'standard_deviation_analysis',\n        },\n    },\n    {\n        key: MIN_MAX_OUTLIER_ANALYSIS_SECTION_KEY,\n        path: '/min-max-outlier-analysis',\n        component: MinMaxOutlierAnalysis,\n        info: {\n            label: 'Min-Max Outlier Analysis',\n            icon: 'compare_arrows',\n            description:\n                'Analyze potential outlier values based on min and max values. Outlier values can be examined and marked for follow-up.',\n            actionText: 'Analyze',\n            docs: 'min_max_analysis',\n        },\n    },\n    {\n        key: FOLLOW_UP_ANALYSIS_SECTION_KEY,\n        path: '/follow-up-analysis',\n        component: FollowUpAnalysis,\n        info: {\n            label: 'Follow-Up Analysis',\n            icon: 'description',\n            description:\n                'View or edit data values marked for further follow-up during data entry or analysis.',\n            actionText: 'View Data Values',\n            docs: 'follow_up_analysis',\n        },\n    },\n]\n\nexport const getDocsKeyForSection = sectionKey => {\n    for (let i = 0; i < sections.length; i++) {\n        const section = sections[i]\n        if (section.key === sectionKey) {\n            return section.info.docs\n        }\n    }\n\n    return ''\n}\n\nexport default sections\n","import React from 'react'\nimport classNames from 'classnames'\nimport GridSection from './grid-section/GridSection'\nimport styles from './Home.module.css'\nimport { sections } from '../sections.conf'\n\nconst Home = () => {\n    const gridElements = sections.map(section => (\n        <div\n            key={section.key}\n            className={classNames(\n                'col-sm-12 col-md-6 col-lg-4',\n                styles.gridContainer\n            )}\n        >\n            <GridSection key={section.key} section={section} />\n        </div>\n    ))\n\n    return (\n        <div id=\"grid-list-id\" className=\"row\">\n            {gridElements}\n        </div>\n    )\n}\n\nexport default Home\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nclass NoMatch extends PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>\n                    No match for <code>{this.props.location.pathname}</code>\n                </h3>\n            </div>\n        )\n    }\n}\n\nexport default NoMatch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from '../../pages/home/Home'\nimport NoMatch from './NoMatch'\nimport { sections } from '../../pages/sections.conf'\n\nconst AppRouter = ({ pageState }) => {\n    const routes = sections.map(section => {\n        const routeRender = () => {\n            const Page = section.component\n            return <Page sectionKey={section.key} {...pageState} />\n        }\n        return (\n            <Route\n                key={section.key}\n                exact\n                path={section.path}\n                render={routeRender}\n            />\n        )\n    })\n\n    /* Home route */\n    const homeRouteRender = () => <Home sectionKey=\"home\" />\n\n    routes.push(<Route key=\"home\" exact path=\"/\" render={homeRouteRender} />)\n\n    /* No Match Route */\n    routes.push(<Route key=\"no-match-route\" component={NoMatch} />)\n\n    return (\n        <main>\n            <Switch>{routes}</Switch>\n        </main>\n    )\n}\n\nAppRouter.propTypes = {\n    pageState: PropTypes.object,\n}\n\nAppRouter.defaultProps = {\n    pageState: {},\n}\n\nexport default AppRouter\n","import 'typeface-roboto'\nimport 'material-design-icons-iconfont'\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { HeaderBar } from '@dhis2/ui-widgets'\nimport Sidebar from 'd2-ui/lib/sidebar/Sidebar.component'\nimport CircularProgress from 'd2-ui/lib/circular-progress/CircularProgress'\nimport FeedbackSnackbar from 'd2-ui/lib/feedback-snackbar/FeedbackSnackbar.component'\nimport './custom-css/D2UISidebarOverrides.css'\nimport i18n from './locales'\nimport { injectTranslationsToD2 } from './configI18n'\nimport AppRouter from './components/app-router/AppRouter'\nimport styles from './App.module.css'\nimport { sections } from './pages/sections.conf'\n\nclass App extends PureComponent {\n    static childContextTypes = {\n        showSnackbar: PropTypes.bool,\n        snackbarConf: PropTypes.shape({\n            type: PropTypes.string,\n            message: PropTypes.string,\n        }),\n        currentSection: PropTypes.string,\n        updateAppState: PropTypes.func,\n    }\n\n    static contextTypes = {\n        d2: PropTypes.object,\n    }\n\n    constructor(props, context) {\n        super(props)\n\n        injectTranslationsToD2(context.d2)\n\n        this.state = {\n            currentSection: '',\n            showSnackbar: false,\n            snackbarConf: {\n                type: '',\n                message: '',\n            },\n            pageState: {},\n        }\n\n        this.updateAppState = this.updateAppState.bind(this)\n    }\n\n    getChildContext() {\n        return {\n            showSnackbar: this.state.showSnackbar,\n            snackbarConf: this.state.snackbarConf,\n            currentSection: this.state.currentSection,\n            updateAppState: this.updateAppState,\n        }\n    }\n\n    updateAppState(appState) {\n        if (\n            appState.currentSection &&\n            !appState.pageState &&\n            this.state.currentSection !== appState.currentSection\n        ) {\n            // clear page state because we are updating page\n            this.setState({ ...appState, pageState: {}, showSnackbar: false })\n        } else {\n            this.setState(appState)\n        }\n    }\n\n    render() {\n        const nonOnChangeSection = () => null\n        const translatedSections = sections.map(section =>\n            Object.assign(section, {\n                icon: section.info.icon,\n                label: i18n.t(section.info.label),\n                containerElement: <Link to={section.path} />,\n            })\n        )\n\n        const feedbackElement = this.state.pageState.loading ? (\n            <div className={styles.centered}>\n                <CircularProgress />\n            </div>\n        ) : (\n            <FeedbackSnackbar\n                show={this.state.showSnackbar}\n                conf={this.state.snackbarConf}\n            />\n        )\n\n        return (\n            <div>\n                <HeaderBar appName={i18n.t('Data Quality')} />\n                <Sidebar\n                    sections={translatedSections}\n                    currentSection={this.state.currentSection}\n                    onChangeSection={nonOnChangeSection}\n                />\n                <div className={styles.contentWrapper}>\n                    <div className={styles.contentArea}>\n                        <AppRouter pageState={this.state.pageState} />\n                    </div>\n                </div>\n                <div id=\"feedback-snackbar\">{feedbackElement}</div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import Spacing from 'material-ui/styles/spacing'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport {\n    blue100,\n    blue700,\n    grey100,\n    grey400,\n    orange500,\n    orangeA200,\n    darkBlack,\n    white,\n} from 'material-ui/styles/colors'\nimport { fade } from 'material-ui/utils/colorManipulator'\n\nconst theme = {\n    spacing: Spacing,\n    fontFamily: 'Roboto, sans-serif',\n    palette: {\n        primary1Color: '#004ba0',\n        primary2Color: blue700,\n        primary3Color: blue100,\n        accent1Color: orange500,\n        accent2Color: grey100,\n        accent3Color: orangeA200,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey400,\n        disabledColor: fade(darkBlack, 0.3),\n    },\n}\n\nconst muiTheme = getMuiTheme(theme)\n\nexport default muiTheme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter, withRouter } from 'react-router-dom'\nimport { getUserSettings } from 'd2/lib/d2'\nimport D2UIApp from 'd2-ui/lib/app/D2UIApp'\nimport log from 'loglevel'\nimport { configI18n } from './configI18n'\nimport './index.css'\nimport App from './App'\nimport appTheme from './theme'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from '@dhis2/app-runtime'\nimport { CssReset } from '@dhis2/ui-core'\n\nlog.setLevel(\n    process.env.NODE_ENV === 'production' ? log.levels.INFO : log.levels.DEBUG\n)\n\nconst AppComponent = withRouter(App)\nconst baseUrl = `${process.env.REACT_APP_DHIS2_BASE_URL}/api/${\n    process.env.REACT_APP_DHIS2_API_VERSION\n}`\n\nconst config = {\n    baseUrl: process.env.REACT_APP_DHIS2_BASE_URL,\n    apiVersion: process.env.REACT_APP_DHIS2_API_VERSION,\n}\n\nReactDOM.render(\n    <Provider config={config}>\n        <CssReset />\n        <D2UIApp\n            muiTheme={appTheme}\n            initConfig={{\n                baseUrl,\n                schemas: ['organisationUnit', 'dataSet', 'validationRuleGroup'],\n            }}\n        >\n            <HashRouter>\n                <AppComponent />\n            </HashRouter>\n        </D2UIApp>\n    </Provider>,\n    document.getElementById('root')\n)\n\ngetUserSettings().then(userSettings => {\n    const uiLocale = userSettings.keyUiLocale\n    sessionStorage.setItem('uiLocale', uiLocale || 'en')\n\n    configI18n(userSettings)\n})\n\nserviceWorker.register()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridElement\":\"GridSection_gridElement__3DOqL\",\"gridTitleBar\":\"GridSection_gridTitleBar__2-OEV\",\"gridTitleDescription\":\"GridSection_gridTitleDescription__1jy96\",\"gridIcon\":\"GridSection_gridIcon__1INTx\",\"gridDescription\":\"GridSection_gridDescription__1NNso\",\"gridActionText\":\"GridSection_gridActionText__1S-Gc\"};"],"sourceRoot":""}